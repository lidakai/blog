{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/diaspora/source/css/diaspora.css","path":"css/diaspora.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/diaspora.js","path":"js/diaspora.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","path":"photoswipe/photoswipe-ui-default.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","path":"photoswipe/photoswipe.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","path":"photoswipe/photoswipe.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","path":"photoswipe/photoswipe.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","path":"photoswipe/default-skin/default-skin.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","path":"photoswipe/default-skin/preloader.gif","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover.jpg","path":"img/cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","path":"img/welcome-cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","path":"photoswipe/photoswipe-ui-default.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","path":"photoswipe/default-skin/default-skin.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","path":"photoswipe/default-skin/default-skin.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/diaspora/.gitignore","hash":"39e91775f38f3dbe2cf60219af92ecb8af58f783","modified":1554952112427},{"_id":"themes/diaspora/_config.yml","hash":"37d0208e2591e24f79d71e8c5edc9b541c52ccd3","modified":1555381324042},{"_id":"source/_posts/MD编辑器就是不告诉你之表情.md","hash":"05d5af0f8dbcacd7789c9f1e75873511aa05ed33","modified":1557213613378},{"_id":"source/_posts/hello-world-day0.md","hash":"e1c2a57414663a883c1ca6c5ff098bd38c937ae0","modified":1556012970236},{"_id":"themes/diaspora/LICENSE","hash":"6d3068ec88faa33b77e425407a5bc050d96914dc","modified":1554952112427},{"_id":"themes/diaspora/README.md","hash":"79a357d253597cecce786da3dabcb535bdba4d91","modified":1554952112428},{"_id":"source/_posts/前端性能优化点-day05.md","hash":"aeb661e23f003f88980055f93fe0e609be0165fb","modified":1556012960220},{"_id":"source/categories/index.md","hash":"2814666223fe439617925403e609bca7397413dc","modified":1555378973163},{"_id":"source/other/index.md","hash":"4246e6ad1692ea8de419f73b8974e917f332c4fe","modified":1557213387190},{"_id":"source/tags/index.md","hash":"9866730123a2c422a98393937ca3f26ee3a57b3e","modified":1555380096346},{"_id":"themes/diaspora/languages/default.yml","hash":"cb49d6c405ac17b25c8822bc0050fabdf03ae535","modified":1554952112429},{"_id":"themes/diaspora/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1554952112430},{"_id":"themes/diaspora/languages/it.yml","hash":"2b5323867169b25e52009696680a12811b226c1e","modified":1554952112430},{"_id":"themes/diaspora/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1554952112431},{"_id":"themes/diaspora/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1554952112431},{"_id":"themes/diaspora/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1554952112432},{"_id":"themes/diaspora/languages/zh-CN.yml","hash":"a10d783759847b5c2fc460f3e99000588e76d7ea","modified":1554952112433},{"_id":"themes/diaspora/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1554952112433},{"_id":"source/_posts/前端性能优化相关编码规范-day04.md","hash":"6f6e78e5f2e87add9aefe6eebd1f1d7961db01e6","modified":1556012510340},{"_id":"themes/diaspora/layout/category.ejs","hash":"a0cfecbd3216ebeb7e252b5307dfa0f580742d8c","modified":1554952112446},{"_id":"themes/diaspora/layout/index.ejs","hash":"9990bb75766b8888c81dac670fc2ffa1c178c883","modified":1554952112447},{"_id":"themes/diaspora/layout/layout.ejs","hash":"6ae230910cd17f113af54704bdc4774f265d9e4e","modified":1554952112447},{"_id":"source/_posts/前端规范-dya03.md","hash":"ebb4d6823562d543e9656c980b796fee75c7a7ed","modified":1556012512421},{"_id":"themes/diaspora/layout/post.ejs","hash":"a463095027c4f25ed44bb7dc9514b46d99e381c8","modified":1554952112448},{"_id":"themes/diaspora/layout/tag.ejs","hash":"a0cfecbd3216ebeb7e252b5307dfa0f580742d8c","modified":1554952112449},{"_id":"themes/diaspora/scripts/page_title.js","hash":"3cf8cded8642f91782f226ea0fc4318b1859640c","modified":1554952112450},{"_id":"themes/diaspora/layout/_partial/categories.ejs","hash":"11bf044f3fefe42d4aa3f2205d4a3be8a8138953","modified":1554952112434},{"_id":"themes/diaspora/layout/_partial/google-analytics.ejs","hash":"d50db25113e28754bcfe109b4ea784ee68bc3bde","modified":1554952112435},{"_id":"source/_posts/puppeteer-day1.md","hash":"4631e8451cbecf38bf64cafd5d81995438937eaa","modified":1556011500990},{"_id":"themes/diaspora/layout/_partial/list.ejs","hash":"3d01f5eead06f278ed51664ced705679d1248f7b","modified":1554952112436},{"_id":"themes/diaspora/layout/archive.ejs","hash":"ea4e20aa5b13ea8c615b28607a123ca1ee2dfbc5","modified":1554952112446},{"_id":"themes/diaspora/layout/_partial/pagination.ejs","hash":"f561e68e9dd10ae1cf2e79e8425f7e9b86ed723e","modified":1554952112437},{"_id":"themes/diaspora/layout/page.ejs","hash":"02d3e512e4c1fcb8fd68361b142f71d700c21c34","modified":1554952112448},{"_id":"themes/diaspora/layout/_partial/head.ejs","hash":"6cbd305d6d5d80316d07b2dbef500dfd7f67a19c","modified":1554952112435},{"_id":"themes/diaspora/layout/_partial/menu.ejs","hash":"08b45261ca8f80dc1ec5b30ac4bd532822d3e652","modified":1554952112437},{"_id":"themes/diaspora/layout/_partial/scripts.ejs","hash":"670900a4d225ce2771dc739fcf7a674b06f0ac38","modified":1554952112444},{"_id":"themes/diaspora/layout/_partial/tags.ejs","hash":"3f78d2fe0385487dee1efd1fc5cdd4aeca649ab5","modified":1554952112445},{"_id":"themes/diaspora/layout/_partial/screen.ejs","hash":"7d78e085d3b3913b16d88ea61e245599f7e58b0c","modified":1554952112443},{"_id":"themes/diaspora/layout/_partial/photoswipe.ejs","hash":"bb76ab13612d56211278c46746e6646034e9ee68","modified":1554952112438},{"_id":"themes/diaspora/source/css/diaspora.css","hash":"f94add4dfc251bc4e6c07e9e53e214c4574ee9ac","modified":1554952112452},{"_id":"themes/diaspora/source/img/favicon.ico","hash":"805d8a797cbaf227e52c1aa81e5f370aa6875f01","modified":1554952333591},{"_id":"themes/diaspora/source/img/logo.png","hash":"a2fde75b8e017ae1c02d5615811ff5a96b56e4b7","modified":1554952028342},{"_id":"themes/diaspora/source/js/diaspora.js","hash":"107843b6970c9ba1ff377fd3137d67e050bd9cad","modified":1554952112457},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","hash":"2a606363f7ff46d67cd93fa0932dca8d5a48bd20","modified":1554952112463},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","hash":"e6d93b786de172eca4fbd96527cc0dadd202aee6","modified":1554952112465},{"_id":"themes/diaspora/source/js/jquery.min.js","hash":"cf9b759270c1c7c603d8d3879d2c5fabc621d004","modified":1554952112458},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","hash":"37db9dbd8d3a4025a817982fc02c0140d69ca6c4","modified":1554952112466},{"_id":"themes/diaspora/source/js/plugin.js","hash":"2e2108dc052d5e96ace35f091d8dbecd5f587b65","modified":1554952112459},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","hash":"def03cfc3e7333b081e4cea1508bab3015e860c9","modified":1554952112467},{"_id":"themes/diaspora/layout/_partial/post/gitalk.ejs","hash":"ecbbf317fbb9824388c46c4049582f0a65ec1d01","modified":1554952112441},{"_id":"themes/diaspora/layout/_partial/post/date.ejs","hash":"bb624f77d29594b8d3a7dd82f1aee6eead6b9b61","modified":1554952112440},{"_id":"themes/diaspora/layout/_partial/post/article.ejs","hash":"96e962f78ef989c1a4b07a28d527e2d6f616711b","modified":1554952112439},{"_id":"themes/diaspora/layout/_partial/post/item.ejs","hash":"db2d7aafe41e0e579964bc6303e54f9b3f03127a","modified":1554952112442},{"_id":"themes/diaspora/layout/_partial/post/tag.ejs","hash":"00398c91d88a106301cac57f821a113b66f4fb2a","modified":1554952112442},{"_id":"themes/diaspora/layout/_partial/post/title.ejs","hash":"fc807200c48d99b510ca38699506af67df2d81e6","modified":1554952112443},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1554952112461},{"_id":"themes/diaspora/layout/_partial/post/header.ejs","hash":"6541cd330fbc6a709d5b383283ea3619d9f26a72","modified":1554952112441},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1554952112462},{"_id":"themes/diaspora/source/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1554952112454},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1554952112456},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","hash":"b34f592dc9765f1e6f91343197a623dfb7acfaab","modified":1554952112464},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","hash":"9106e9fabb78ef1ce4cc896cfec003fcbd9e1256","modified":1554952112461},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1554952112462},{"_id":"public/categories/index.html","hash":"4b32613b896049578973fc91ae46345c601a2f3d","modified":1557214024199},{"_id":"public/other/index.html","hash":"6e318058df5c37715577e7c709862ac22c6fa722","modified":1557213414230},{"_id":"public/tags/index.html","hash":"582e97b602f10a262bb64a328d961c223d7e22ff","modified":1557214024199},{"_id":"public/2018/04/10/hello-world-day0/index.html","hash":"dfe5aab17c1376ad2377c90e26ca2af6400b1c86","modified":1557213414231},{"_id":"public/2018/04/10/puppeteer-day1/index.html","hash":"b29feeb907135bbc47315eae3aee2c28c33a49cd","modified":1557213414231},{"_id":"public/archives/index.html","hash":"cb7690afa98c8f849de63eae1c61350d49ec0bb2","modified":1557214024208},{"_id":"public/archives/2018/index.html","hash":"56ab8ea473c1fdb0468f1f0f34e4c496f98afb9d","modified":1557214024208},{"_id":"public/archives/2018/04/index.html","hash":"cff7bf45dc61fdab6ff4a0920448b9c4aa53ca99","modified":1557214024209},{"_id":"public/archives/2018/05/index.html","hash":"ce611a269a811cfa621d2ec095842e242ac1210f","modified":1557214024209},{"_id":"public/archives/2018/06/index.html","hash":"a561921e5d46a68cf5f6e2353eb74f2edebe162e","modified":1557214024209},{"_id":"public/archives/2018/08/index.html","hash":"a8e9ba182817f4901f1570a2ec87d4af26a71da2","modified":1557214024209},{"_id":"public/categories/大杂烩/index.html","hash":"71d8d071a82e70d61723a1e90aafc0e1ac59d249","modified":1557213618882},{"_id":"public/index.html","hash":"b75137b75fc92f73d721f2425dcb2a4fb989fc78","modified":1557214113980},{"_id":"public/tags/前端工程化/index.html","hash":"ec4ee2e71c425a0273a3728a2767da9b7147f395","modified":1557213414231},{"_id":"public/tags/前端性能/index.html","hash":"94c991596ee9d648e093a4c4536447110e86e14a","modified":1557213414231},{"_id":"public/tags/NodeJs/index.html","hash":"8009cb0eb4958d579229576737c2606a3b478e86","modified":1557213414232},{"_id":"public/tags/前端规范/index.html","hash":"67c93ffc6ce9334a24338930972577b0c68a5e24","modified":1557213414232},{"_id":"public/tags/MD/index.html","hash":"9de78f1137c07a1f71c4a7bd55887a6b053ac726","modified":1557213618898},{"_id":"public/2018/08/02/前端性能优化点-day05/index.html","hash":"79a9f96960728a202093c5529986477705172218","modified":1557213414232},{"_id":"public/2018/06/22/前端性能优化相关编码规范-day04/index.html","hash":"49b5fe44f6b9c796466cdfc471fead32f8e71fb8","modified":1557213414232},{"_id":"public/2018/05/12/前端规范-dya03/index.html","hash":"8763e248ca1870bda781ea995a9aaad60467112b","modified":1557213414232},{"_id":"public/2018/05/07/MD编辑器就是不告诉你之表情/index.html","hash":"4fb7c850cd56a5d498c77cbb1b5a70153d79defa","modified":1557213414232},{"_id":"public/img/favicon.ico","hash":"805d8a797cbaf227e52c1aa81e5f370aa6875f01","modified":1557213414239},{"_id":"public/img/logo.png","hash":"a2fde75b8e017ae1c02d5615811ff5a96b56e4b7","modified":1557213414239},{"_id":"public/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1557213414239},{"_id":"public/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1557213414239},{"_id":"public/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1557213414239},{"_id":"public/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1557213414251},{"_id":"public/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1557213414258},{"_id":"public/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1557213414258},{"_id":"public/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1557213414258},{"_id":"public/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1557213414265},{"_id":"public/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1557213414265},{"_id":"public/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1557213414265},{"_id":"public/css/diaspora.css","hash":"7de3f43e4084e4594cdefb3ac36b0e628987c25b","modified":1557213414270},{"_id":"public/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1557213414272},{"_id":"public/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1557213414283},{"_id":"public/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1557213414321},{"_id":"public/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1557213414322},{"_id":"public/archives/2019/index.html","hash":"cd7ed6094408cd932039bf029282dc8f9053fa4e","modified":1557214024209},{"_id":"public/archives/2019/05/index.html","hash":"119b30a6f7ef68169368bf98c379291fb891628e","modified":1557214024209},{"_id":"public/2019/05/07/MD编辑器就是不告诉你之表情/index.html","hash":"d22a73178f1fc32880c735a013b65131d6e39372","modified":1557213618900},{"_id":"source/_posts/JS-数组sort方法用的是哪种排序算法.md","hash":"7873732117c3ddf1e7a8872eab0d41baa36c1d83","modified":1557213823738},{"_id":"public/archives/2019/04/index.html","hash":"658d10433729a6898a66a8f2c9f373e06449c18e","modified":1557214024209},{"_id":"public/tags/javaScript/index.html","hash":"61be95b1a5da96e3ac3b13471c31a9a138cf0c2b","modified":1557214113980},{"_id":"public/categories/javaScript/index.html","hash":"f6a65e0a95500687d12347cfabc2af74e2ef0d39","modified":1557214113980},{"_id":"public/2019/04/10/JS-数组sort方法用的是哪种排序算法/index.html","hash":"9d43931c268517c306db31dac0c6ecd886a7e068","modified":1557213829101},{"_id":"source/_posts/converting.md","hash":"b4492933c09ce50def9eed13526121a2f35ea5ea","modified":1557214108910},{"_id":"public/2019/04/08/converting/index.html","hash":"3a2ef33c78f1cfc6a16dfb83a509ddc2268fcd0a","modified":1557213904036},{"_id":"source/_posts/node_fs.md","hash":"364c780fb23179e31e8dbd83bb23c845b05160e3","modified":1557214018993},{"_id":"public/2018/11/12/node_fs/index.html","hash":"bfce9a32248c55a1c4faa959ef08ddd65bdbf8be","modified":1557214024215},{"_id":"public/archives/2018/11/index.html","hash":"58ae1c44e71af43547e1baca3eae51156350a3ad","modified":1557214024215},{"_id":"public/categories/nodeJs/index.html","hash":"9092788fc5ce2ca0fa7a70554c027207a236d6b7","modified":1557214024216},{"_id":"public/tags/fs/index.html","hash":"e171d22bff0635344c973727cb36c1ee56a2836c","modified":1557214024216}],"Category":[{"name":"大杂烩","_id":"cjvdgnrom00017wumoarih6ic"},{"name":"javaScript","_id":"cjvdgwo1q00013sumu11b4835"},{"name":"nodeJs","_id":"cjvdh0uiw0001jcumhe689x58"}],"Data":[],"Page":[{"title":"大杂烩","date":"2019-04-10T10:40:49.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\n# 分类\ntitle: 大杂烩\ndate: 2019-04-10 18:40:49\ntype: \"categories\"\n---","updated":"2019-04-16T01:42:53.163Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjvdgnrow00057wumzz8pspy5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"other","date":"2019-04-10T10:42:16.000Z","type":"other","_content":"\n\n## 前端开发工程师 - 一个伪文艺青年的\"不归路\"\n```\n#：\n愿漂泊的人都有酒喝 愿孤独的人都会唱歌。\n愿相爱的人都有未来，愿等待的人都有回答。\n愿孤单的人不必永远逞强，愿逞强的人身边永远都有个肩膀。\n愿肩膀可以接住你的欢喜忧伤，愿有情人永生执手相望。\n愿你被这世界温柔相待，愿这爱能触动你心底那根柔软的弦。\n愿你最爱的人，也最爱你。❤️\n```\n> 毕业到如今转眼好多年，白头发的数量和工作经验一样，越来越多。\n\n目前就职于杭州某电商公司，B端项目，曾就职草根金融。\n\n这段时间也确实有点迷茫，想要换个环境，感觉这一路走来，无论是好的坏的都让我受益匪浅，感触颇多，这段时间成长很快，无论是思想上、精神上、还是...面貌上。\n\n之前面试HR常问的一个问题就是你后续的职业规划是希望走技术岗还是管理岗，我的回答始终是`管理岗`，可能是上学期间当学生会主席那时候培养起来的控制欲，期望一切都处于可控范围内，要主动非被动。可是，我现在想法变了，可能是时间和经历给了我答案，职场如战场这句话真的很真实，只有体验过才知道其中的酸甜苦辣，还是纯粹一点好，走技术流吧，哈哈哈..\n\n","source":"other/index.md","raw":"---\ntitle: other\ndate: 2019-04-10 18:42:16\ntype: \"other\"\n---\n\n\n## 前端开发工程师 - 一个伪文艺青年的\"不归路\"\n```\n#：\n愿漂泊的人都有酒喝 愿孤独的人都会唱歌。\n愿相爱的人都有未来，愿等待的人都有回答。\n愿孤单的人不必永远逞强，愿逞强的人身边永远都有个肩膀。\n愿肩膀可以接住你的欢喜忧伤，愿有情人永生执手相望。\n愿你被这世界温柔相待，愿这爱能触动你心底那根柔软的弦。\n愿你最爱的人，也最爱你。❤️\n```\n> 毕业到如今转眼好多年，白头发的数量和工作经验一样，越来越多。\n\n目前就职于杭州某电商公司，B端项目，曾就职草根金融。\n\n这段时间也确实有点迷茫，想要换个环境，感觉这一路走来，无论是好的坏的都让我受益匪浅，感触颇多，这段时间成长很快，无论是思想上、精神上、还是...面貌上。\n\n之前面试HR常问的一个问题就是你后续的职业规划是希望走技术岗还是管理岗，我的回答始终是`管理岗`，可能是上学期间当学生会主席那时候培养起来的控制欲，期望一切都处于可控范围内，要主动非被动。可是，我现在想法变了，可能是时间和经历给了我答案，职场如战场这句话真的很真实，只有体验过才知道其中的酸甜苦辣，还是纯粹一点好，走技术流吧，哈哈哈..\n\n","updated":"2019-05-07T07:16:27.190Z","path":"other/index.html","comments":1,"layout":"page","_id":"cjvdgnrox00067wum7ptau8y6","content":"<h2 id=\"前端开发工程师-一个伪文艺青年的”不归路”\"><a href=\"#前端开发工程师-一个伪文艺青年的”不归路”\" class=\"headerlink\" title=\"前端开发工程师 - 一个伪文艺青年的”不归路”\"></a>前端开发工程师 - 一个伪文艺青年的”不归路”</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#：</span><br><span class=\"line\">愿漂泊的人都有酒喝 愿孤独的人都会唱歌。</span><br><span class=\"line\">愿相爱的人都有未来，愿等待的人都有回答。</span><br><span class=\"line\">愿孤单的人不必永远逞强，愿逞强的人身边永远都有个肩膀。</span><br><span class=\"line\">愿肩膀可以接住你的欢喜忧伤，愿有情人永生执手相望。</span><br><span class=\"line\">愿你被这世界温柔相待，愿这爱能触动你心底那根柔软的弦。</span><br><span class=\"line\">愿你最爱的人，也最爱你。❤️</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>毕业到如今转眼好多年，白头发的数量和工作经验一样，越来越多。</p>\n</blockquote>\n<p>目前就职于杭州某电商公司，B端项目，曾就职草根金融。</p>\n<p>这段时间也确实有点迷茫，想要换个环境，感觉这一路走来，无论是好的坏的都让我受益匪浅，感触颇多，这段时间成长很快，无论是思想上、精神上、还是…面貌上。</p>\n<p>之前面试HR常问的一个问题就是你后续的职业规划是希望走技术岗还是管理岗，我的回答始终是<code>管理岗</code>，可能是上学期间当学生会主席那时候培养起来的控制欲，期望一切都处于可控范围内，要主动非被动。可是，我现在想法变了，可能是时间和经历给了我答案，职场如战场这句话真的很真实，只有体验过才知道其中的酸甜苦辣，还是纯粹一点好，走技术流吧，哈哈哈..</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前端开发工程师-一个伪文艺青年的”不归路”\"><a href=\"#前端开发工程师-一个伪文艺青年的”不归路”\" class=\"headerlink\" title=\"前端开发工程师 - 一个伪文艺青年的”不归路”\"></a>前端开发工程师 - 一个伪文艺青年的”不归路”</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#：</span><br><span class=\"line\">愿漂泊的人都有酒喝 愿孤独的人都会唱歌。</span><br><span class=\"line\">愿相爱的人都有未来，愿等待的人都有回答。</span><br><span class=\"line\">愿孤单的人不必永远逞强，愿逞强的人身边永远都有个肩膀。</span><br><span class=\"line\">愿肩膀可以接住你的欢喜忧伤，愿有情人永生执手相望。</span><br><span class=\"line\">愿你被这世界温柔相待，愿这爱能触动你心底那根柔软的弦。</span><br><span class=\"line\">愿你最爱的人，也最爱你。❤️</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>毕业到如今转眼好多年，白头发的数量和工作经验一样，越来越多。</p>\n</blockquote>\n<p>目前就职于杭州某电商公司，B端项目，曾就职草根金融。</p>\n<p>这段时间也确实有点迷茫，想要换个环境，感觉这一路走来，无论是好的坏的都让我受益匪浅，感触颇多，这段时间成长很快，无论是思想上、精神上、还是…面貌上。</p>\n<p>之前面试HR常问的一个问题就是你后续的职业规划是希望走技术岗还是管理岗，我的回答始终是<code>管理岗</code>，可能是上学期间当学生会主席那时候培养起来的控制欲，期望一切都处于可控范围内，要主动非被动。可是，我现在想法变了，可能是时间和经历给了我答案，职场如战场这句话真的很真实，只有体验过才知道其中的酸甜苦辣，还是纯粹一点好，走技术流吧，哈哈哈..</p>\n"},{"title":"tags","date":"2019-04-10T10:42:16.000Z","type":"tags","_content":"#nodeJs\ncss\njavascript\nhtml","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-04-10 18:42:16\ntype: \"tags\"\n---\n#nodeJs\ncss\njavascript\nhtml","updated":"2019-04-16T02:01:36.346Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjvdgnroz00077wumn0nq62ia","content":"<p>#nodeJs<br>css<br>javascript<br>html</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#nodeJs<br>css<br>javascript<br>html</p>\n"}],"Post":[{"title":"前端性能","date":"2018-04-10T10:56:55.000Z","cover":"http://www.alibibi.top/image/day4.jpg","_content":"关于前端性能优化的文章数不胜数，有从各个角度切入，也有单抓某点持续深入探讨的。\n由于个人喜欢纵观全局式的学习，因此这里从多个角度整理、分析前端性能优化可行的一些方案。\n以下内容有不少是从其他地方摘录、整理而来的，在文末我会把一些比较全面重要的资料\n提供出来，供大家参考学习。\n\n### 性能评估指标\n\n1. 首屏时间\n浏览器显示第一屏页面所消耗的时间，以800x600像素尺寸为标准，从开始加载到浏览器页面显示高度达到600像素且此区域有内容显示的时间。\n工信部在《宽带速率的测试方法用户上网体验》规范标准中采用“首屏时间”指标。\n\n2. 用户体验评估标准\n一个页面的“总加载时间”要比“首屏时间”长，但对于最终用户体验而言，当内容充满首屏的区域时，用户就可以看到网站的主要内容并可以进行各自的选择了。首屏时间的快与慢，直接影响到了用户对网站的认知度。\n在国内的网络条件下，通常一个网站，如果“首屏时间”在2秒以内是比较优秀的，5秒以内用户可以接受，10秒以上就不可容忍了\n\n3. 白屏时间\n这个其实不多说，读者也明白，就是页面处于空白的时间。页面空白，用户就会焦躁，并且变得不耐心。影响白屏时间的多数是：DNS解析耗时+服务端耗时+网络传输耗时。\n\n4. 用户可操作时间\n顾名思义，这项指标值得是，我们的网页用户可以使用的时间。一般来讲 domready时间，便是我们的用户可操作时间了。\n\n5. 总下载时间\n通常指，页面总体的下载时间，所有的页面资源都下载完成。\n\n6. 推荐资料\n[聊一聊前端速度统计(性能统计)那些事儿](https://segmentfault.com/a/1190000005869953)\n[WEB前端性能优化常见方法](https://segmentfault.com/a/1190000008829958)\n\n### 优化策略\n1. 减少http请求\n在浏览器(客户端)和服务器发生通信时，就已经消耗了大量的时间，尤其是在网络情况比较糟糕的时候，这个问题尤其的突出。一个正常HTTP请求的流程简述：如在浏览器中输入_www.xxxxxx.com_\n并按下回车，经过DNS查找，浏览器再与这个URL指向的服务器建立连接，然后浏览器才能向服务器发送请求信息，服务器在接受到请求的信息后再返回相应的信息，浏览器接收到来自服务器的应答信息后，对这些数据解释执行。\n而当我们请求的网页文件中有很多图片、CSS、JS甚至音乐等信息时，将会频繁的与服务器建立连接，与释放连接，这必定会造成资源的浪费，且每个HTTP请求都会对服务器和浏览器产生性能负担。\n网速相同的条件下，下载一个100KB的图片比下载两个50KB的图片要快。所以，请减少HTTP请求。\n\n合并图片，图片降质\n\n2. 代码压缩\nwebpack CommonChunkPlygin Uglify CSS，JS代码压缩，混淆\n\n合理利用Localstorage\n\nnginx开启Gzip可减小文件60%－70%体积\n\n3. 推荐资料\n[https://segmentfault.com/a/1190000003646305#articleHeader28](https://segmentfault.com/a/1190000003646305#articleHeader28)\n[https://github.com/kangkk/web_performance_optimization](https://github.com/kangkk/web_performance_optimization)","source":"_posts/hello-world-day0.md","raw":"---\ntitle: 前端性能\ndate: 2018-04-10 18:56:55\ntags: \n    - 前端工程化\ncategories: \n    - 大杂烩\ncover: http://www.alibibi.top/image/day4.jpg\n---\n关于前端性能优化的文章数不胜数，有从各个角度切入，也有单抓某点持续深入探讨的。\n由于个人喜欢纵观全局式的学习，因此这里从多个角度整理、分析前端性能优化可行的一些方案。\n以下内容有不少是从其他地方摘录、整理而来的，在文末我会把一些比较全面重要的资料\n提供出来，供大家参考学习。\n\n### 性能评估指标\n\n1. 首屏时间\n浏览器显示第一屏页面所消耗的时间，以800x600像素尺寸为标准，从开始加载到浏览器页面显示高度达到600像素且此区域有内容显示的时间。\n工信部在《宽带速率的测试方法用户上网体验》规范标准中采用“首屏时间”指标。\n\n2. 用户体验评估标准\n一个页面的“总加载时间”要比“首屏时间”长，但对于最终用户体验而言，当内容充满首屏的区域时，用户就可以看到网站的主要内容并可以进行各自的选择了。首屏时间的快与慢，直接影响到了用户对网站的认知度。\n在国内的网络条件下，通常一个网站，如果“首屏时间”在2秒以内是比较优秀的，5秒以内用户可以接受，10秒以上就不可容忍了\n\n3. 白屏时间\n这个其实不多说，读者也明白，就是页面处于空白的时间。页面空白，用户就会焦躁，并且变得不耐心。影响白屏时间的多数是：DNS解析耗时+服务端耗时+网络传输耗时。\n\n4. 用户可操作时间\n顾名思义，这项指标值得是，我们的网页用户可以使用的时间。一般来讲 domready时间，便是我们的用户可操作时间了。\n\n5. 总下载时间\n通常指，页面总体的下载时间，所有的页面资源都下载完成。\n\n6. 推荐资料\n[聊一聊前端速度统计(性能统计)那些事儿](https://segmentfault.com/a/1190000005869953)\n[WEB前端性能优化常见方法](https://segmentfault.com/a/1190000008829958)\n\n### 优化策略\n1. 减少http请求\n在浏览器(客户端)和服务器发生通信时，就已经消耗了大量的时间，尤其是在网络情况比较糟糕的时候，这个问题尤其的突出。一个正常HTTP请求的流程简述：如在浏览器中输入_www.xxxxxx.com_\n并按下回车，经过DNS查找，浏览器再与这个URL指向的服务器建立连接，然后浏览器才能向服务器发送请求信息，服务器在接受到请求的信息后再返回相应的信息，浏览器接收到来自服务器的应答信息后，对这些数据解释执行。\n而当我们请求的网页文件中有很多图片、CSS、JS甚至音乐等信息时，将会频繁的与服务器建立连接，与释放连接，这必定会造成资源的浪费，且每个HTTP请求都会对服务器和浏览器产生性能负担。\n网速相同的条件下，下载一个100KB的图片比下载两个50KB的图片要快。所以，请减少HTTP请求。\n\n合并图片，图片降质\n\n2. 代码压缩\nwebpack CommonChunkPlygin Uglify CSS，JS代码压缩，混淆\n\n合理利用Localstorage\n\nnginx开启Gzip可减小文件60%－70%体积\n\n3. 推荐资料\n[https://segmentfault.com/a/1190000003646305#articleHeader28](https://segmentfault.com/a/1190000003646305#articleHeader28)\n[https://github.com/kangkk/web_performance_optimization](https://github.com/kangkk/web_performance_optimization)","slug":"hello-world-day0","published":1,"updated":"2019-04-23T09:49:30.236Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdgnroh00007wumyy229od4","content":"<p>关于前端性能优化的文章数不胜数，有从各个角度切入，也有单抓某点持续深入探讨的。<br>由于个人喜欢纵观全局式的学习，因此这里从多个角度整理、分析前端性能优化可行的一些方案。<br>以下内容有不少是从其他地方摘录、整理而来的，在文末我会把一些比较全面重要的资料<br>提供出来，供大家参考学习。</p>\n<h3 id=\"性能评估指标\"><a href=\"#性能评估指标\" class=\"headerlink\" title=\"性能评估指标\"></a>性能评估指标</h3><ol>\n<li><p>首屏时间<br>浏览器显示第一屏页面所消耗的时间，以800x600像素尺寸为标准，从开始加载到浏览器页面显示高度达到600像素且此区域有内容显示的时间。<br>工信部在《宽带速率的测试方法用户上网体验》规范标准中采用“首屏时间”指标。</p>\n</li>\n<li><p>用户体验评估标准<br>一个页面的“总加载时间”要比“首屏时间”长，但对于最终用户体验而言，当内容充满首屏的区域时，用户就可以看到网站的主要内容并可以进行各自的选择了。首屏时间的快与慢，直接影响到了用户对网站的认知度。<br>在国内的网络条件下，通常一个网站，如果“首屏时间”在2秒以内是比较优秀的，5秒以内用户可以接受，10秒以上就不可容忍了</p>\n</li>\n<li><p>白屏时间<br>这个其实不多说，读者也明白，就是页面处于空白的时间。页面空白，用户就会焦躁，并且变得不耐心。影响白屏时间的多数是：DNS解析耗时+服务端耗时+网络传输耗时。</p>\n</li>\n<li><p>用户可操作时间<br>顾名思义，这项指标值得是，我们的网页用户可以使用的时间。一般来讲 domready时间，便是我们的用户可操作时间了。</p>\n</li>\n<li><p>总下载时间<br>通常指，页面总体的下载时间，所有的页面资源都下载完成。</p>\n</li>\n<li><p>推荐资料<br><a href=\"https://segmentfault.com/a/1190000005869953\" target=\"_blank\" rel=\"noopener\">聊一聊前端速度统计(性能统计)那些事儿</a><br><a href=\"https://segmentfault.com/a/1190000008829958\" target=\"_blank\" rel=\"noopener\">WEB前端性能优化常见方法</a></p>\n</li>\n</ol>\n<h3 id=\"优化策略\"><a href=\"#优化策略\" class=\"headerlink\" title=\"优化策略\"></a>优化策略</h3><ol>\n<li>减少http请求<br>在浏览器(客户端)和服务器发生通信时，就已经消耗了大量的时间，尤其是在网络情况比较糟糕的时候，这个问题尤其的突出。一个正常HTTP请求的流程简述：如在浏览器中输入<em><a href=\"http://www.xxxxxx.com\" target=\"_blank\" rel=\"noopener\">www.xxxxxx.com</a></em><br>并按下回车，经过DNS查找，浏览器再与这个URL指向的服务器建立连接，然后浏览器才能向服务器发送请求信息，服务器在接受到请求的信息后再返回相应的信息，浏览器接收到来自服务器的应答信息后，对这些数据解释执行。<br>而当我们请求的网页文件中有很多图片、CSS、JS甚至音乐等信息时，将会频繁的与服务器建立连接，与释放连接，这必定会造成资源的浪费，且每个HTTP请求都会对服务器和浏览器产生性能负担。<br>网速相同的条件下，下载一个100KB的图片比下载两个50KB的图片要快。所以，请减少HTTP请求。</li>\n</ol>\n<p>合并图片，图片降质</p>\n<ol start=\"2\">\n<li>代码压缩<br>webpack CommonChunkPlygin Uglify CSS，JS代码压缩，混淆</li>\n</ol>\n<p>合理利用Localstorage</p>\n<p>nginx开启Gzip可减小文件60%－70%体积</p>\n<ol start=\"3\">\n<li>推荐资料<br><a href=\"https://segmentfault.com/a/1190000003646305#articleHeader28\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000003646305#articleHeader28</a><br><a href=\"https://github.com/kangkk/web_performance_optimization\" target=\"_blank\" rel=\"noopener\">https://github.com/kangkk/web_performance_optimization</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>关于前端性能优化的文章数不胜数，有从各个角度切入，也有单抓某点持续深入探讨的。<br>由于个人喜欢纵观全局式的学习，因此这里从多个角度整理、分析前端性能优化可行的一些方案。<br>以下内容有不少是从其他地方摘录、整理而来的，在文末我会把一些比较全面重要的资料<br>提供出来，供大家参考学习。</p>\n<h3 id=\"性能评估指标\"><a href=\"#性能评估指标\" class=\"headerlink\" title=\"性能评估指标\"></a>性能评估指标</h3><ol>\n<li><p>首屏时间<br>浏览器显示第一屏页面所消耗的时间，以800x600像素尺寸为标准，从开始加载到浏览器页面显示高度达到600像素且此区域有内容显示的时间。<br>工信部在《宽带速率的测试方法用户上网体验》规范标准中采用“首屏时间”指标。</p>\n</li>\n<li><p>用户体验评估标准<br>一个页面的“总加载时间”要比“首屏时间”长，但对于最终用户体验而言，当内容充满首屏的区域时，用户就可以看到网站的主要内容并可以进行各自的选择了。首屏时间的快与慢，直接影响到了用户对网站的认知度。<br>在国内的网络条件下，通常一个网站，如果“首屏时间”在2秒以内是比较优秀的，5秒以内用户可以接受，10秒以上就不可容忍了</p>\n</li>\n<li><p>白屏时间<br>这个其实不多说，读者也明白，就是页面处于空白的时间。页面空白，用户就会焦躁，并且变得不耐心。影响白屏时间的多数是：DNS解析耗时+服务端耗时+网络传输耗时。</p>\n</li>\n<li><p>用户可操作时间<br>顾名思义，这项指标值得是，我们的网页用户可以使用的时间。一般来讲 domready时间，便是我们的用户可操作时间了。</p>\n</li>\n<li><p>总下载时间<br>通常指，页面总体的下载时间，所有的页面资源都下载完成。</p>\n</li>\n<li><p>推荐资料<br><a href=\"https://segmentfault.com/a/1190000005869953\" target=\"_blank\" rel=\"noopener\">聊一聊前端速度统计(性能统计)那些事儿</a><br><a href=\"https://segmentfault.com/a/1190000008829958\" target=\"_blank\" rel=\"noopener\">WEB前端性能优化常见方法</a></p>\n</li>\n</ol>\n<h3 id=\"优化策略\"><a href=\"#优化策略\" class=\"headerlink\" title=\"优化策略\"></a>优化策略</h3><ol>\n<li>减少http请求<br>在浏览器(客户端)和服务器发生通信时，就已经消耗了大量的时间，尤其是在网络情况比较糟糕的时候，这个问题尤其的突出。一个正常HTTP请求的流程简述：如在浏览器中输入<em><a href=\"http://www.xxxxxx.com\" target=\"_blank\" rel=\"noopener\">www.xxxxxx.com</a></em><br>并按下回车，经过DNS查找，浏览器再与这个URL指向的服务器建立连接，然后浏览器才能向服务器发送请求信息，服务器在接受到请求的信息后再返回相应的信息，浏览器接收到来自服务器的应答信息后，对这些数据解释执行。<br>而当我们请求的网页文件中有很多图片、CSS、JS甚至音乐等信息时，将会频繁的与服务器建立连接，与释放连接，这必定会造成资源的浪费，且每个HTTP请求都会对服务器和浏览器产生性能负担。<br>网速相同的条件下，下载一个100KB的图片比下载两个50KB的图片要快。所以，请减少HTTP请求。</li>\n</ol>\n<p>合并图片，图片降质</p>\n<ol start=\"2\">\n<li>代码压缩<br>webpack CommonChunkPlygin Uglify CSS，JS代码压缩，混淆</li>\n</ol>\n<p>合理利用Localstorage</p>\n<p>nginx开启Gzip可减小文件60%－70%体积</p>\n<ol start=\"3\">\n<li>推荐资料<br><a href=\"https://segmentfault.com/a/1190000003646305#articleHeader28\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000003646305#articleHeader28</a><br><a href=\"https://github.com/kangkk/web_performance_optimization\" target=\"_blank\" rel=\"noopener\">https://github.com/kangkk/web_performance_optimization</a></li>\n</ol>\n"},{"title":"前端性能优化点","date":"2018-08-02T04:35:30.000Z","_content":"\n### 目录导航\n\n- [前端性能优化点](#前端性能优化点)\n- [一. HTTP优化](#一-http优化)\n- [1. 减少HTTP请求](#减少http请求)\n- [2. 重定向优化](#重定向优化)\n- [3. 避免死链/空链/404/410错误](#避免死链空链错误)\n- [4. 尽早flush buffer](#尽早flush-buffer)\n- [5. http中的character设置](#http中的character设置)\n\n- [二. 缓存优化](#二-缓存优化)\n- [1. 浏览器缓存](#浏览器缓存)\n- [添加 Expires 或 Cache-Control 头](#添加-expires-或-cache-control-头)\n- [对动态可用缓存使用“身份识别”](#对动态可用缓存使用身份识别)\n- [为IE设置Vary的header](#为ie设置vary的header)\n- [避免firefox中URL造成的缓存冲突](#避免firefox中url造成的缓存冲突)\n\n- [2. 代理服务器(静态资源服务器)缓存](#代理服务器静态资源服务器缓存)\n\n- [三. DNS](#三-dns)\n- [1. 减小DNS解析](#减小dns解析)\n- [2. 增加静态资源域名](#增加静态资源域名)\n\n- [四. 服务器负载优化](#四-服务器负载优化)\n- [1. 使用CND](#使用cnd)\n- [2. Cookie优化](#cookie优化)\n- [3. 使用Gzip](#使用gzip)\n- [4. 压缩文件](#压缩文件)\n\n- [五. CSS相关优化](#五-css相关优化)\n- [1. 样式表合并放头部](#样式表合并放头部)\n- [2. css编码要点](#css编码要点)\n- [3. 使用css Sprite](#使用css-sprite)\n- [4. 外联css](#外联css)\n\n- [六. Javascript相关优化](#六-javascript相关优化)\n- [1. js文件放底部](#js文件放底部)\n- [2. js代码去重](#js代码去重)\n- [3. 无阻塞下载脚本](#无阻塞下载脚本)\n- [4. 外联js和行内js](#外联js和行内js)\n- [5. js编码要点](#js编码要点)\n\n- [七. 图片相关优化](#七-图片相关优化)\n- [八. 其他优化](#八-其他优化)\n\n# 前端性能优化点\n\n> 说明：本文主要介绍前端性能优化点\n\n---\n\n## 一. HTTP优化\n\n### 1. 减少HTTP请求\n\n1. 合并文件，例如css代码和js代码分别合并到一个css文件和js文件中;\n2. 使用css sprite，详细请参考css优化中的css sprite部分。\n3. 使用base64技术\n\n### 2. 重定向优化\n\n1. 消除没必要的跳转\n2. 利用服务器重写用户键入的链接\n3. 使用HTTP而不是js或者meta来重定向\n\n### 3. 避免死链/空链/404/410错误\n\n1. 避免出现404 Not Found错误\n2. 避免出现图片请求空链接（img.src=””）\n\n### 4. 尽早flush buffer\n\n尽早的使用flush buffer可以让一部分内容先加载出来，提高用户体验。\n\n### 5. http中的character设置\n\n指定content-type和正确的character编码\n\n---\n\n## 二. 缓存优化\n\n### 1. 浏览器缓存\n\n#### 添加 Expires 或 Cache-Control 头\n\n1. 对于静态资源：通过设置一个很远的过期时间来实现“从不过期”\n2. \n对于动态资源：用一个适当的 Cache-Control 头来帮助浏览器控制请求\n\n浏览器利用缓存来减少http请求的数目和大小，让页面加载的更快。web服务器利用http响应中的Expires头来告诉客户端一个资源能够被缓存多久。\n\n需要注意的是，如果你利用了一个“不过期”的Expires头，你必须在资源改变的同时改变资源的名字。这一技术提高页面性能是基于用户已经访问过你的网站的基础之上的。\n\n3. \n设置Last-Modified日期为最近资源需要改变的时间。\n\n#### 对动态可用缓存使用“身份识别”\n\n通过链接到资源的唯一url（每次改变资源时同时改变其文件名）来改变缓存\n\n#### 为IE设置Vary的header\n\n#### 避免firefox中URL造成的缓存冲突\n\nfirefox通过hash表存储url的缓存，但hash值仅仅有8个字符，可能会造成hash冲突，所以你需要确保你的资源urldiff多于8字符边界。\n\n### 2. 代理服务器(静态资源服务器)缓存\n\n*利用Cache-control：public的头可以让资源缓存在一个web代理服务器上面来让其他用户使用。*\n\n1. \n不要在静态资源的url上面添加查询字符串\n\n2. \n不用在代理服务器上缓存设置了cookie的资源\n\n3. \n要有使用代理缓存js和css文件的意识\n\n---\n\n## 三. DNS\n\n### 1. 减小DNS解析\n\n1.固定URL提供资源\n2.尽可能的使用URL路径来代替主机域名，例如developer.example.com可以被www.example.com/developer代替。除非有技术上的原因需要不同的主机域名。\n3.将从同一主机域名下的需要先加载的js文件作为主要文件送达\n4.考虑使用DNS预解析\n\n### 2. 增加静态资源域名\n\n实现多个资源的并行下载\n\n---\n\n## 四. 服务器负载优化\n\n### 1. 使用CND\n\nCDN可以帮助用户更快的获取到所需要的资源。\n\n### 2. Cookie优化\n\n1.使用服务器端的存储为大多数的cookie来做有效载荷：在cookie里存key，在服务器端存value。\n2.移除没有用的或者重复的cookie\n3.静态资源请求中不要带上cookie\n4.不要将需要提前加载的js放到没有cookie的域中加载\n\n### 3. 使用Gzip\n\nGzip是当前最流行，最有效的压缩方式。\n\n1.在http/1.1中，web客户端明确支持在http请求中 Accept-Encoding 头 的 Accept-Encoding: gzip, deflate 压缩方式\n2.Gzip一般能减少服务器响应文件70%的大小，90%的浏览器都支持gzip\n3.服务器基于文件类型来选择gzip压缩，很多网站gzip他们的html文件，同样也可以gzip脚本和样式表\n4.事实上，任何的响应文本，包括xml和json都有压缩的价值，图片和pdf文件不应该被gizp，因为他们已经被压缩过了\n\n### 4. 压缩文件\n\n*压缩包括：Javascript、CSS、HTML*\n\n让你写的页面能够更有效的压缩：\n1.按照字母排序指定css键对值\n2.按照字母排序指定html属性\n3.对html属性使用一致的引号\n4.使用一致的字母（小写字母）\n5.移除没有用到的css\n\n---\n\n## 五. CSS相关优化\n\n### 1. 样式表合并放头部\n\n1.将样式表移到文件的Head可以让页面加载的更快，这是因为将样式表放在头部有利于页面渲染。\n2.将样式表放在底部的问题是它阻止了许多浏览器的渲染进度。这些浏览器会锁定渲染进程来保证页面上的元素在他们的样式改变时重绘。\n\n### 2. css编码要点\n\n具体参看性能相关编码规范中的css编码规范\n\n### 3. 使用css Sprite\n\n1.将图片水平放置在sprite中可以让文件大小更小。\n2.对一起加载的图片使用sprite\n3.GIF和PNG图片优先使用sprite\n4.小图片优先sprite\n5.可缓存的图片使用sprite\n6.使用sprite工具\n7.尽量减少sprite图片中的空白空间\n8.将色彩范围相近的图片进行sprite\n\n### 4. 外联css\n\n利用浏览器缓存，将一些公共的css进行外链，使用缓存，加快用户第一次以后访问页面的速度\n\n---\n\n## 六. Javascript相关优化\n\n### 1. js文件放底部\n\n这一问题的原因是脚本是并行阻塞下载的。HTTP/1.1协议中建议浏览器不在同一域名下并行下载多于两个的资源。假如你的图片是在多个域名下的，你可以并行下载超过两张的图片。可是一个脚本在下载的时候，浏览器不能再开始其他的下载，即使在不同的域名下。\n\n一个可供采纳的建议是利用延迟加载脚本技术（defer）。这是一种可以让浏览器继续渲染的方案。不幸的是，fireforx不支持defer属性。\n\n### 2. js代码去重\n\n1.将重复的js代码去掉\n2.将没有使用过的变量去掉\n3.将没有调用到的函数去掉\n\n### 3. 无阻塞下载脚本\n\n*几种下载外部脚本且不被阻塞的技术*\n\n1. XHR Eval：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过eval执行内容。缺陷：不能跨域。\n2. XHR 注入：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过创建script元素注入其中执行内容。缺陷：不能跨域。\n3. Script in Iframe：通过iframe的src属性加载脚本。\n4. Script DOM Element：通过创建script标签元素来加载脚本。\n5. Script Defer：IE特有\n6. document.write Script Tag：通过把script标签代码用write方法放到页面中加载脚本。\n\n### 4. 外联js和行内js\n\n1.将外联脚本放在外联样式表之后\n2.将行内脚本放在其他资源之后\n\n### 5. js编码要点\n\n详细请参看前端性能优化相关编码规范：js编码规范\n\n---\n\n## 七. 图片相关优化\n\n1. 图片压缩：在条件允许的情况下尽量使用PNG8格式\n2. 图片合并：详见CSS sprite\n3. 图片缩放：服务器端进行图片缩放\n\n## 八. 其他优化\n\n1. 减少页面DOM元素\n2. 延迟加载和预加载资源\n3. 将Get作为Ajax请求的方法\n4. 尽量不要使用iframe：\n\n---\n","source":"_posts/前端性能优化点-day05.md","raw":"---\ntitle:  前端性能优化点\ndate: 2018-08-02 12:35:30\ntags: \n    - 前端性能\ncategories: \n    - 大杂烩\n\n---\n\n### 目录导航\n\n- [前端性能优化点](#前端性能优化点)\n- [一. HTTP优化](#一-http优化)\n- [1. 减少HTTP请求](#减少http请求)\n- [2. 重定向优化](#重定向优化)\n- [3. 避免死链/空链/404/410错误](#避免死链空链错误)\n- [4. 尽早flush buffer](#尽早flush-buffer)\n- [5. http中的character设置](#http中的character设置)\n\n- [二. 缓存优化](#二-缓存优化)\n- [1. 浏览器缓存](#浏览器缓存)\n- [添加 Expires 或 Cache-Control 头](#添加-expires-或-cache-control-头)\n- [对动态可用缓存使用“身份识别”](#对动态可用缓存使用身份识别)\n- [为IE设置Vary的header](#为ie设置vary的header)\n- [避免firefox中URL造成的缓存冲突](#避免firefox中url造成的缓存冲突)\n\n- [2. 代理服务器(静态资源服务器)缓存](#代理服务器静态资源服务器缓存)\n\n- [三. DNS](#三-dns)\n- [1. 减小DNS解析](#减小dns解析)\n- [2. 增加静态资源域名](#增加静态资源域名)\n\n- [四. 服务器负载优化](#四-服务器负载优化)\n- [1. 使用CND](#使用cnd)\n- [2. Cookie优化](#cookie优化)\n- [3. 使用Gzip](#使用gzip)\n- [4. 压缩文件](#压缩文件)\n\n- [五. CSS相关优化](#五-css相关优化)\n- [1. 样式表合并放头部](#样式表合并放头部)\n- [2. css编码要点](#css编码要点)\n- [3. 使用css Sprite](#使用css-sprite)\n- [4. 外联css](#外联css)\n\n- [六. Javascript相关优化](#六-javascript相关优化)\n- [1. js文件放底部](#js文件放底部)\n- [2. js代码去重](#js代码去重)\n- [3. 无阻塞下载脚本](#无阻塞下载脚本)\n- [4. 外联js和行内js](#外联js和行内js)\n- [5. js编码要点](#js编码要点)\n\n- [七. 图片相关优化](#七-图片相关优化)\n- [八. 其他优化](#八-其他优化)\n\n# 前端性能优化点\n\n> 说明：本文主要介绍前端性能优化点\n\n---\n\n## 一. HTTP优化\n\n### 1. 减少HTTP请求\n\n1. 合并文件，例如css代码和js代码分别合并到一个css文件和js文件中;\n2. 使用css sprite，详细请参考css优化中的css sprite部分。\n3. 使用base64技术\n\n### 2. 重定向优化\n\n1. 消除没必要的跳转\n2. 利用服务器重写用户键入的链接\n3. 使用HTTP而不是js或者meta来重定向\n\n### 3. 避免死链/空链/404/410错误\n\n1. 避免出现404 Not Found错误\n2. 避免出现图片请求空链接（img.src=””）\n\n### 4. 尽早flush buffer\n\n尽早的使用flush buffer可以让一部分内容先加载出来，提高用户体验。\n\n### 5. http中的character设置\n\n指定content-type和正确的character编码\n\n---\n\n## 二. 缓存优化\n\n### 1. 浏览器缓存\n\n#### 添加 Expires 或 Cache-Control 头\n\n1. 对于静态资源：通过设置一个很远的过期时间来实现“从不过期”\n2. \n对于动态资源：用一个适当的 Cache-Control 头来帮助浏览器控制请求\n\n浏览器利用缓存来减少http请求的数目和大小，让页面加载的更快。web服务器利用http响应中的Expires头来告诉客户端一个资源能够被缓存多久。\n\n需要注意的是，如果你利用了一个“不过期”的Expires头，你必须在资源改变的同时改变资源的名字。这一技术提高页面性能是基于用户已经访问过你的网站的基础之上的。\n\n3. \n设置Last-Modified日期为最近资源需要改变的时间。\n\n#### 对动态可用缓存使用“身份识别”\n\n通过链接到资源的唯一url（每次改变资源时同时改变其文件名）来改变缓存\n\n#### 为IE设置Vary的header\n\n#### 避免firefox中URL造成的缓存冲突\n\nfirefox通过hash表存储url的缓存，但hash值仅仅有8个字符，可能会造成hash冲突，所以你需要确保你的资源urldiff多于8字符边界。\n\n### 2. 代理服务器(静态资源服务器)缓存\n\n*利用Cache-control：public的头可以让资源缓存在一个web代理服务器上面来让其他用户使用。*\n\n1. \n不要在静态资源的url上面添加查询字符串\n\n2. \n不用在代理服务器上缓存设置了cookie的资源\n\n3. \n要有使用代理缓存js和css文件的意识\n\n---\n\n## 三. DNS\n\n### 1. 减小DNS解析\n\n1.固定URL提供资源\n2.尽可能的使用URL路径来代替主机域名，例如developer.example.com可以被www.example.com/developer代替。除非有技术上的原因需要不同的主机域名。\n3.将从同一主机域名下的需要先加载的js文件作为主要文件送达\n4.考虑使用DNS预解析\n\n### 2. 增加静态资源域名\n\n实现多个资源的并行下载\n\n---\n\n## 四. 服务器负载优化\n\n### 1. 使用CND\n\nCDN可以帮助用户更快的获取到所需要的资源。\n\n### 2. Cookie优化\n\n1.使用服务器端的存储为大多数的cookie来做有效载荷：在cookie里存key，在服务器端存value。\n2.移除没有用的或者重复的cookie\n3.静态资源请求中不要带上cookie\n4.不要将需要提前加载的js放到没有cookie的域中加载\n\n### 3. 使用Gzip\n\nGzip是当前最流行，最有效的压缩方式。\n\n1.在http/1.1中，web客户端明确支持在http请求中 Accept-Encoding 头 的 Accept-Encoding: gzip, deflate 压缩方式\n2.Gzip一般能减少服务器响应文件70%的大小，90%的浏览器都支持gzip\n3.服务器基于文件类型来选择gzip压缩，很多网站gzip他们的html文件，同样也可以gzip脚本和样式表\n4.事实上，任何的响应文本，包括xml和json都有压缩的价值，图片和pdf文件不应该被gizp，因为他们已经被压缩过了\n\n### 4. 压缩文件\n\n*压缩包括：Javascript、CSS、HTML*\n\n让你写的页面能够更有效的压缩：\n1.按照字母排序指定css键对值\n2.按照字母排序指定html属性\n3.对html属性使用一致的引号\n4.使用一致的字母（小写字母）\n5.移除没有用到的css\n\n---\n\n## 五. CSS相关优化\n\n### 1. 样式表合并放头部\n\n1.将样式表移到文件的Head可以让页面加载的更快，这是因为将样式表放在头部有利于页面渲染。\n2.将样式表放在底部的问题是它阻止了许多浏览器的渲染进度。这些浏览器会锁定渲染进程来保证页面上的元素在他们的样式改变时重绘。\n\n### 2. css编码要点\n\n具体参看性能相关编码规范中的css编码规范\n\n### 3. 使用css Sprite\n\n1.将图片水平放置在sprite中可以让文件大小更小。\n2.对一起加载的图片使用sprite\n3.GIF和PNG图片优先使用sprite\n4.小图片优先sprite\n5.可缓存的图片使用sprite\n6.使用sprite工具\n7.尽量减少sprite图片中的空白空间\n8.将色彩范围相近的图片进行sprite\n\n### 4. 外联css\n\n利用浏览器缓存，将一些公共的css进行外链，使用缓存，加快用户第一次以后访问页面的速度\n\n---\n\n## 六. Javascript相关优化\n\n### 1. js文件放底部\n\n这一问题的原因是脚本是并行阻塞下载的。HTTP/1.1协议中建议浏览器不在同一域名下并行下载多于两个的资源。假如你的图片是在多个域名下的，你可以并行下载超过两张的图片。可是一个脚本在下载的时候，浏览器不能再开始其他的下载，即使在不同的域名下。\n\n一个可供采纳的建议是利用延迟加载脚本技术（defer）。这是一种可以让浏览器继续渲染的方案。不幸的是，fireforx不支持defer属性。\n\n### 2. js代码去重\n\n1.将重复的js代码去掉\n2.将没有使用过的变量去掉\n3.将没有调用到的函数去掉\n\n### 3. 无阻塞下载脚本\n\n*几种下载外部脚本且不被阻塞的技术*\n\n1. XHR Eval：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过eval执行内容。缺陷：不能跨域。\n2. XHR 注入：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过创建script元素注入其中执行内容。缺陷：不能跨域。\n3. Script in Iframe：通过iframe的src属性加载脚本。\n4. Script DOM Element：通过创建script标签元素来加载脚本。\n5. Script Defer：IE特有\n6. document.write Script Tag：通过把script标签代码用write方法放到页面中加载脚本。\n\n### 4. 外联js和行内js\n\n1.将外联脚本放在外联样式表之后\n2.将行内脚本放在其他资源之后\n\n### 5. js编码要点\n\n详细请参看前端性能优化相关编码规范：js编码规范\n\n---\n\n## 七. 图片相关优化\n\n1. 图片压缩：在条件允许的情况下尽量使用PNG8格式\n2. 图片合并：详见CSS sprite\n3. 图片缩放：服务器端进行图片缩放\n\n## 八. 其他优化\n\n1. 减少页面DOM元素\n2. 延迟加载和预加载资源\n3. 将Get作为Ajax请求的方法\n4. 尽量不要使用iframe：\n\n---\n","slug":"前端性能优化点-day05","published":1,"updated":"2019-04-23T09:49:20.220Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdgnrp500087wumx8njlgru","content":"<h3 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h3><ul>\n<li><a href=\"#前端性能优化点\">前端性能优化点</a></li>\n<li><a href=\"#一-http优化\">一. HTTP优化</a></li>\n<li><a href=\"#减少http请求\">1. 减少HTTP请求</a></li>\n<li><a href=\"#重定向优化\">2. 重定向优化</a></li>\n<li><a href=\"#避免死链空链错误\">3. 避免死链/空链/404/410错误</a></li>\n<li><a href=\"#尽早flush-buffer\">4. 尽早flush buffer</a></li>\n<li><p><a href=\"#http中的character设置\">5. http中的character设置</a></p>\n</li>\n<li><p><a href=\"#二-缓存优化\">二. 缓存优化</a></p>\n</li>\n<li><a href=\"#浏览器缓存\">1. 浏览器缓存</a></li>\n<li><a href=\"#添加-expires-或-cache-control-头\">添加 Expires 或 Cache-Control 头</a></li>\n<li><a href=\"#对动态可用缓存使用身份识别\">对动态可用缓存使用“身份识别”</a></li>\n<li><a href=\"#为ie设置vary的header\">为IE设置Vary的header</a></li>\n<li><p><a href=\"#避免firefox中url造成的缓存冲突\">避免firefox中URL造成的缓存冲突</a></p>\n</li>\n<li><p><a href=\"#代理服务器静态资源服务器缓存\">2. 代理服务器(静态资源服务器)缓存</a></p>\n</li>\n<li><p><a href=\"#三-dns\">三. DNS</a></p>\n</li>\n<li><a href=\"#减小dns解析\">1. 减小DNS解析</a></li>\n<li><p><a href=\"#增加静态资源域名\">2. 增加静态资源域名</a></p>\n</li>\n<li><p><a href=\"#四-服务器负载优化\">四. 服务器负载优化</a></p>\n</li>\n<li><a href=\"#使用cnd\">1. 使用CND</a></li>\n<li><a href=\"#cookie优化\">2. Cookie优化</a></li>\n<li><a href=\"#使用gzip\">3. 使用Gzip</a></li>\n<li><p><a href=\"#压缩文件\">4. 压缩文件</a></p>\n</li>\n<li><p><a href=\"#五-css相关优化\">五. CSS相关优化</a></p>\n</li>\n<li><a href=\"#样式表合并放头部\">1. 样式表合并放头部</a></li>\n<li><a href=\"#css编码要点\">2. css编码要点</a></li>\n<li><a href=\"#使用css-sprite\">3. 使用css Sprite</a></li>\n<li><p><a href=\"#外联css\">4. 外联css</a></p>\n</li>\n<li><p><a href=\"#六-javascript相关优化\">六. Javascript相关优化</a></p>\n</li>\n<li><a href=\"#js文件放底部\">1. js文件放底部</a></li>\n<li><a href=\"#js代码去重\">2. js代码去重</a></li>\n<li><a href=\"#无阻塞下载脚本\">3. 无阻塞下载脚本</a></li>\n<li><a href=\"#外联js和行内js\">4. 外联js和行内js</a></li>\n<li><p><a href=\"#js编码要点\">5. js编码要点</a></p>\n</li>\n<li><p><a href=\"#七-图片相关优化\">七. 图片相关优化</a></p>\n</li>\n<li><a href=\"#八-其他优化\">八. 其他优化</a></li>\n</ul>\n<h1 id=\"前端性能优化点\"><a href=\"#前端性能优化点\" class=\"headerlink\" title=\"前端性能优化点\"></a>前端性能优化点</h1><blockquote>\n<p>说明：本文主要介绍前端性能优化点</p>\n</blockquote>\n<hr>\n<h2 id=\"一-HTTP优化\"><a href=\"#一-HTTP优化\" class=\"headerlink\" title=\"一. HTTP优化\"></a>一. HTTP优化</h2><h3 id=\"1-减少HTTP请求\"><a href=\"#1-减少HTTP请求\" class=\"headerlink\" title=\"1. 减少HTTP请求\"></a>1. 减少HTTP请求</h3><ol>\n<li>合并文件，例如css代码和js代码分别合并到一个css文件和js文件中;</li>\n<li>使用css sprite，详细请参考css优化中的css sprite部分。</li>\n<li>使用base64技术</li>\n</ol>\n<h3 id=\"2-重定向优化\"><a href=\"#2-重定向优化\" class=\"headerlink\" title=\"2. 重定向优化\"></a>2. 重定向优化</h3><ol>\n<li>消除没必要的跳转</li>\n<li>利用服务器重写用户键入的链接</li>\n<li>使用HTTP而不是js或者meta来重定向</li>\n</ol>\n<h3 id=\"3-避免死链-空链-404-410错误\"><a href=\"#3-避免死链-空链-404-410错误\" class=\"headerlink\" title=\"3. 避免死链/空链/404/410错误\"></a>3. 避免死链/空链/404/410错误</h3><ol>\n<li>避免出现404 Not Found错误</li>\n<li>避免出现图片请求空链接（img.src=””）</li>\n</ol>\n<h3 id=\"4-尽早flush-buffer\"><a href=\"#4-尽早flush-buffer\" class=\"headerlink\" title=\"4. 尽早flush buffer\"></a>4. 尽早flush buffer</h3><p>尽早的使用flush buffer可以让一部分内容先加载出来，提高用户体验。</p>\n<h3 id=\"5-http中的character设置\"><a href=\"#5-http中的character设置\" class=\"headerlink\" title=\"5. http中的character设置\"></a>5. http中的character设置</h3><p>指定content-type和正确的character编码</p>\n<hr>\n<h2 id=\"二-缓存优化\"><a href=\"#二-缓存优化\" class=\"headerlink\" title=\"二. 缓存优化\"></a>二. 缓存优化</h2><h3 id=\"1-浏览器缓存\"><a href=\"#1-浏览器缓存\" class=\"headerlink\" title=\"1. 浏览器缓存\"></a>1. 浏览器缓存</h3><h4 id=\"添加-Expires-或-Cache-Control-头\"><a href=\"#添加-Expires-或-Cache-Control-头\" class=\"headerlink\" title=\"添加 Expires 或 Cache-Control 头\"></a>添加 Expires 或 Cache-Control 头</h4><ol>\n<li>对于静态资源：通过设置一个很远的过期时间来实现“从不过期”</li>\n<li>对于动态资源：用一个适当的 Cache-Control 头来帮助浏览器控制请求</li>\n</ol>\n<p>浏览器利用缓存来减少http请求的数目和大小，让页面加载的更快。web服务器利用http响应中的Expires头来告诉客户端一个资源能够被缓存多久。</p>\n<p>需要注意的是，如果你利用了一个“不过期”的Expires头，你必须在资源改变的同时改变资源的名字。这一技术提高页面性能是基于用户已经访问过你的网站的基础之上的。</p>\n<ol start=\"3\">\n<li>设置Last-Modified日期为最近资源需要改变的时间。</li>\n</ol>\n<h4 id=\"对动态可用缓存使用“身份识别”\"><a href=\"#对动态可用缓存使用“身份识别”\" class=\"headerlink\" title=\"对动态可用缓存使用“身份识别”\"></a>对动态可用缓存使用“身份识别”</h4><p>通过链接到资源的唯一url（每次改变资源时同时改变其文件名）来改变缓存</p>\n<h4 id=\"为IE设置Vary的header\"><a href=\"#为IE设置Vary的header\" class=\"headerlink\" title=\"为IE设置Vary的header\"></a>为IE设置Vary的header</h4><h4 id=\"避免firefox中URL造成的缓存冲突\"><a href=\"#避免firefox中URL造成的缓存冲突\" class=\"headerlink\" title=\"避免firefox中URL造成的缓存冲突\"></a>避免firefox中URL造成的缓存冲突</h4><p>firefox通过hash表存储url的缓存，但hash值仅仅有8个字符，可能会造成hash冲突，所以你需要确保你的资源urldiff多于8字符边界。</p>\n<h3 id=\"2-代理服务器-静态资源服务器-缓存\"><a href=\"#2-代理服务器-静态资源服务器-缓存\" class=\"headerlink\" title=\"2. 代理服务器(静态资源服务器)缓存\"></a>2. 代理服务器(静态资源服务器)缓存</h3><p><em>利用Cache-control：public的头可以让资源缓存在一个web代理服务器上面来让其他用户使用。</em></p>\n<ol>\n<li><p>不要在静态资源的url上面添加查询字符串</p>\n</li>\n<li><p>不用在代理服务器上缓存设置了cookie的资源</p>\n</li>\n<li><p>要有使用代理缓存js和css文件的意识</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"三-DNS\"><a href=\"#三-DNS\" class=\"headerlink\" title=\"三. DNS\"></a>三. DNS</h2><h3 id=\"1-减小DNS解析\"><a href=\"#1-减小DNS解析\" class=\"headerlink\" title=\"1. 减小DNS解析\"></a>1. 减小DNS解析</h3><p>1.固定URL提供资源<br>2.尽可能的使用URL路径来代替主机域名，例如developer.example.com可以被<a href=\"http://www.example.com/developer代替。除非有技术上的原因需要不同的主机域名。\" target=\"_blank\" rel=\"noopener\">www.example.com/developer代替。除非有技术上的原因需要不同的主机域名。</a><br>3.将从同一主机域名下的需要先加载的js文件作为主要文件送达<br>4.考虑使用DNS预解析</p>\n<h3 id=\"2-增加静态资源域名\"><a href=\"#2-增加静态资源域名\" class=\"headerlink\" title=\"2. 增加静态资源域名\"></a>2. 增加静态资源域名</h3><p>实现多个资源的并行下载</p>\n<hr>\n<h2 id=\"四-服务器负载优化\"><a href=\"#四-服务器负载优化\" class=\"headerlink\" title=\"四. 服务器负载优化\"></a>四. 服务器负载优化</h2><h3 id=\"1-使用CND\"><a href=\"#1-使用CND\" class=\"headerlink\" title=\"1. 使用CND\"></a>1. 使用CND</h3><p>CDN可以帮助用户更快的获取到所需要的资源。</p>\n<h3 id=\"2-Cookie优化\"><a href=\"#2-Cookie优化\" class=\"headerlink\" title=\"2. Cookie优化\"></a>2. Cookie优化</h3><p>1.使用服务器端的存储为大多数的cookie来做有效载荷：在cookie里存key，在服务器端存value。<br>2.移除没有用的或者重复的cookie<br>3.静态资源请求中不要带上cookie<br>4.不要将需要提前加载的js放到没有cookie的域中加载</p>\n<h3 id=\"3-使用Gzip\"><a href=\"#3-使用Gzip\" class=\"headerlink\" title=\"3. 使用Gzip\"></a>3. 使用Gzip</h3><p>Gzip是当前最流行，最有效的压缩方式。</p>\n<p>1.在http/1.1中，web客户端明确支持在http请求中 Accept-Encoding 头 的 Accept-Encoding: gzip, deflate 压缩方式<br>2.Gzip一般能减少服务器响应文件70%的大小，90%的浏览器都支持gzip<br>3.服务器基于文件类型来选择gzip压缩，很多网站gzip他们的html文件，同样也可以gzip脚本和样式表<br>4.事实上，任何的响应文本，包括xml和json都有压缩的价值，图片和pdf文件不应该被gizp，因为他们已经被压缩过了</p>\n<h3 id=\"4-压缩文件\"><a href=\"#4-压缩文件\" class=\"headerlink\" title=\"4. 压缩文件\"></a>4. 压缩文件</h3><p><em>压缩包括：Javascript、CSS、HTML</em></p>\n<p>让你写的页面能够更有效的压缩：<br>1.按照字母排序指定css键对值<br>2.按照字母排序指定html属性<br>3.对html属性使用一致的引号<br>4.使用一致的字母（小写字母）<br>5.移除没有用到的css</p>\n<hr>\n<h2 id=\"五-CSS相关优化\"><a href=\"#五-CSS相关优化\" class=\"headerlink\" title=\"五. CSS相关优化\"></a>五. CSS相关优化</h2><h3 id=\"1-样式表合并放头部\"><a href=\"#1-样式表合并放头部\" class=\"headerlink\" title=\"1. 样式表合并放头部\"></a>1. 样式表合并放头部</h3><p>1.将样式表移到文件的Head可以让页面加载的更快，这是因为将样式表放在头部有利于页面渲染。<br>2.将样式表放在底部的问题是它阻止了许多浏览器的渲染进度。这些浏览器会锁定渲染进程来保证页面上的元素在他们的样式改变时重绘。</p>\n<h3 id=\"2-css编码要点\"><a href=\"#2-css编码要点\" class=\"headerlink\" title=\"2. css编码要点\"></a>2. css编码要点</h3><p>具体参看性能相关编码规范中的css编码规范</p>\n<h3 id=\"3-使用css-Sprite\"><a href=\"#3-使用css-Sprite\" class=\"headerlink\" title=\"3. 使用css Sprite\"></a>3. 使用css Sprite</h3><p>1.将图片水平放置在sprite中可以让文件大小更小。<br>2.对一起加载的图片使用sprite<br>3.GIF和PNG图片优先使用sprite<br>4.小图片优先sprite<br>5.可缓存的图片使用sprite<br>6.使用sprite工具<br>7.尽量减少sprite图片中的空白空间<br>8.将色彩范围相近的图片进行sprite</p>\n<h3 id=\"4-外联css\"><a href=\"#4-外联css\" class=\"headerlink\" title=\"4. 外联css\"></a>4. 外联css</h3><p>利用浏览器缓存，将一些公共的css进行外链，使用缓存，加快用户第一次以后访问页面的速度</p>\n<hr>\n<h2 id=\"六-Javascript相关优化\"><a href=\"#六-Javascript相关优化\" class=\"headerlink\" title=\"六. Javascript相关优化\"></a>六. Javascript相关优化</h2><h3 id=\"1-js文件放底部\"><a href=\"#1-js文件放底部\" class=\"headerlink\" title=\"1. js文件放底部\"></a>1. js文件放底部</h3><p>这一问题的原因是脚本是并行阻塞下载的。HTTP/1.1协议中建议浏览器不在同一域名下并行下载多于两个的资源。假如你的图片是在多个域名下的，你可以并行下载超过两张的图片。可是一个脚本在下载的时候，浏览器不能再开始其他的下载，即使在不同的域名下。</p>\n<p>一个可供采纳的建议是利用延迟加载脚本技术（defer）。这是一种可以让浏览器继续渲染的方案。不幸的是，fireforx不支持defer属性。</p>\n<h3 id=\"2-js代码去重\"><a href=\"#2-js代码去重\" class=\"headerlink\" title=\"2. js代码去重\"></a>2. js代码去重</h3><p>1.将重复的js代码去掉<br>2.将没有使用过的变量去掉<br>3.将没有调用到的函数去掉</p>\n<h3 id=\"3-无阻塞下载脚本\"><a href=\"#3-无阻塞下载脚本\" class=\"headerlink\" title=\"3. 无阻塞下载脚本\"></a>3. 无阻塞下载脚本</h3><p><em>几种下载外部脚本且不被阻塞的技术</em></p>\n<ol>\n<li>XHR Eval：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过eval执行内容。缺陷：不能跨域。</li>\n<li>XHR 注入：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过创建script元素注入其中执行内容。缺陷：不能跨域。</li>\n<li>Script in Iframe：通过iframe的src属性加载脚本。</li>\n<li>Script DOM Element：通过创建script标签元素来加载脚本。</li>\n<li>Script Defer：IE特有</li>\n<li>document.write Script Tag：通过把script标签代码用write方法放到页面中加载脚本。</li>\n</ol>\n<h3 id=\"4-外联js和行内js\"><a href=\"#4-外联js和行内js\" class=\"headerlink\" title=\"4. 外联js和行内js\"></a>4. 外联js和行内js</h3><p>1.将外联脚本放在外联样式表之后<br>2.将行内脚本放在其他资源之后</p>\n<h3 id=\"5-js编码要点\"><a href=\"#5-js编码要点\" class=\"headerlink\" title=\"5. js编码要点\"></a>5. js编码要点</h3><p>详细请参看前端性能优化相关编码规范：js编码规范</p>\n<hr>\n<h2 id=\"七-图片相关优化\"><a href=\"#七-图片相关优化\" class=\"headerlink\" title=\"七. 图片相关优化\"></a>七. 图片相关优化</h2><ol>\n<li>图片压缩：在条件允许的情况下尽量使用PNG8格式</li>\n<li>图片合并：详见CSS sprite</li>\n<li>图片缩放：服务器端进行图片缩放</li>\n</ol>\n<h2 id=\"八-其他优化\"><a href=\"#八-其他优化\" class=\"headerlink\" title=\"八. 其他优化\"></a>八. 其他优化</h2><ol>\n<li>减少页面DOM元素</li>\n<li>延迟加载和预加载资源</li>\n<li>将Get作为Ajax请求的方法</li>\n<li>尽量不要使用iframe：</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h3><ul>\n<li><a href=\"#前端性能优化点\">前端性能优化点</a></li>\n<li><a href=\"#一-http优化\">一. HTTP优化</a></li>\n<li><a href=\"#减少http请求\">1. 减少HTTP请求</a></li>\n<li><a href=\"#重定向优化\">2. 重定向优化</a></li>\n<li><a href=\"#避免死链空链错误\">3. 避免死链/空链/404/410错误</a></li>\n<li><a href=\"#尽早flush-buffer\">4. 尽早flush buffer</a></li>\n<li><p><a href=\"#http中的character设置\">5. http中的character设置</a></p>\n</li>\n<li><p><a href=\"#二-缓存优化\">二. 缓存优化</a></p>\n</li>\n<li><a href=\"#浏览器缓存\">1. 浏览器缓存</a></li>\n<li><a href=\"#添加-expires-或-cache-control-头\">添加 Expires 或 Cache-Control 头</a></li>\n<li><a href=\"#对动态可用缓存使用身份识别\">对动态可用缓存使用“身份识别”</a></li>\n<li><a href=\"#为ie设置vary的header\">为IE设置Vary的header</a></li>\n<li><p><a href=\"#避免firefox中url造成的缓存冲突\">避免firefox中URL造成的缓存冲突</a></p>\n</li>\n<li><p><a href=\"#代理服务器静态资源服务器缓存\">2. 代理服务器(静态资源服务器)缓存</a></p>\n</li>\n<li><p><a href=\"#三-dns\">三. DNS</a></p>\n</li>\n<li><a href=\"#减小dns解析\">1. 减小DNS解析</a></li>\n<li><p><a href=\"#增加静态资源域名\">2. 增加静态资源域名</a></p>\n</li>\n<li><p><a href=\"#四-服务器负载优化\">四. 服务器负载优化</a></p>\n</li>\n<li><a href=\"#使用cnd\">1. 使用CND</a></li>\n<li><a href=\"#cookie优化\">2. Cookie优化</a></li>\n<li><a href=\"#使用gzip\">3. 使用Gzip</a></li>\n<li><p><a href=\"#压缩文件\">4. 压缩文件</a></p>\n</li>\n<li><p><a href=\"#五-css相关优化\">五. CSS相关优化</a></p>\n</li>\n<li><a href=\"#样式表合并放头部\">1. 样式表合并放头部</a></li>\n<li><a href=\"#css编码要点\">2. css编码要点</a></li>\n<li><a href=\"#使用css-sprite\">3. 使用css Sprite</a></li>\n<li><p><a href=\"#外联css\">4. 外联css</a></p>\n</li>\n<li><p><a href=\"#六-javascript相关优化\">六. Javascript相关优化</a></p>\n</li>\n<li><a href=\"#js文件放底部\">1. js文件放底部</a></li>\n<li><a href=\"#js代码去重\">2. js代码去重</a></li>\n<li><a href=\"#无阻塞下载脚本\">3. 无阻塞下载脚本</a></li>\n<li><a href=\"#外联js和行内js\">4. 外联js和行内js</a></li>\n<li><p><a href=\"#js编码要点\">5. js编码要点</a></p>\n</li>\n<li><p><a href=\"#七-图片相关优化\">七. 图片相关优化</a></p>\n</li>\n<li><a href=\"#八-其他优化\">八. 其他优化</a></li>\n</ul>\n<h1 id=\"前端性能优化点\"><a href=\"#前端性能优化点\" class=\"headerlink\" title=\"前端性能优化点\"></a>前端性能优化点</h1><blockquote>\n<p>说明：本文主要介绍前端性能优化点</p>\n</blockquote>\n<hr>\n<h2 id=\"一-HTTP优化\"><a href=\"#一-HTTP优化\" class=\"headerlink\" title=\"一. HTTP优化\"></a>一. HTTP优化</h2><h3 id=\"1-减少HTTP请求\"><a href=\"#1-减少HTTP请求\" class=\"headerlink\" title=\"1. 减少HTTP请求\"></a>1. 减少HTTP请求</h3><ol>\n<li>合并文件，例如css代码和js代码分别合并到一个css文件和js文件中;</li>\n<li>使用css sprite，详细请参考css优化中的css sprite部分。</li>\n<li>使用base64技术</li>\n</ol>\n<h3 id=\"2-重定向优化\"><a href=\"#2-重定向优化\" class=\"headerlink\" title=\"2. 重定向优化\"></a>2. 重定向优化</h3><ol>\n<li>消除没必要的跳转</li>\n<li>利用服务器重写用户键入的链接</li>\n<li>使用HTTP而不是js或者meta来重定向</li>\n</ol>\n<h3 id=\"3-避免死链-空链-404-410错误\"><a href=\"#3-避免死链-空链-404-410错误\" class=\"headerlink\" title=\"3. 避免死链/空链/404/410错误\"></a>3. 避免死链/空链/404/410错误</h3><ol>\n<li>避免出现404 Not Found错误</li>\n<li>避免出现图片请求空链接（img.src=””）</li>\n</ol>\n<h3 id=\"4-尽早flush-buffer\"><a href=\"#4-尽早flush-buffer\" class=\"headerlink\" title=\"4. 尽早flush buffer\"></a>4. 尽早flush buffer</h3><p>尽早的使用flush buffer可以让一部分内容先加载出来，提高用户体验。</p>\n<h3 id=\"5-http中的character设置\"><a href=\"#5-http中的character设置\" class=\"headerlink\" title=\"5. http中的character设置\"></a>5. http中的character设置</h3><p>指定content-type和正确的character编码</p>\n<hr>\n<h2 id=\"二-缓存优化\"><a href=\"#二-缓存优化\" class=\"headerlink\" title=\"二. 缓存优化\"></a>二. 缓存优化</h2><h3 id=\"1-浏览器缓存\"><a href=\"#1-浏览器缓存\" class=\"headerlink\" title=\"1. 浏览器缓存\"></a>1. 浏览器缓存</h3><h4 id=\"添加-Expires-或-Cache-Control-头\"><a href=\"#添加-Expires-或-Cache-Control-头\" class=\"headerlink\" title=\"添加 Expires 或 Cache-Control 头\"></a>添加 Expires 或 Cache-Control 头</h4><ol>\n<li>对于静态资源：通过设置一个很远的过期时间来实现“从不过期”</li>\n<li>对于动态资源：用一个适当的 Cache-Control 头来帮助浏览器控制请求</li>\n</ol>\n<p>浏览器利用缓存来减少http请求的数目和大小，让页面加载的更快。web服务器利用http响应中的Expires头来告诉客户端一个资源能够被缓存多久。</p>\n<p>需要注意的是，如果你利用了一个“不过期”的Expires头，你必须在资源改变的同时改变资源的名字。这一技术提高页面性能是基于用户已经访问过你的网站的基础之上的。</p>\n<ol start=\"3\">\n<li>设置Last-Modified日期为最近资源需要改变的时间。</li>\n</ol>\n<h4 id=\"对动态可用缓存使用“身份识别”\"><a href=\"#对动态可用缓存使用“身份识别”\" class=\"headerlink\" title=\"对动态可用缓存使用“身份识别”\"></a>对动态可用缓存使用“身份识别”</h4><p>通过链接到资源的唯一url（每次改变资源时同时改变其文件名）来改变缓存</p>\n<h4 id=\"为IE设置Vary的header\"><a href=\"#为IE设置Vary的header\" class=\"headerlink\" title=\"为IE设置Vary的header\"></a>为IE设置Vary的header</h4><h4 id=\"避免firefox中URL造成的缓存冲突\"><a href=\"#避免firefox中URL造成的缓存冲突\" class=\"headerlink\" title=\"避免firefox中URL造成的缓存冲突\"></a>避免firefox中URL造成的缓存冲突</h4><p>firefox通过hash表存储url的缓存，但hash值仅仅有8个字符，可能会造成hash冲突，所以你需要确保你的资源urldiff多于8字符边界。</p>\n<h3 id=\"2-代理服务器-静态资源服务器-缓存\"><a href=\"#2-代理服务器-静态资源服务器-缓存\" class=\"headerlink\" title=\"2. 代理服务器(静态资源服务器)缓存\"></a>2. 代理服务器(静态资源服务器)缓存</h3><p><em>利用Cache-control：public的头可以让资源缓存在一个web代理服务器上面来让其他用户使用。</em></p>\n<ol>\n<li><p>不要在静态资源的url上面添加查询字符串</p>\n</li>\n<li><p>不用在代理服务器上缓存设置了cookie的资源</p>\n</li>\n<li><p>要有使用代理缓存js和css文件的意识</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"三-DNS\"><a href=\"#三-DNS\" class=\"headerlink\" title=\"三. DNS\"></a>三. DNS</h2><h3 id=\"1-减小DNS解析\"><a href=\"#1-减小DNS解析\" class=\"headerlink\" title=\"1. 减小DNS解析\"></a>1. 减小DNS解析</h3><p>1.固定URL提供资源<br>2.尽可能的使用URL路径来代替主机域名，例如developer.example.com可以被<a href=\"http://www.example.com/developer代替。除非有技术上的原因需要不同的主机域名。\" target=\"_blank\" rel=\"noopener\">www.example.com/developer代替。除非有技术上的原因需要不同的主机域名。</a><br>3.将从同一主机域名下的需要先加载的js文件作为主要文件送达<br>4.考虑使用DNS预解析</p>\n<h3 id=\"2-增加静态资源域名\"><a href=\"#2-增加静态资源域名\" class=\"headerlink\" title=\"2. 增加静态资源域名\"></a>2. 增加静态资源域名</h3><p>实现多个资源的并行下载</p>\n<hr>\n<h2 id=\"四-服务器负载优化\"><a href=\"#四-服务器负载优化\" class=\"headerlink\" title=\"四. 服务器负载优化\"></a>四. 服务器负载优化</h2><h3 id=\"1-使用CND\"><a href=\"#1-使用CND\" class=\"headerlink\" title=\"1. 使用CND\"></a>1. 使用CND</h3><p>CDN可以帮助用户更快的获取到所需要的资源。</p>\n<h3 id=\"2-Cookie优化\"><a href=\"#2-Cookie优化\" class=\"headerlink\" title=\"2. Cookie优化\"></a>2. Cookie优化</h3><p>1.使用服务器端的存储为大多数的cookie来做有效载荷：在cookie里存key，在服务器端存value。<br>2.移除没有用的或者重复的cookie<br>3.静态资源请求中不要带上cookie<br>4.不要将需要提前加载的js放到没有cookie的域中加载</p>\n<h3 id=\"3-使用Gzip\"><a href=\"#3-使用Gzip\" class=\"headerlink\" title=\"3. 使用Gzip\"></a>3. 使用Gzip</h3><p>Gzip是当前最流行，最有效的压缩方式。</p>\n<p>1.在http/1.1中，web客户端明确支持在http请求中 Accept-Encoding 头 的 Accept-Encoding: gzip, deflate 压缩方式<br>2.Gzip一般能减少服务器响应文件70%的大小，90%的浏览器都支持gzip<br>3.服务器基于文件类型来选择gzip压缩，很多网站gzip他们的html文件，同样也可以gzip脚本和样式表<br>4.事实上，任何的响应文本，包括xml和json都有压缩的价值，图片和pdf文件不应该被gizp，因为他们已经被压缩过了</p>\n<h3 id=\"4-压缩文件\"><a href=\"#4-压缩文件\" class=\"headerlink\" title=\"4. 压缩文件\"></a>4. 压缩文件</h3><p><em>压缩包括：Javascript、CSS、HTML</em></p>\n<p>让你写的页面能够更有效的压缩：<br>1.按照字母排序指定css键对值<br>2.按照字母排序指定html属性<br>3.对html属性使用一致的引号<br>4.使用一致的字母（小写字母）<br>5.移除没有用到的css</p>\n<hr>\n<h2 id=\"五-CSS相关优化\"><a href=\"#五-CSS相关优化\" class=\"headerlink\" title=\"五. CSS相关优化\"></a>五. CSS相关优化</h2><h3 id=\"1-样式表合并放头部\"><a href=\"#1-样式表合并放头部\" class=\"headerlink\" title=\"1. 样式表合并放头部\"></a>1. 样式表合并放头部</h3><p>1.将样式表移到文件的Head可以让页面加载的更快，这是因为将样式表放在头部有利于页面渲染。<br>2.将样式表放在底部的问题是它阻止了许多浏览器的渲染进度。这些浏览器会锁定渲染进程来保证页面上的元素在他们的样式改变时重绘。</p>\n<h3 id=\"2-css编码要点\"><a href=\"#2-css编码要点\" class=\"headerlink\" title=\"2. css编码要点\"></a>2. css编码要点</h3><p>具体参看性能相关编码规范中的css编码规范</p>\n<h3 id=\"3-使用css-Sprite\"><a href=\"#3-使用css-Sprite\" class=\"headerlink\" title=\"3. 使用css Sprite\"></a>3. 使用css Sprite</h3><p>1.将图片水平放置在sprite中可以让文件大小更小。<br>2.对一起加载的图片使用sprite<br>3.GIF和PNG图片优先使用sprite<br>4.小图片优先sprite<br>5.可缓存的图片使用sprite<br>6.使用sprite工具<br>7.尽量减少sprite图片中的空白空间<br>8.将色彩范围相近的图片进行sprite</p>\n<h3 id=\"4-外联css\"><a href=\"#4-外联css\" class=\"headerlink\" title=\"4. 外联css\"></a>4. 外联css</h3><p>利用浏览器缓存，将一些公共的css进行外链，使用缓存，加快用户第一次以后访问页面的速度</p>\n<hr>\n<h2 id=\"六-Javascript相关优化\"><a href=\"#六-Javascript相关优化\" class=\"headerlink\" title=\"六. Javascript相关优化\"></a>六. Javascript相关优化</h2><h3 id=\"1-js文件放底部\"><a href=\"#1-js文件放底部\" class=\"headerlink\" title=\"1. js文件放底部\"></a>1. js文件放底部</h3><p>这一问题的原因是脚本是并行阻塞下载的。HTTP/1.1协议中建议浏览器不在同一域名下并行下载多于两个的资源。假如你的图片是在多个域名下的，你可以并行下载超过两张的图片。可是一个脚本在下载的时候，浏览器不能再开始其他的下载，即使在不同的域名下。</p>\n<p>一个可供采纳的建议是利用延迟加载脚本技术（defer）。这是一种可以让浏览器继续渲染的方案。不幸的是，fireforx不支持defer属性。</p>\n<h3 id=\"2-js代码去重\"><a href=\"#2-js代码去重\" class=\"headerlink\" title=\"2. js代码去重\"></a>2. js代码去重</h3><p>1.将重复的js代码去掉<br>2.将没有使用过的变量去掉<br>3.将没有调用到的函数去掉</p>\n<h3 id=\"3-无阻塞下载脚本\"><a href=\"#3-无阻塞下载脚本\" class=\"headerlink\" title=\"3. 无阻塞下载脚本\"></a>3. 无阻塞下载脚本</h3><p><em>几种下载外部脚本且不被阻塞的技术</em></p>\n<ol>\n<li>XHR Eval：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过eval执行内容。缺陷：不能跨域。</li>\n<li>XHR 注入：通过XMLHttpRequest从服务器端获取脚本，响应完成时通过创建script元素注入其中执行内容。缺陷：不能跨域。</li>\n<li>Script in Iframe：通过iframe的src属性加载脚本。</li>\n<li>Script DOM Element：通过创建script标签元素来加载脚本。</li>\n<li>Script Defer：IE特有</li>\n<li>document.write Script Tag：通过把script标签代码用write方法放到页面中加载脚本。</li>\n</ol>\n<h3 id=\"4-外联js和行内js\"><a href=\"#4-外联js和行内js\" class=\"headerlink\" title=\"4. 外联js和行内js\"></a>4. 外联js和行内js</h3><p>1.将外联脚本放在外联样式表之后<br>2.将行内脚本放在其他资源之后</p>\n<h3 id=\"5-js编码要点\"><a href=\"#5-js编码要点\" class=\"headerlink\" title=\"5. js编码要点\"></a>5. js编码要点</h3><p>详细请参看前端性能优化相关编码规范：js编码规范</p>\n<hr>\n<h2 id=\"七-图片相关优化\"><a href=\"#七-图片相关优化\" class=\"headerlink\" title=\"七. 图片相关优化\"></a>七. 图片相关优化</h2><ol>\n<li>图片压缩：在条件允许的情况下尽量使用PNG8格式</li>\n<li>图片合并：详见CSS sprite</li>\n<li>图片缩放：服务器端进行图片缩放</li>\n</ol>\n<h2 id=\"八-其他优化\"><a href=\"#八-其他优化\" class=\"headerlink\" title=\"八. 其他优化\"></a>八. 其他优化</h2><ol>\n<li>减少页面DOM元素</li>\n<li>延迟加载和预加载资源</li>\n<li>将Get作为Ajax请求的方法</li>\n<li>尽量不要使用iframe：</li>\n</ol>\n<hr>\n"},{"title":"前端性能优化相关编码规范","date":"2018-06-22T06:14:20.000Z","cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1556021941506&di=73676e7ba2dd679207b0dd74b905b3e2&imgtype=0&src=http%3A%2F%2Fwww.33lc.com%2Farticle%2FUploadPic%2F2012-10%2F2012101516255476188.jpg","_content":"\n### 目录导航\n\n- [前端性能优化相关编码规范](#前端性能优化相关编码规范)\n- [一. css编码规范](#一-css编码规范)\n- [1.避免使用css表达式](#避免使用css表达式)\n- [2.选择使用而不是@import](#选择使用而不是import)\n- [3.避免使用Filter](#避免使用filter)\n- [4.css选择符](#css选择符)\n- [css选择符类型](#css选择符类型)\n- [高效的使用css选择符](#高效的使用css选择符)\n- [编写高效的css选择符](#编写高效的css选择符)\n\n- [二. Javascript编码规范](#二-javascript编码规范)\n- [1. 一些导致js性能缓慢的例子](#一些导致js性能缓慢的例子)\n- [2. js陷阱](#js陷阱)\n- [3. 加载性能一些可以提高的点：](#加载性能一些可以提高的点)\n- [4. 鲜为人知的DOM](#鲜为人知的dom)\n- [dom性能缓慢可以归结为一下3个原因：](#dom性能缓慢可以归结为一下个原因)\n- [解决方案](#解决方案)\n\n- [5. 面向对象的Javascript](#面向对象的javascript)\n- [6. client-server对话](#client-server对话)\n- [7. 动画](#动画)\n- [8. 事件](#事件)\n- [9. 样式](#样式)\n\n# 前端性能优化相关编码规范\n\n> 说明：本文主要介绍在使用HTML、CSS、JS的过程中，需要注意的编码细节和规范\n\n---\n\n## 一. css编码规范\n\n### 1.避免使用css表达式\n\n### 2.选择使用而不是@import\n\n在IE中，使用@import相当于将放在页面底部。\n\n### 3.避免使用Filter\n\n使用filter的问题是它会阻塞渲染并且当浏览在加载图片时，会冻结浏览器。它也会提升内存消耗，它是作用于一个元素而不是一个图片，所以问题会更严重。\n\n最好的解决方案是完全避免使用AlphaImageLoader，用PNG8来代替。\n\n### 4.css选择符\n\ncss选择符的编写方式决定了浏览器必须执行的匹配次数，而某些类型的css选择符将会导致浏览器尝试更多匹配，因此开销比简单选择符更高。\n\n#### **css选择符类型**\n\nID选择符：这种类型的选择符简单且高效，用于匹配页面唯一的元素。#id {}\n\n类选择符.className {}\n\n类型选择符tagName {}\n\n相邻兄弟选择符H1 + #toc {}\n\n子选择符#toc > li {}\n\n后代选择符#toc A {}\n\n通配选择符 * {}\n\n属性选择符 [href=”#index”] {}\n\n伪类和伪元素 A:hover {}\n\n#### **高效的使用css选择符**\n\n*最右边优先：事实上，css选择符是从右到左进行匹配的。*\n\n##### 编写高效的css选择符\n\n1. 避免使用通配规则：仅使用ID、类选择符\n2. 不要限定ID选择符：ID选择符左边不用加任何其他选择符\n3. 不要限定类选择符：不要用具体的标签来限定类选择符，而是根据实际情况对类名进行拓展。\n4. 让规则越具体越好\n5. 尽量避免使用后代选择符\n6. 尽量避免使用标签做子选择符\n7. 依靠继承\n8. 仔细检查子选择符的用途\n\n---\n\n## 二. Javascript编码规范\n\n### 1. 一些导致js性能缓慢的例子\n\n- \nDOM访问\n\n执行DOM交互的代码比i一般的js代码要慢。DOM交互是不可避免的，但是尽量的减少。例如，动态的使用innerHTML插入HTML语句比创建DOM节点更快。\n\n- \neval\n\n无论什么时候，避免使用eval方法，因为执行这一方法会造成很大的开销。\n\n- \nwith\n\n尽量不要使用with\n\n- \nfor-in 循环\n\n---\n\n### 2. js陷阱\n\n1. \n避免使用eval和Function constructor\n\n使用eval或者function constructor会加大开销因为每一次脚本引擎调用他们是必须将源码转换成可执行代码；\n\n另外，使用eval时，字符串会在执行时被打断\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace1.png)\n\n2. \n避免使用with\n\n3. \n不要在对性能影响很大的地方使用try-catch-finally\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace2.png)\n\n4. \n避免使用全局变量\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace3.png)\n\n5. \n避免在对性能影响较大的地方使用for-in\n\nfor in循环需要脚本引擎构建一个枚举属性列表，而且每次都要从头重复检查\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace4.png)\n\n6. \n使用字符串累加模式\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace5.png)\n\n7. \n原生的操作比函数更快\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace6.png)\n\n8. \n将函数而不是字符串传到setTimeout()和setInterval()中\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace7.png)\n\n9. \n避免对象里没必要的DOM引用\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace8.png)\n\n10. \n最大化对象解析速度，最小化作用域链\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace9.png)\n\n11. \n尽量让脚本声明的变量短一点，不要太长，特别是循环里面的变量\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace10.png)\n\n12. \n将自身引用存储在作用域外的变量中\n\n当一个funciton被执行时，一个执行的上下文（context）会被创建，被激活的对象将所有自身变量push到上下文（context）的作用域链之前。\n\n离作用域链越远，解析的越慢，这也意味着作用域本地的变量时解析的最快的。\n将自身引用用作用域之外的变量存储，读写都会变的更快，这在全局变量和一些深度查找的资源解析中特别明显。\n\n当然，作用域内定义的变量比使用对象自身访问的速度更快。\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace11.png)\n\n假如你需要在一个大循环中访问一个dom，这样子会更快：\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace12.png)\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace13.png)\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace14.png)\n\n---\n\n### 3. 加载性能一些可以提高的点：\n\n1. \n更快的加载和展现页面可以让js加载没有阻塞\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace15.png)\n\n2. \n添加Experes或者Cache-Control HTTPheader\n\n3. \nGzip javascript和css资源\n\n4. \n利用YUI或者JSMin压缩代码\n\n5. \n尽量减少资源的数目和大小\n\n6. \n让脚本无阻赛并行下载\n\n7. \n合并异步加载的脚本\n\n8. \n将行内脚本放到样式表之上？有待考证，不科学\n\n9. \n少用iframe\n\n---\n\n### 4. 鲜为人知的DOM\n\n#### dom性能缓慢可以归结为一下3个原因：\n\n- 大规模的DOM操作 \n- 脚本触发太多的重构和重绘\n- 定位节点在DOM中的路径慢\n\n#### 解决方案\n\n1. \n尽可能减小DOM的大小\n\n2. \n使用文档的组件模板来进行复用\n\n动态的在dom中插入或者更新元素是代价很大的。一个有效的方法来解决这个问题是利用HTML模板来插入一些对话框或者UI组件。\n\n3. \n最小化重绘和重构的次数\n\n重绘发生在一些元素可见或者隐藏的时候，但是没有改变document的布局\n\n重构发生在DOM的操作方式影响到布局。\n\n重构的代价比重绘大的多得多。\n\n重构表格比重构块状元素代价大\n\n绝对定位的元素不会对document的布局产生影响\n\nDOM的修改会触发重绘\n\n**参考资料**：\n\n- [Repaint and reflow at Opera Developer Network](http://dev.opera.com/articles/view/efficient-javascript/?page=3#reflow)\n- [Notes on HTML Reflow](http://www-archive.mozilla.org/newlayout/doc/reflow.html) - more detailed information on the reflow process (archived)\n- [Reflows & Repaints: CSS Performance making your JavaScript slow](http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/)\n- [Go With The Reflow](http://www.slideshare.net/lsimon/go-with-the-reflow)\n- [Rendering: repaint, reflow/relayout, restyle](http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/)\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace16.png)\n\n4. \n利用cloneNode()\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace17.png)\n\n5. \n利用HTML模板和innerHTML\n\n6. \n设定元素不可见再进行改变（质疑，appendChild不会重发重绘，js执行完成以后才会）\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace18.png)\n\n7. \n尽量少的使用改变元素尺寸或位置的操作\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace19.png)\n\n8. \n使用className来完成多个预定义样式的的改变\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace20.png)\n\n9. \n利用设定属性来动态完成多个样式的设定\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace21.png)\n\n10. \ncss class name vs. style属性\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace22.png)\n\n11. \n不要遍历大量的节点，避免在遍历时改变dom结构\n\n12. \n将DOM元素缓存在变量中使用\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace23.png)\n\n13. \n在dom元素使用完以后移除引用\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace24.png)\n\n---\n\n### 5. 面向对象的Javascript\n\n1. 考虑使用继承机制\n\n---\n\n### 6. client-server对话\n\n1. \n对XMLHttpRequest设定超时时间\n\n2. \n考虑使用约定的数据来做大数据的处理，比如选择xml或者json\n\n---\n\n### 7. 动画\n\n1. \n选择性的使用动画\n\n2. \n使用scrollTo()方法来实现滚动动画\n\n3. \n将动画元素的position设置为absolute或者fix\n\n4. \n在同一时间使用一个timer来服务多个动画元素\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace25.png)\n\n5. \n让动画的速度更平滑\n\n---\n\n### 8. 事件\n\n1. \n利用事件冒泡\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace26.png)\n\n2. \n不要对一些经常触发的event使用代理\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace27.png)\n\n3. \nJavascript调用栈使用setTimeout不会溢出\n\n原因是setTimeout是伪异步的，把函数交给setTimeout处理后，原来的函数不会等待，会继续执行，函数会结束，资源也就可以释放。\n\n而不用setTimeout的时候，函数必须等待调用的函数返回后才能继续执行，但调用的函数又必须等待下一级函数，这样所有函数都不能结束，资源也就释放不出。\n\n换句话说，就是死锁。\n\n---\n\n### 9. 样式\n\n1. \n优化css\n\n2. \n优化图片\n\n---\n","source":"_posts/前端性能优化相关编码规范-day04.md","raw":"---\ntitle:  前端性能优化相关编码规范\ndate: 2018-06-22 14:14:20\ntags: \n    - 前端性能\ncover: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1556021941506&di=73676e7ba2dd679207b0dd74b905b3e2&imgtype=0&src=http%3A%2F%2Fwww.33lc.com%2Farticle%2FUploadPic%2F2012-10%2F2012101516255476188.jpg\ncategories: \n    - 大杂烩\n---\n\n### 目录导航\n\n- [前端性能优化相关编码规范](#前端性能优化相关编码规范)\n- [一. css编码规范](#一-css编码规范)\n- [1.避免使用css表达式](#避免使用css表达式)\n- [2.选择使用而不是@import](#选择使用而不是import)\n- [3.避免使用Filter](#避免使用filter)\n- [4.css选择符](#css选择符)\n- [css选择符类型](#css选择符类型)\n- [高效的使用css选择符](#高效的使用css选择符)\n- [编写高效的css选择符](#编写高效的css选择符)\n\n- [二. Javascript编码规范](#二-javascript编码规范)\n- [1. 一些导致js性能缓慢的例子](#一些导致js性能缓慢的例子)\n- [2. js陷阱](#js陷阱)\n- [3. 加载性能一些可以提高的点：](#加载性能一些可以提高的点)\n- [4. 鲜为人知的DOM](#鲜为人知的dom)\n- [dom性能缓慢可以归结为一下3个原因：](#dom性能缓慢可以归结为一下个原因)\n- [解决方案](#解决方案)\n\n- [5. 面向对象的Javascript](#面向对象的javascript)\n- [6. client-server对话](#client-server对话)\n- [7. 动画](#动画)\n- [8. 事件](#事件)\n- [9. 样式](#样式)\n\n# 前端性能优化相关编码规范\n\n> 说明：本文主要介绍在使用HTML、CSS、JS的过程中，需要注意的编码细节和规范\n\n---\n\n## 一. css编码规范\n\n### 1.避免使用css表达式\n\n### 2.选择使用而不是@import\n\n在IE中，使用@import相当于将放在页面底部。\n\n### 3.避免使用Filter\n\n使用filter的问题是它会阻塞渲染并且当浏览在加载图片时，会冻结浏览器。它也会提升内存消耗，它是作用于一个元素而不是一个图片，所以问题会更严重。\n\n最好的解决方案是完全避免使用AlphaImageLoader，用PNG8来代替。\n\n### 4.css选择符\n\ncss选择符的编写方式决定了浏览器必须执行的匹配次数，而某些类型的css选择符将会导致浏览器尝试更多匹配，因此开销比简单选择符更高。\n\n#### **css选择符类型**\n\nID选择符：这种类型的选择符简单且高效，用于匹配页面唯一的元素。#id {}\n\n类选择符.className {}\n\n类型选择符tagName {}\n\n相邻兄弟选择符H1 + #toc {}\n\n子选择符#toc > li {}\n\n后代选择符#toc A {}\n\n通配选择符 * {}\n\n属性选择符 [href=”#index”] {}\n\n伪类和伪元素 A:hover {}\n\n#### **高效的使用css选择符**\n\n*最右边优先：事实上，css选择符是从右到左进行匹配的。*\n\n##### 编写高效的css选择符\n\n1. 避免使用通配规则：仅使用ID、类选择符\n2. 不要限定ID选择符：ID选择符左边不用加任何其他选择符\n3. 不要限定类选择符：不要用具体的标签来限定类选择符，而是根据实际情况对类名进行拓展。\n4. 让规则越具体越好\n5. 尽量避免使用后代选择符\n6. 尽量避免使用标签做子选择符\n7. 依靠继承\n8. 仔细检查子选择符的用途\n\n---\n\n## 二. Javascript编码规范\n\n### 1. 一些导致js性能缓慢的例子\n\n- \nDOM访问\n\n执行DOM交互的代码比i一般的js代码要慢。DOM交互是不可避免的，但是尽量的减少。例如，动态的使用innerHTML插入HTML语句比创建DOM节点更快。\n\n- \neval\n\n无论什么时候，避免使用eval方法，因为执行这一方法会造成很大的开销。\n\n- \nwith\n\n尽量不要使用with\n\n- \nfor-in 循环\n\n---\n\n### 2. js陷阱\n\n1. \n避免使用eval和Function constructor\n\n使用eval或者function constructor会加大开销因为每一次脚本引擎调用他们是必须将源码转换成可执行代码；\n\n另外，使用eval时，字符串会在执行时被打断\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace1.png)\n\n2. \n避免使用with\n\n3. \n不要在对性能影响很大的地方使用try-catch-finally\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace2.png)\n\n4. \n避免使用全局变量\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace3.png)\n\n5. \n避免在对性能影响较大的地方使用for-in\n\nfor in循环需要脚本引擎构建一个枚举属性列表，而且每次都要从头重复检查\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace4.png)\n\n6. \n使用字符串累加模式\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace5.png)\n\n7. \n原生的操作比函数更快\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace6.png)\n\n8. \n将函数而不是字符串传到setTimeout()和setInterval()中\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace7.png)\n\n9. \n避免对象里没必要的DOM引用\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace8.png)\n\n10. \n最大化对象解析速度，最小化作用域链\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace9.png)\n\n11. \n尽量让脚本声明的变量短一点，不要太长，特别是循环里面的变量\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace10.png)\n\n12. \n将自身引用存储在作用域外的变量中\n\n当一个funciton被执行时，一个执行的上下文（context）会被创建，被激活的对象将所有自身变量push到上下文（context）的作用域链之前。\n\n离作用域链越远，解析的越慢，这也意味着作用域本地的变量时解析的最快的。\n将自身引用用作用域之外的变量存储，读写都会变的更快，这在全局变量和一些深度查找的资源解析中特别明显。\n\n当然，作用域内定义的变量比使用对象自身访问的速度更快。\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace11.png)\n\n假如你需要在一个大循环中访问一个dom，这样子会更快：\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace12.png)\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace13.png)\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace14.png)\n\n---\n\n### 3. 加载性能一些可以提高的点：\n\n1. \n更快的加载和展现页面可以让js加载没有阻塞\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace15.png)\n\n2. \n添加Experes或者Cache-Control HTTPheader\n\n3. \nGzip javascript和css资源\n\n4. \n利用YUI或者JSMin压缩代码\n\n5. \n尽量减少资源的数目和大小\n\n6. \n让脚本无阻赛并行下载\n\n7. \n合并异步加载的脚本\n\n8. \n将行内脚本放到样式表之上？有待考证，不科学\n\n9. \n少用iframe\n\n---\n\n### 4. 鲜为人知的DOM\n\n#### dom性能缓慢可以归结为一下3个原因：\n\n- 大规模的DOM操作 \n- 脚本触发太多的重构和重绘\n- 定位节点在DOM中的路径慢\n\n#### 解决方案\n\n1. \n尽可能减小DOM的大小\n\n2. \n使用文档的组件模板来进行复用\n\n动态的在dom中插入或者更新元素是代价很大的。一个有效的方法来解决这个问题是利用HTML模板来插入一些对话框或者UI组件。\n\n3. \n最小化重绘和重构的次数\n\n重绘发生在一些元素可见或者隐藏的时候，但是没有改变document的布局\n\n重构发生在DOM的操作方式影响到布局。\n\n重构的代价比重绘大的多得多。\n\n重构表格比重构块状元素代价大\n\n绝对定位的元素不会对document的布局产生影响\n\nDOM的修改会触发重绘\n\n**参考资料**：\n\n- [Repaint and reflow at Opera Developer Network](http://dev.opera.com/articles/view/efficient-javascript/?page=3#reflow)\n- [Notes on HTML Reflow](http://www-archive.mozilla.org/newlayout/doc/reflow.html) - more detailed information on the reflow process (archived)\n- [Reflows & Repaints: CSS Performance making your JavaScript slow](http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/)\n- [Go With The Reflow](http://www.slideshare.net/lsimon/go-with-the-reflow)\n- [Rendering: repaint, reflow/relayout, restyle](http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/)\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace16.png)\n\n4. \n利用cloneNode()\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace17.png)\n\n5. \n利用HTML模板和innerHTML\n\n6. \n设定元素不可见再进行改变（质疑，appendChild不会重发重绘，js执行完成以后才会）\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace18.png)\n\n7. \n尽量少的使用改变元素尺寸或位置的操作\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace19.png)\n\n8. \n使用className来完成多个预定义样式的的改变\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace20.png)\n\n9. \n利用设定属性来动态完成多个样式的设定\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace21.png)\n\n10. \ncss class name vs. style属性\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace22.png)\n\n11. \n不要遍历大量的节点，避免在遍历时改变dom结构\n\n12. \n将DOM元素缓存在变量中使用\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace23.png)\n\n13. \n在dom元素使用完以后移除引用\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace24.png)\n\n---\n\n### 5. 面向对象的Javascript\n\n1. 考虑使用继承机制\n\n---\n\n### 6. client-server对话\n\n1. \n对XMLHttpRequest设定超时时间\n\n2. \n考虑使用约定的数据来做大数据的处理，比如选择xml或者json\n\n---\n\n### 7. 动画\n\n1. \n选择性的使用动画\n\n2. \n使用scrollTo()方法来实现滚动动画\n\n3. \n将动画元素的position设置为absolute或者fix\n\n4. \n在同一时间使用一个timer来服务多个动画元素\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace25.png)\n\n5. \n让动画的速度更平滑\n\n---\n\n### 8. 事件\n\n1. \n利用事件冒泡\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace26.png)\n\n2. \n不要对一些经常触发的event使用代理\n\n![enter image description here](http://www.xuanfengge.com/netcool/images/performace27.png)\n\n3. \nJavascript调用栈使用setTimeout不会溢出\n\n原因是setTimeout是伪异步的，把函数交给setTimeout处理后，原来的函数不会等待，会继续执行，函数会结束，资源也就可以释放。\n\n而不用setTimeout的时候，函数必须等待调用的函数返回后才能继续执行，但调用的函数又必须等待下一级函数，这样所有函数都不能结束，资源也就释放不出。\n\n换句话说，就是死锁。\n\n---\n\n### 9. 样式\n\n1. \n优化css\n\n2. \n优化图片\n\n---\n","slug":"前端性能优化相关编码规范-day04","published":1,"updated":"2019-04-23T09:41:50.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdgnrp600097wumylcenbqi","content":"<h3 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h3><ul>\n<li><a href=\"#前端性能优化相关编码规范\">前端性能优化相关编码规范</a></li>\n<li><a href=\"#一-css编码规范\">一. css编码规范</a></li>\n<li><a href=\"#避免使用css表达式\">1.避免使用css表达式</a></li>\n<li><a href=\"#选择使用而不是import\">2.选择使用而不是@import</a></li>\n<li><a href=\"#避免使用filter\">3.避免使用Filter</a></li>\n<li><a href=\"#css选择符\">4.css选择符</a></li>\n<li><a href=\"#css选择符类型\">css选择符类型</a></li>\n<li><a href=\"#高效的使用css选择符\">高效的使用css选择符</a></li>\n<li><p><a href=\"#编写高效的css选择符\">编写高效的css选择符</a></p>\n</li>\n<li><p><a href=\"#二-javascript编码规范\">二. Javascript编码规范</a></p>\n</li>\n<li><a href=\"#一些导致js性能缓慢的例子\">1. 一些导致js性能缓慢的例子</a></li>\n<li><a href=\"#js陷阱\">2. js陷阱</a></li>\n<li><a href=\"#加载性能一些可以提高的点\">3. 加载性能一些可以提高的点：</a></li>\n<li><a href=\"#鲜为人知的dom\">4. 鲜为人知的DOM</a></li>\n<li><a href=\"#dom性能缓慢可以归结为一下个原因\">dom性能缓慢可以归结为一下3个原因：</a></li>\n<li><p><a href=\"#解决方案\">解决方案</a></p>\n</li>\n<li><p><a href=\"#面向对象的javascript\">5. 面向对象的Javascript</a></p>\n</li>\n<li><a href=\"#client-server对话\">6. client-server对话</a></li>\n<li><a href=\"#动画\">7. 动画</a></li>\n<li><a href=\"#事件\">8. 事件</a></li>\n<li><a href=\"#样式\">9. 样式</a></li>\n</ul>\n<h1 id=\"前端性能优化相关编码规范\"><a href=\"#前端性能优化相关编码规范\" class=\"headerlink\" title=\"前端性能优化相关编码规范\"></a>前端性能优化相关编码规范</h1><blockquote>\n<p>说明：本文主要介绍在使用HTML、CSS、JS的过程中，需要注意的编码细节和规范</p>\n</blockquote>\n<hr>\n<h2 id=\"一-css编码规范\"><a href=\"#一-css编码规范\" class=\"headerlink\" title=\"一. css编码规范\"></a>一. css编码规范</h2><h3 id=\"1-避免使用css表达式\"><a href=\"#1-避免使用css表达式\" class=\"headerlink\" title=\"1.避免使用css表达式\"></a>1.避免使用css表达式</h3><h3 id=\"2-选择使用而不是-import\"><a href=\"#2-选择使用而不是-import\" class=\"headerlink\" title=\"2.选择使用而不是@import\"></a>2.选择使用而不是@import</h3><p>在IE中，使用@import相当于将放在页面底部。</p>\n<h3 id=\"3-避免使用Filter\"><a href=\"#3-避免使用Filter\" class=\"headerlink\" title=\"3.避免使用Filter\"></a>3.避免使用Filter</h3><p>使用filter的问题是它会阻塞渲染并且当浏览在加载图片时，会冻结浏览器。它也会提升内存消耗，它是作用于一个元素而不是一个图片，所以问题会更严重。</p>\n<p>最好的解决方案是完全避免使用AlphaImageLoader，用PNG8来代替。</p>\n<h3 id=\"4-css选择符\"><a href=\"#4-css选择符\" class=\"headerlink\" title=\"4.css选择符\"></a>4.css选择符</h3><p>css选择符的编写方式决定了浏览器必须执行的匹配次数，而某些类型的css选择符将会导致浏览器尝试更多匹配，因此开销比简单选择符更高。</p>\n<h4 id=\"css选择符类型\"><a href=\"#css选择符类型\" class=\"headerlink\" title=\"css选择符类型\"></a><strong>css选择符类型</strong></h4><p>ID选择符：这种类型的选择符简单且高效，用于匹配页面唯一的元素。#id {}</p>\n<p>类选择符.className {}</p>\n<p>类型选择符tagName {}</p>\n<p>相邻兄弟选择符H1 + #toc {}</p>\n<p>子选择符#toc &gt; li {}</p>\n<p>后代选择符#toc A {}</p>\n<p>通配选择符 * {}</p>\n<p>属性选择符 [href=”#index”] {}</p>\n<p>伪类和伪元素 A:hover {}</p>\n<h4 id=\"高效的使用css选择符\"><a href=\"#高效的使用css选择符\" class=\"headerlink\" title=\"高效的使用css选择符\"></a><strong>高效的使用css选择符</strong></h4><p><em>最右边优先：事实上，css选择符是从右到左进行匹配的。</em></p>\n<h5 id=\"编写高效的css选择符\"><a href=\"#编写高效的css选择符\" class=\"headerlink\" title=\"编写高效的css选择符\"></a>编写高效的css选择符</h5><ol>\n<li>避免使用通配规则：仅使用ID、类选择符</li>\n<li>不要限定ID选择符：ID选择符左边不用加任何其他选择符</li>\n<li>不要限定类选择符：不要用具体的标签来限定类选择符，而是根据实际情况对类名进行拓展。</li>\n<li>让规则越具体越好</li>\n<li>尽量避免使用后代选择符</li>\n<li>尽量避免使用标签做子选择符</li>\n<li>依靠继承</li>\n<li>仔细检查子选择符的用途</li>\n</ol>\n<hr>\n<h2 id=\"二-Javascript编码规范\"><a href=\"#二-Javascript编码规范\" class=\"headerlink\" title=\"二. Javascript编码规范\"></a>二. Javascript编码规范</h2><h3 id=\"1-一些导致js性能缓慢的例子\"><a href=\"#1-一些导致js性能缓慢的例子\" class=\"headerlink\" title=\"1. 一些导致js性能缓慢的例子\"></a>1. 一些导致js性能缓慢的例子</h3><ul>\n<li>DOM访问</li>\n</ul>\n<p>执行DOM交互的代码比i一般的js代码要慢。DOM交互是不可避免的，但是尽量的减少。例如，动态的使用innerHTML插入HTML语句比创建DOM节点更快。</p>\n<ul>\n<li>eval</li>\n</ul>\n<p>无论什么时候，避免使用eval方法，因为执行这一方法会造成很大的开销。</p>\n<ul>\n<li>with</li>\n</ul>\n<p>尽量不要使用with</p>\n<ul>\n<li>for-in 循环</li>\n</ul>\n<hr>\n<h3 id=\"2-js陷阱\"><a href=\"#2-js陷阱\" class=\"headerlink\" title=\"2. js陷阱\"></a>2. js陷阱</h3><ol>\n<li>避免使用eval和Function constructor</li>\n</ol>\n<p>使用eval或者function constructor会加大开销因为每一次脚本引擎调用他们是必须将源码转换成可执行代码；</p>\n<p>另外，使用eval时，字符串会在执行时被打断</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace1.png\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li><p>避免使用with</p>\n</li>\n<li><p>不要在对性能影响很大的地方使用try-catch-finally</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace2.png\" alt=\"enter image description here\"></p>\n<ol start=\"4\">\n<li>避免使用全局变量</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace3.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li>避免在对性能影响较大的地方使用for-in</li>\n</ol>\n<p>for in循环需要脚本引擎构建一个枚举属性列表，而且每次都要从头重复检查</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace4.png\" alt=\"enter image description here\"></p>\n<ol start=\"6\">\n<li>使用字符串累加模式</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace5.png\" alt=\"enter image description here\"></p>\n<ol start=\"7\">\n<li>原生的操作比函数更快</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace6.png\" alt=\"enter image description here\"></p>\n<ol start=\"8\">\n<li>将函数而不是字符串传到setTimeout()和setInterval()中</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace7.png\" alt=\"enter image description here\"></p>\n<ol start=\"9\">\n<li>避免对象里没必要的DOM引用</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace8.png\" alt=\"enter image description here\"></p>\n<ol start=\"10\">\n<li>最大化对象解析速度，最小化作用域链</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace9.png\" alt=\"enter image description here\"></p>\n<ol start=\"11\">\n<li>尽量让脚本声明的变量短一点，不要太长，特别是循环里面的变量</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace10.png\" alt=\"enter image description here\"></p>\n<ol start=\"12\">\n<li>将自身引用存储在作用域外的变量中</li>\n</ol>\n<p>当一个funciton被执行时，一个执行的上下文（context）会被创建，被激活的对象将所有自身变量push到上下文（context）的作用域链之前。</p>\n<p>离作用域链越远，解析的越慢，这也意味着作用域本地的变量时解析的最快的。<br>将自身引用用作用域之外的变量存储，读写都会变的更快，这在全局变量和一些深度查找的资源解析中特别明显。</p>\n<p>当然，作用域内定义的变量比使用对象自身访问的速度更快。</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace11.png\" alt=\"enter image description here\"></p>\n<p>假如你需要在一个大循环中访问一个dom，这样子会更快：</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace12.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace13.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace14.png\" alt=\"enter image description here\"></p>\n<hr>\n<h3 id=\"3-加载性能一些可以提高的点：\"><a href=\"#3-加载性能一些可以提高的点：\" class=\"headerlink\" title=\"3. 加载性能一些可以提高的点：\"></a>3. 加载性能一些可以提高的点：</h3><ol>\n<li>更快的加载和展现页面可以让js加载没有阻塞</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace15.png\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li><p>添加Experes或者Cache-Control HTTPheader</p>\n</li>\n<li><p>Gzip javascript和css资源</p>\n</li>\n<li><p>利用YUI或者JSMin压缩代码</p>\n</li>\n<li><p>尽量减少资源的数目和大小</p>\n</li>\n<li><p>让脚本无阻赛并行下载</p>\n</li>\n<li><p>合并异步加载的脚本</p>\n</li>\n<li><p>将行内脚本放到样式表之上？有待考证，不科学</p>\n</li>\n<li><p>少用iframe</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"4-鲜为人知的DOM\"><a href=\"#4-鲜为人知的DOM\" class=\"headerlink\" title=\"4. 鲜为人知的DOM\"></a>4. 鲜为人知的DOM</h3><h4 id=\"dom性能缓慢可以归结为一下3个原因：\"><a href=\"#dom性能缓慢可以归结为一下3个原因：\" class=\"headerlink\" title=\"dom性能缓慢可以归结为一下3个原因：\"></a>dom性能缓慢可以归结为一下3个原因：</h4><ul>\n<li>大规模的DOM操作 </li>\n<li>脚本触发太多的重构和重绘</li>\n<li>定位节点在DOM中的路径慢</li>\n</ul>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><ol>\n<li><p>尽可能减小DOM的大小</p>\n</li>\n<li><p>使用文档的组件模板来进行复用</p>\n</li>\n</ol>\n<p>动态的在dom中插入或者更新元素是代价很大的。一个有效的方法来解决这个问题是利用HTML模板来插入一些对话框或者UI组件。</p>\n<ol start=\"3\">\n<li>最小化重绘和重构的次数</li>\n</ol>\n<p>重绘发生在一些元素可见或者隐藏的时候，但是没有改变document的布局</p>\n<p>重构发生在DOM的操作方式影响到布局。</p>\n<p>重构的代价比重绘大的多得多。</p>\n<p>重构表格比重构块状元素代价大</p>\n<p>绝对定位的元素不会对document的布局产生影响</p>\n<p>DOM的修改会触发重绘</p>\n<p><strong>参考资料</strong>：</p>\n<ul>\n<li><a href=\"http://dev.opera.com/articles/view/efficient-javascript/?page=3#reflow\" target=\"_blank\" rel=\"noopener\">Repaint and reflow at Opera Developer Network</a></li>\n<li><a href=\"http://www-archive.mozilla.org/newlayout/doc/reflow.html\" target=\"_blank\" rel=\"noopener\">Notes on HTML Reflow</a> - more detailed information on the reflow process (archived)</li>\n<li><a href=\"http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/\" target=\"_blank\" rel=\"noopener\">Reflows &amp; Repaints: CSS Performance making your JavaScript slow</a></li>\n<li><a href=\"http://www.slideshare.net/lsimon/go-with-the-reflow\" target=\"_blank\" rel=\"noopener\">Go With The Reflow</a></li>\n<li><a href=\"http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/\" target=\"_blank\" rel=\"noopener\">Rendering: repaint, reflow/relayout, restyle</a></li>\n</ul>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace16.png\" alt=\"enter image description here\"></p>\n<ol start=\"4\">\n<li>利用cloneNode()</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace17.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li><p>利用HTML模板和innerHTML</p>\n</li>\n<li><p>设定元素不可见再进行改变（质疑，appendChild不会重发重绘，js执行完成以后才会）</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace18.png\" alt=\"enter image description here\"></p>\n<ol start=\"7\">\n<li>尽量少的使用改变元素尺寸或位置的操作</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace19.png\" alt=\"enter image description here\"></p>\n<ol start=\"8\">\n<li>使用className来完成多个预定义样式的的改变</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace20.png\" alt=\"enter image description here\"></p>\n<ol start=\"9\">\n<li>利用设定属性来动态完成多个样式的设定</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace21.png\" alt=\"enter image description here\"></p>\n<ol start=\"10\">\n<li>css class name vs. style属性</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace22.png\" alt=\"enter image description here\"></p>\n<ol start=\"11\">\n<li><p>不要遍历大量的节点，避免在遍历时改变dom结构</p>\n</li>\n<li><p>将DOM元素缓存在变量中使用</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace23.png\" alt=\"enter image description here\"></p>\n<ol start=\"13\">\n<li>在dom元素使用完以后移除引用</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace24.png\" alt=\"enter image description here\"></p>\n<hr>\n<h3 id=\"5-面向对象的Javascript\"><a href=\"#5-面向对象的Javascript\" class=\"headerlink\" title=\"5. 面向对象的Javascript\"></a>5. 面向对象的Javascript</h3><ol>\n<li>考虑使用继承机制</li>\n</ol>\n<hr>\n<h3 id=\"6-client-server对话\"><a href=\"#6-client-server对话\" class=\"headerlink\" title=\"6. client-server对话\"></a>6. client-server对话</h3><ol>\n<li><p>对XMLHttpRequest设定超时时间</p>\n</li>\n<li><p>考虑使用约定的数据来做大数据的处理，比如选择xml或者json</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"7-动画\"><a href=\"#7-动画\" class=\"headerlink\" title=\"7. 动画\"></a>7. 动画</h3><ol>\n<li><p>选择性的使用动画</p>\n</li>\n<li><p>使用scrollTo()方法来实现滚动动画</p>\n</li>\n<li><p>将动画元素的position设置为absolute或者fix</p>\n</li>\n<li><p>在同一时间使用一个timer来服务多个动画元素</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace25.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li>让动画的速度更平滑</li>\n</ol>\n<hr>\n<h3 id=\"8-事件\"><a href=\"#8-事件\" class=\"headerlink\" title=\"8. 事件\"></a>8. 事件</h3><ol>\n<li>利用事件冒泡</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace26.png\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li>不要对一些经常触发的event使用代理</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace27.png\" alt=\"enter image description here\"></p>\n<ol start=\"3\">\n<li>Javascript调用栈使用setTimeout不会溢出</li>\n</ol>\n<p>原因是setTimeout是伪异步的，把函数交给setTimeout处理后，原来的函数不会等待，会继续执行，函数会结束，资源也就可以释放。</p>\n<p>而不用setTimeout的时候，函数必须等待调用的函数返回后才能继续执行，但调用的函数又必须等待下一级函数，这样所有函数都不能结束，资源也就释放不出。</p>\n<p>换句话说，就是死锁。</p>\n<hr>\n<h3 id=\"9-样式\"><a href=\"#9-样式\" class=\"headerlink\" title=\"9. 样式\"></a>9. 样式</h3><ol>\n<li><p>优化css</p>\n</li>\n<li><p>优化图片</p>\n</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h3><ul>\n<li><a href=\"#前端性能优化相关编码规范\">前端性能优化相关编码规范</a></li>\n<li><a href=\"#一-css编码规范\">一. css编码规范</a></li>\n<li><a href=\"#避免使用css表达式\">1.避免使用css表达式</a></li>\n<li><a href=\"#选择使用而不是import\">2.选择使用而不是@import</a></li>\n<li><a href=\"#避免使用filter\">3.避免使用Filter</a></li>\n<li><a href=\"#css选择符\">4.css选择符</a></li>\n<li><a href=\"#css选择符类型\">css选择符类型</a></li>\n<li><a href=\"#高效的使用css选择符\">高效的使用css选择符</a></li>\n<li><p><a href=\"#编写高效的css选择符\">编写高效的css选择符</a></p>\n</li>\n<li><p><a href=\"#二-javascript编码规范\">二. Javascript编码规范</a></p>\n</li>\n<li><a href=\"#一些导致js性能缓慢的例子\">1. 一些导致js性能缓慢的例子</a></li>\n<li><a href=\"#js陷阱\">2. js陷阱</a></li>\n<li><a href=\"#加载性能一些可以提高的点\">3. 加载性能一些可以提高的点：</a></li>\n<li><a href=\"#鲜为人知的dom\">4. 鲜为人知的DOM</a></li>\n<li><a href=\"#dom性能缓慢可以归结为一下个原因\">dom性能缓慢可以归结为一下3个原因：</a></li>\n<li><p><a href=\"#解决方案\">解决方案</a></p>\n</li>\n<li><p><a href=\"#面向对象的javascript\">5. 面向对象的Javascript</a></p>\n</li>\n<li><a href=\"#client-server对话\">6. client-server对话</a></li>\n<li><a href=\"#动画\">7. 动画</a></li>\n<li><a href=\"#事件\">8. 事件</a></li>\n<li><a href=\"#样式\">9. 样式</a></li>\n</ul>\n<h1 id=\"前端性能优化相关编码规范\"><a href=\"#前端性能优化相关编码规范\" class=\"headerlink\" title=\"前端性能优化相关编码规范\"></a>前端性能优化相关编码规范</h1><blockquote>\n<p>说明：本文主要介绍在使用HTML、CSS、JS的过程中，需要注意的编码细节和规范</p>\n</blockquote>\n<hr>\n<h2 id=\"一-css编码规范\"><a href=\"#一-css编码规范\" class=\"headerlink\" title=\"一. css编码规范\"></a>一. css编码规范</h2><h3 id=\"1-避免使用css表达式\"><a href=\"#1-避免使用css表达式\" class=\"headerlink\" title=\"1.避免使用css表达式\"></a>1.避免使用css表达式</h3><h3 id=\"2-选择使用而不是-import\"><a href=\"#2-选择使用而不是-import\" class=\"headerlink\" title=\"2.选择使用而不是@import\"></a>2.选择使用而不是@import</h3><p>在IE中，使用@import相当于将放在页面底部。</p>\n<h3 id=\"3-避免使用Filter\"><a href=\"#3-避免使用Filter\" class=\"headerlink\" title=\"3.避免使用Filter\"></a>3.避免使用Filter</h3><p>使用filter的问题是它会阻塞渲染并且当浏览在加载图片时，会冻结浏览器。它也会提升内存消耗，它是作用于一个元素而不是一个图片，所以问题会更严重。</p>\n<p>最好的解决方案是完全避免使用AlphaImageLoader，用PNG8来代替。</p>\n<h3 id=\"4-css选择符\"><a href=\"#4-css选择符\" class=\"headerlink\" title=\"4.css选择符\"></a>4.css选择符</h3><p>css选择符的编写方式决定了浏览器必须执行的匹配次数，而某些类型的css选择符将会导致浏览器尝试更多匹配，因此开销比简单选择符更高。</p>\n<h4 id=\"css选择符类型\"><a href=\"#css选择符类型\" class=\"headerlink\" title=\"css选择符类型\"></a><strong>css选择符类型</strong></h4><p>ID选择符：这种类型的选择符简单且高效，用于匹配页面唯一的元素。#id {}</p>\n<p>类选择符.className {}</p>\n<p>类型选择符tagName {}</p>\n<p>相邻兄弟选择符H1 + #toc {}</p>\n<p>子选择符#toc &gt; li {}</p>\n<p>后代选择符#toc A {}</p>\n<p>通配选择符 * {}</p>\n<p>属性选择符 [href=”#index”] {}</p>\n<p>伪类和伪元素 A:hover {}</p>\n<h4 id=\"高效的使用css选择符\"><a href=\"#高效的使用css选择符\" class=\"headerlink\" title=\"高效的使用css选择符\"></a><strong>高效的使用css选择符</strong></h4><p><em>最右边优先：事实上，css选择符是从右到左进行匹配的。</em></p>\n<h5 id=\"编写高效的css选择符\"><a href=\"#编写高效的css选择符\" class=\"headerlink\" title=\"编写高效的css选择符\"></a>编写高效的css选择符</h5><ol>\n<li>避免使用通配规则：仅使用ID、类选择符</li>\n<li>不要限定ID选择符：ID选择符左边不用加任何其他选择符</li>\n<li>不要限定类选择符：不要用具体的标签来限定类选择符，而是根据实际情况对类名进行拓展。</li>\n<li>让规则越具体越好</li>\n<li>尽量避免使用后代选择符</li>\n<li>尽量避免使用标签做子选择符</li>\n<li>依靠继承</li>\n<li>仔细检查子选择符的用途</li>\n</ol>\n<hr>\n<h2 id=\"二-Javascript编码规范\"><a href=\"#二-Javascript编码规范\" class=\"headerlink\" title=\"二. Javascript编码规范\"></a>二. Javascript编码规范</h2><h3 id=\"1-一些导致js性能缓慢的例子\"><a href=\"#1-一些导致js性能缓慢的例子\" class=\"headerlink\" title=\"1. 一些导致js性能缓慢的例子\"></a>1. 一些导致js性能缓慢的例子</h3><ul>\n<li>DOM访问</li>\n</ul>\n<p>执行DOM交互的代码比i一般的js代码要慢。DOM交互是不可避免的，但是尽量的减少。例如，动态的使用innerHTML插入HTML语句比创建DOM节点更快。</p>\n<ul>\n<li>eval</li>\n</ul>\n<p>无论什么时候，避免使用eval方法，因为执行这一方法会造成很大的开销。</p>\n<ul>\n<li>with</li>\n</ul>\n<p>尽量不要使用with</p>\n<ul>\n<li>for-in 循环</li>\n</ul>\n<hr>\n<h3 id=\"2-js陷阱\"><a href=\"#2-js陷阱\" class=\"headerlink\" title=\"2. js陷阱\"></a>2. js陷阱</h3><ol>\n<li>避免使用eval和Function constructor</li>\n</ol>\n<p>使用eval或者function constructor会加大开销因为每一次脚本引擎调用他们是必须将源码转换成可执行代码；</p>\n<p>另外，使用eval时，字符串会在执行时被打断</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace1.png\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li><p>避免使用with</p>\n</li>\n<li><p>不要在对性能影响很大的地方使用try-catch-finally</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace2.png\" alt=\"enter image description here\"></p>\n<ol start=\"4\">\n<li>避免使用全局变量</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace3.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li>避免在对性能影响较大的地方使用for-in</li>\n</ol>\n<p>for in循环需要脚本引擎构建一个枚举属性列表，而且每次都要从头重复检查</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace4.png\" alt=\"enter image description here\"></p>\n<ol start=\"6\">\n<li>使用字符串累加模式</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace5.png\" alt=\"enter image description here\"></p>\n<ol start=\"7\">\n<li>原生的操作比函数更快</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace6.png\" alt=\"enter image description here\"></p>\n<ol start=\"8\">\n<li>将函数而不是字符串传到setTimeout()和setInterval()中</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace7.png\" alt=\"enter image description here\"></p>\n<ol start=\"9\">\n<li>避免对象里没必要的DOM引用</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace8.png\" alt=\"enter image description here\"></p>\n<ol start=\"10\">\n<li>最大化对象解析速度，最小化作用域链</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace9.png\" alt=\"enter image description here\"></p>\n<ol start=\"11\">\n<li>尽量让脚本声明的变量短一点，不要太长，特别是循环里面的变量</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace10.png\" alt=\"enter image description here\"></p>\n<ol start=\"12\">\n<li>将自身引用存储在作用域外的变量中</li>\n</ol>\n<p>当一个funciton被执行时，一个执行的上下文（context）会被创建，被激活的对象将所有自身变量push到上下文（context）的作用域链之前。</p>\n<p>离作用域链越远，解析的越慢，这也意味着作用域本地的变量时解析的最快的。<br>将自身引用用作用域之外的变量存储，读写都会变的更快，这在全局变量和一些深度查找的资源解析中特别明显。</p>\n<p>当然，作用域内定义的变量比使用对象自身访问的速度更快。</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace11.png\" alt=\"enter image description here\"></p>\n<p>假如你需要在一个大循环中访问一个dom，这样子会更快：</p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace12.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace13.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace14.png\" alt=\"enter image description here\"></p>\n<hr>\n<h3 id=\"3-加载性能一些可以提高的点：\"><a href=\"#3-加载性能一些可以提高的点：\" class=\"headerlink\" title=\"3. 加载性能一些可以提高的点：\"></a>3. 加载性能一些可以提高的点：</h3><ol>\n<li>更快的加载和展现页面可以让js加载没有阻塞</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace15.png\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li><p>添加Experes或者Cache-Control HTTPheader</p>\n</li>\n<li><p>Gzip javascript和css资源</p>\n</li>\n<li><p>利用YUI或者JSMin压缩代码</p>\n</li>\n<li><p>尽量减少资源的数目和大小</p>\n</li>\n<li><p>让脚本无阻赛并行下载</p>\n</li>\n<li><p>合并异步加载的脚本</p>\n</li>\n<li><p>将行内脚本放到样式表之上？有待考证，不科学</p>\n</li>\n<li><p>少用iframe</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"4-鲜为人知的DOM\"><a href=\"#4-鲜为人知的DOM\" class=\"headerlink\" title=\"4. 鲜为人知的DOM\"></a>4. 鲜为人知的DOM</h3><h4 id=\"dom性能缓慢可以归结为一下3个原因：\"><a href=\"#dom性能缓慢可以归结为一下3个原因：\" class=\"headerlink\" title=\"dom性能缓慢可以归结为一下3个原因：\"></a>dom性能缓慢可以归结为一下3个原因：</h4><ul>\n<li>大规模的DOM操作 </li>\n<li>脚本触发太多的重构和重绘</li>\n<li>定位节点在DOM中的路径慢</li>\n</ul>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><ol>\n<li><p>尽可能减小DOM的大小</p>\n</li>\n<li><p>使用文档的组件模板来进行复用</p>\n</li>\n</ol>\n<p>动态的在dom中插入或者更新元素是代价很大的。一个有效的方法来解决这个问题是利用HTML模板来插入一些对话框或者UI组件。</p>\n<ol start=\"3\">\n<li>最小化重绘和重构的次数</li>\n</ol>\n<p>重绘发生在一些元素可见或者隐藏的时候，但是没有改变document的布局</p>\n<p>重构发生在DOM的操作方式影响到布局。</p>\n<p>重构的代价比重绘大的多得多。</p>\n<p>重构表格比重构块状元素代价大</p>\n<p>绝对定位的元素不会对document的布局产生影响</p>\n<p>DOM的修改会触发重绘</p>\n<p><strong>参考资料</strong>：</p>\n<ul>\n<li><a href=\"http://dev.opera.com/articles/view/efficient-javascript/?page=3#reflow\" target=\"_blank\" rel=\"noopener\">Repaint and reflow at Opera Developer Network</a></li>\n<li><a href=\"http://www-archive.mozilla.org/newlayout/doc/reflow.html\" target=\"_blank\" rel=\"noopener\">Notes on HTML Reflow</a> - more detailed information on the reflow process (archived)</li>\n<li><a href=\"http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/\" target=\"_blank\" rel=\"noopener\">Reflows &amp; Repaints: CSS Performance making your JavaScript slow</a></li>\n<li><a href=\"http://www.slideshare.net/lsimon/go-with-the-reflow\" target=\"_blank\" rel=\"noopener\">Go With The Reflow</a></li>\n<li><a href=\"http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/\" target=\"_blank\" rel=\"noopener\">Rendering: repaint, reflow/relayout, restyle</a></li>\n</ul>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace16.png\" alt=\"enter image description here\"></p>\n<ol start=\"4\">\n<li>利用cloneNode()</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace17.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li><p>利用HTML模板和innerHTML</p>\n</li>\n<li><p>设定元素不可见再进行改变（质疑，appendChild不会重发重绘，js执行完成以后才会）</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace18.png\" alt=\"enter image description here\"></p>\n<ol start=\"7\">\n<li>尽量少的使用改变元素尺寸或位置的操作</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace19.png\" alt=\"enter image description here\"></p>\n<ol start=\"8\">\n<li>使用className来完成多个预定义样式的的改变</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace20.png\" alt=\"enter image description here\"></p>\n<ol start=\"9\">\n<li>利用设定属性来动态完成多个样式的设定</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace21.png\" alt=\"enter image description here\"></p>\n<ol start=\"10\">\n<li>css class name vs. style属性</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace22.png\" alt=\"enter image description here\"></p>\n<ol start=\"11\">\n<li><p>不要遍历大量的节点，避免在遍历时改变dom结构</p>\n</li>\n<li><p>将DOM元素缓存在变量中使用</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace23.png\" alt=\"enter image description here\"></p>\n<ol start=\"13\">\n<li>在dom元素使用完以后移除引用</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace24.png\" alt=\"enter image description here\"></p>\n<hr>\n<h3 id=\"5-面向对象的Javascript\"><a href=\"#5-面向对象的Javascript\" class=\"headerlink\" title=\"5. 面向对象的Javascript\"></a>5. 面向对象的Javascript</h3><ol>\n<li>考虑使用继承机制</li>\n</ol>\n<hr>\n<h3 id=\"6-client-server对话\"><a href=\"#6-client-server对话\" class=\"headerlink\" title=\"6. client-server对话\"></a>6. client-server对话</h3><ol>\n<li><p>对XMLHttpRequest设定超时时间</p>\n</li>\n<li><p>考虑使用约定的数据来做大数据的处理，比如选择xml或者json</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"7-动画\"><a href=\"#7-动画\" class=\"headerlink\" title=\"7. 动画\"></a>7. 动画</h3><ol>\n<li><p>选择性的使用动画</p>\n</li>\n<li><p>使用scrollTo()方法来实现滚动动画</p>\n</li>\n<li><p>将动画元素的position设置为absolute或者fix</p>\n</li>\n<li><p>在同一时间使用一个timer来服务多个动画元素</p>\n</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace25.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li>让动画的速度更平滑</li>\n</ol>\n<hr>\n<h3 id=\"8-事件\"><a href=\"#8-事件\" class=\"headerlink\" title=\"8. 事件\"></a>8. 事件</h3><ol>\n<li>利用事件冒泡</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace26.png\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li>不要对一些经常触发的event使用代理</li>\n</ol>\n<p><img src=\"http://www.xuanfengge.com/netcool/images/performace27.png\" alt=\"enter image description here\"></p>\n<ol start=\"3\">\n<li>Javascript调用栈使用setTimeout不会溢出</li>\n</ol>\n<p>原因是setTimeout是伪异步的，把函数交给setTimeout处理后，原来的函数不会等待，会继续执行，函数会结束，资源也就可以释放。</p>\n<p>而不用setTimeout的时候，函数必须等待调用的函数返回后才能继续执行，但调用的函数又必须等待下一级函数，这样所有函数都不能结束，资源也就释放不出。</p>\n<p>换句话说，就是死锁。</p>\n<hr>\n<h3 id=\"9-样式\"><a href=\"#9-样式\" class=\"headerlink\" title=\"9. 样式\"></a>9. 样式</h3><ol>\n<li><p>优化css</p>\n</li>\n<li><p>优化图片</p>\n</li>\n</ol>\n<hr>\n"},{"title":"高级爬虫--Puppeteer初探","date":"2018-04-10T10:56:55.000Z","cover":"http://www.alibibi.top/image/lm.jpg","_content":"### 首先介绍Puppeteer\n* Puppeteer是一个node库，他提供了一组用来操纵Chrome的API，理论上使用它可以做任何Chrome可以做的事\n* 有点类似于PhantomJS，但Puppeteer由Chrome官方团队进行维护，前景更好\n* Puppeteer的应用场景会非常多，就爬虫领域来说，远比一般的爬虫工具功能更丰富，性能分析、自动化测试也不在话下，今天先探讨爬虫相关\n* [Puppeteer官方文档请猛戳这里](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions)\n\n### Puppeteer 核心功能\n1. 利用网页生成PDF、图片\n2. 爬取SPA应用，并生成预渲染内容（即“SSR” 服务端渲染）\n3. 可以从网站抓取内容\n4. 自动化表单提交、UI测试、键盘输入等\n5. 帮你创建一个最新的自动化测试环境（chrome），可以直接在此运行测试用例\n6. 捕获站点的时间线，以便追踪你的网站，帮助分析网站性能问题\n\n## 基本熟悉之后，接下来进行Puppeteer的爬虫教学：\n1. 运行Puppeteer\n```\npuppeteer.launch().then(async browser => {\n  ......\n  what you want\n  ......\n})\n```\n2. 跳转至 [阮一峰老师的ES6博客](http://es6.ruanyifeng.com/#README)\n```\nlet page = await browser.newPage();\nawait page.goto('http://es6.ruanyifeng.com/#README');\n```\n3. 分析博客左侧导航栏的dom结构，并拿到所有链接的href、title信息\n```\nlet as = [...document.querySelectorAll('ol li a')];\nreturn as.map((a) =>{\n    return {\n      href: a.href.trim(),\n      name: a.text\n    }\n});\n```\n4. 使用Puppeteer打印当前页面的PDF\n```\nawait page.pdf({path: `./es6-pdf/${aTags[0].name}.pdf`});\n```\n5. 完整代码在: [https://github.com/zhentaoo/puppeteer-deep](https://github.com/zhentaoo/puppeteer-deep)\n6. 项目运行\n* git clone https://github.com/zhentaoo/puppeteer-deep\n* npm install (puppeteer在win下100+M、mac下70+M，请耐心等候)\n* npm run es6\n\n## 最终效果如下，不过要注意几个问题：\n1. 如果在page go之后马上进行pdf抓取，此时页面还未完成渲染，只能抓到loading图（如下），所以需要用timeout做点简单处理\n![示例](http://www.zhentaoo.com/img/puppeteer.png \"示例\")\n2. 最终爬取效果如下，PDF的尺寸、预览效果、首页重复就不做过多整理， 预览效果如下,如果想要自己处理，可以设置一下chrome尺寸，打印页数\n![示例](http://www.zhentaoo.com/img/es6-pdf.png \"示例\")\n![示例](http://www.zhentaoo.com/img/es6.png \"示例\")\n\n##### 最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我….\n\n\nps:\n文章来源自[javascript瞭望塔](http://www.zhentaoo.com/2017/08/17/Puppeteer/)","source":"_posts/puppeteer-day1.md","raw":"---\ntitle: 高级爬虫--Puppeteer初探\ndate: 2018-04-10 18:56:55\ntags: \n    - NodeJs\ncover: http://www.alibibi.top/image/lm.jpg\n---\n### 首先介绍Puppeteer\n* Puppeteer是一个node库，他提供了一组用来操纵Chrome的API，理论上使用它可以做任何Chrome可以做的事\n* 有点类似于PhantomJS，但Puppeteer由Chrome官方团队进行维护，前景更好\n* Puppeteer的应用场景会非常多，就爬虫领域来说，远比一般的爬虫工具功能更丰富，性能分析、自动化测试也不在话下，今天先探讨爬虫相关\n* [Puppeteer官方文档请猛戳这里](https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions)\n\n### Puppeteer 核心功能\n1. 利用网页生成PDF、图片\n2. 爬取SPA应用，并生成预渲染内容（即“SSR” 服务端渲染）\n3. 可以从网站抓取内容\n4. 自动化表单提交、UI测试、键盘输入等\n5. 帮你创建一个最新的自动化测试环境（chrome），可以直接在此运行测试用例\n6. 捕获站点的时间线，以便追踪你的网站，帮助分析网站性能问题\n\n## 基本熟悉之后，接下来进行Puppeteer的爬虫教学：\n1. 运行Puppeteer\n```\npuppeteer.launch().then(async browser => {\n  ......\n  what you want\n  ......\n})\n```\n2. 跳转至 [阮一峰老师的ES6博客](http://es6.ruanyifeng.com/#README)\n```\nlet page = await browser.newPage();\nawait page.goto('http://es6.ruanyifeng.com/#README');\n```\n3. 分析博客左侧导航栏的dom结构，并拿到所有链接的href、title信息\n```\nlet as = [...document.querySelectorAll('ol li a')];\nreturn as.map((a) =>{\n    return {\n      href: a.href.trim(),\n      name: a.text\n    }\n});\n```\n4. 使用Puppeteer打印当前页面的PDF\n```\nawait page.pdf({path: `./es6-pdf/${aTags[0].name}.pdf`});\n```\n5. 完整代码在: [https://github.com/zhentaoo/puppeteer-deep](https://github.com/zhentaoo/puppeteer-deep)\n6. 项目运行\n* git clone https://github.com/zhentaoo/puppeteer-deep\n* npm install (puppeteer在win下100+M、mac下70+M，请耐心等候)\n* npm run es6\n\n## 最终效果如下，不过要注意几个问题：\n1. 如果在page go之后马上进行pdf抓取，此时页面还未完成渲染，只能抓到loading图（如下），所以需要用timeout做点简单处理\n![示例](http://www.zhentaoo.com/img/puppeteer.png \"示例\")\n2. 最终爬取效果如下，PDF的尺寸、预览效果、首页重复就不做过多整理， 预览效果如下,如果想要自己处理，可以设置一下chrome尺寸，打印页数\n![示例](http://www.zhentaoo.com/img/es6-pdf.png \"示例\")\n![示例](http://www.zhentaoo.com/img/es6.png \"示例\")\n\n##### 最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我….\n\n\nps:\n文章来源自[javascript瞭望塔](http://www.zhentaoo.com/2017/08/17/Puppeteer/)","slug":"puppeteer-day1","published":1,"updated":"2019-04-23T09:25:00.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdgnrp8000b7wumb47ggbqw","content":"<h3 id=\"首先介绍Puppeteer\"><a href=\"#首先介绍Puppeteer\" class=\"headerlink\" title=\"首先介绍Puppeteer\"></a>首先介绍Puppeteer</h3><ul>\n<li>Puppeteer是一个node库，他提供了一组用来操纵Chrome的API，理论上使用它可以做任何Chrome可以做的事</li>\n<li>有点类似于PhantomJS，但Puppeteer由Chrome官方团队进行维护，前景更好</li>\n<li>Puppeteer的应用场景会非常多，就爬虫领域来说，远比一般的爬虫工具功能更丰富，性能分析、自动化测试也不在话下，今天先探讨爬虫相关</li>\n<li><a href=\"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions\" target=\"_blank\" rel=\"noopener\">Puppeteer官方文档请猛戳这里</a></li>\n</ul>\n<h3 id=\"Puppeteer-核心功能\"><a href=\"#Puppeteer-核心功能\" class=\"headerlink\" title=\"Puppeteer 核心功能\"></a>Puppeteer 核心功能</h3><ol>\n<li>利用网页生成PDF、图片</li>\n<li>爬取SPA应用，并生成预渲染内容（即“SSR” 服务端渲染）</li>\n<li>可以从网站抓取内容</li>\n<li>自动化表单提交、UI测试、键盘输入等</li>\n<li>帮你创建一个最新的自动化测试环境（chrome），可以直接在此运行测试用例</li>\n<li>捕获站点的时间线，以便追踪你的网站，帮助分析网站性能问题</li>\n</ol>\n<h2 id=\"基本熟悉之后，接下来进行Puppeteer的爬虫教学：\"><a href=\"#基本熟悉之后，接下来进行Puppeteer的爬虫教学：\" class=\"headerlink\" title=\"基本熟悉之后，接下来进行Puppeteer的爬虫教学：\"></a>基本熟悉之后，接下来进行Puppeteer的爬虫教学：</h2><ol>\n<li><p>运行Puppeteer</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">puppeteer.launch().then(async browser =&gt; &#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  what you want</span><br><span class=\"line\">  ......</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>跳转至 <a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">阮一峰老师的ES6博客</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let page = await browser.newPage();</span><br><span class=\"line\">await page.goto(&apos;http://es6.ruanyifeng.com/#README&apos;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分析博客左侧导航栏的dom结构，并拿到所有链接的href、title信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let as = [...document.querySelectorAll(&apos;ol li a&apos;)];</span><br><span class=\"line\">return as.map((a) =&gt;&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      href: a.href.trim(),</span><br><span class=\"line\">      name: a.text</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用Puppeteer打印当前页面的PDF</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">await page.pdf(&#123;path: `./es6-pdf/$&#123;aTags[0].name&#125;.pdf`&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>完整代码在: <a href=\"https://github.com/zhentaoo/puppeteer-deep\" target=\"_blank\" rel=\"noopener\">https://github.com/zhentaoo/puppeteer-deep</a></p>\n</li>\n<li>项目运行</li>\n</ol>\n<ul>\n<li>git clone <a href=\"https://github.com/zhentaoo/puppeteer-deep\" target=\"_blank\" rel=\"noopener\">https://github.com/zhentaoo/puppeteer-deep</a></li>\n<li>npm install (puppeteer在win下100+M、mac下70+M，请耐心等候)</li>\n<li>npm run es6</li>\n</ul>\n<h2 id=\"最终效果如下，不过要注意几个问题：\"><a href=\"#最终效果如下，不过要注意几个问题：\" class=\"headerlink\" title=\"最终效果如下，不过要注意几个问题：\"></a>最终效果如下，不过要注意几个问题：</h2><ol>\n<li>如果在page go之后马上进行pdf抓取，此时页面还未完成渲染，只能抓到loading图（如下），所以需要用timeout做点简单处理<br><img src=\"http://www.zhentaoo.com/img/puppeteer.png\" alt=\"示例\" title=\"示例\"></li>\n<li>最终爬取效果如下，PDF的尺寸、预览效果、首页重复就不做过多整理， 预览效果如下,如果想要自己处理，可以设置一下chrome尺寸，打印页数<br><img src=\"http://www.zhentaoo.com/img/es6-pdf.png\" alt=\"示例\" title=\"示例\"><br><img src=\"http://www.zhentaoo.com/img/es6.png\" alt=\"示例\" title=\"示例\"></li>\n</ol>\n<h5 id=\"最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我…\"><a href=\"#最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我…\" class=\"headerlink\" title=\"最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我….\"></a>最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我….</h5><p>ps:<br>文章来源自<a href=\"http://www.zhentaoo.com/2017/08/17/Puppeteer/\" target=\"_blank\" rel=\"noopener\">javascript瞭望塔</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"首先介绍Puppeteer\"><a href=\"#首先介绍Puppeteer\" class=\"headerlink\" title=\"首先介绍Puppeteer\"></a>首先介绍Puppeteer</h3><ul>\n<li>Puppeteer是一个node库，他提供了一组用来操纵Chrome的API，理论上使用它可以做任何Chrome可以做的事</li>\n<li>有点类似于PhantomJS，但Puppeteer由Chrome官方团队进行维护，前景更好</li>\n<li>Puppeteer的应用场景会非常多，就爬虫领域来说，远比一般的爬虫工具功能更丰富，性能分析、自动化测试也不在话下，今天先探讨爬虫相关</li>\n<li><a href=\"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions\" target=\"_blank\" rel=\"noopener\">Puppeteer官方文档请猛戳这里</a></li>\n</ul>\n<h3 id=\"Puppeteer-核心功能\"><a href=\"#Puppeteer-核心功能\" class=\"headerlink\" title=\"Puppeteer 核心功能\"></a>Puppeteer 核心功能</h3><ol>\n<li>利用网页生成PDF、图片</li>\n<li>爬取SPA应用，并生成预渲染内容（即“SSR” 服务端渲染）</li>\n<li>可以从网站抓取内容</li>\n<li>自动化表单提交、UI测试、键盘输入等</li>\n<li>帮你创建一个最新的自动化测试环境（chrome），可以直接在此运行测试用例</li>\n<li>捕获站点的时间线，以便追踪你的网站，帮助分析网站性能问题</li>\n</ol>\n<h2 id=\"基本熟悉之后，接下来进行Puppeteer的爬虫教学：\"><a href=\"#基本熟悉之后，接下来进行Puppeteer的爬虫教学：\" class=\"headerlink\" title=\"基本熟悉之后，接下来进行Puppeteer的爬虫教学：\"></a>基本熟悉之后，接下来进行Puppeteer的爬虫教学：</h2><ol>\n<li><p>运行Puppeteer</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">puppeteer.launch().then(async browser =&gt; &#123;</span><br><span class=\"line\">  ......</span><br><span class=\"line\">  what you want</span><br><span class=\"line\">  ......</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>跳转至 <a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">阮一峰老师的ES6博客</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let page = await browser.newPage();</span><br><span class=\"line\">await page.goto(&apos;http://es6.ruanyifeng.com/#README&apos;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分析博客左侧导航栏的dom结构，并拿到所有链接的href、title信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let as = [...document.querySelectorAll(&apos;ol li a&apos;)];</span><br><span class=\"line\">return as.map((a) =&gt;&#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      href: a.href.trim(),</span><br><span class=\"line\">      name: a.text</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用Puppeteer打印当前页面的PDF</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">await page.pdf(&#123;path: `./es6-pdf/$&#123;aTags[0].name&#125;.pdf`&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>完整代码在: <a href=\"https://github.com/zhentaoo/puppeteer-deep\" target=\"_blank\" rel=\"noopener\">https://github.com/zhentaoo/puppeteer-deep</a></p>\n</li>\n<li>项目运行</li>\n</ol>\n<ul>\n<li>git clone <a href=\"https://github.com/zhentaoo/puppeteer-deep\" target=\"_blank\" rel=\"noopener\">https://github.com/zhentaoo/puppeteer-deep</a></li>\n<li>npm install (puppeteer在win下100+M、mac下70+M，请耐心等候)</li>\n<li>npm run es6</li>\n</ul>\n<h2 id=\"最终效果如下，不过要注意几个问题：\"><a href=\"#最终效果如下，不过要注意几个问题：\" class=\"headerlink\" title=\"最终效果如下，不过要注意几个问题：\"></a>最终效果如下，不过要注意几个问题：</h2><ol>\n<li>如果在page go之后马上进行pdf抓取，此时页面还未完成渲染，只能抓到loading图（如下），所以需要用timeout做点简单处理<br><img src=\"http://www.zhentaoo.com/img/puppeteer.png\" alt=\"示例\" title=\"示例\"></li>\n<li>最终爬取效果如下，PDF的尺寸、预览效果、首页重复就不做过多整理， 预览效果如下,如果想要自己处理，可以设置一下chrome尺寸，打印页数<br><img src=\"http://www.zhentaoo.com/img/es6-pdf.png\" alt=\"示例\" title=\"示例\"><br><img src=\"http://www.zhentaoo.com/img/es6.png\" alt=\"示例\" title=\"示例\"></li>\n</ol>\n<h5 id=\"最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我…\"><a href=\"#最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我…\" class=\"headerlink\" title=\"最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我….\"></a>最后声明，生成的PDF很粗糙，应该不会对阮老师产生什么影响，如有问题可以第一时间联系我….</h5><p>ps:<br>文章来源自<a href=\"http://www.zhentaoo.com/2017/08/17/Puppeteer/\" target=\"_blank\" rel=\"noopener\">javascript瞭望塔</a></p>\n"},{"title":"前端JS规范文档","date":"2018-05-12T10:34:20.000Z","cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1556021977157&di=ca5a227f59250179324d49264938cfc7&imgtype=0&src=http%3A%2F%2Fpic.rmb.bdstatic.com%2F591245435ade8c91e3e22e90d23d80b8.jpeg","_content":"\n### 目录导航\n\n*   [前端javascript规范文档](#前端javascript规范文档)\n    *   [一、规范目的](#一规范目的)\n    *   [二、基本准则](#二基本准则)\n    *   [三、命名规范](#三命名规范)\n        *   [1\\. 目的](#目的)\n        *   [2\\. 变量名](#变量名)\n        *   [3\\. 构造函数（类）命名](#构造函数类命名)\n        *   [4\\. 普通变量命名](#普通变量命名)\n        *   [5\\. 匈牙利命名法](#匈牙利命名法)\n        *   [6\\. 其他前缀规范](#其他前缀规范)\n        *   [7\\. 例外情况](#例外情况)\n        *   [8\\. 函数命名](#函数命名)\n        *   [9\\. 变量命名例子](#变量命名例子)\n    *   [四、编写注释](#四编写注释)\n    *   [五、使用空格](#五使用空格)\n    *   [六、编写API文档](#六编写api文档)\n        *   [1\\. 生成API文档的步骤：](#生成api文档的步骤)\n        *   [2\\. 编写API目的：](#编写api目的)\n    *   [七、推荐写法](#七推荐写法)\n    *   [八、不规范写法](#八不规范写法)\n    *   [九、需要注意的地方](#九需要注意的地方)\n    *   [十、扩展阅读：](#十扩展阅读)\n\n前端javascript规范文档\n================\n\n> 说明：本文档为前端JS规范\n\n* * *\n\n一、规范目的\n------\n\n为提高团队协作效率，便于前端后期优化维护，输出高质量的文档。\n\n* * *\n\n二、基本准则\n------\n\n*   符合web标准，结构表现行为分离，兼容性优良。页面性能方面，代码要求简洁明了有序， 尽可能的减小服务器负载，保证最快的解析速度。\n*   项目的维护和二次开发可能是直接或间接的团队合作，所以创建易维护的代码是一个项目成功与否的关键，易维护的代码意味着具有如下特性：\n    *   阅读性好：如良好的注释和命名规范，有文档\n    *   具有一致性：看起来如同一个人编写\n    *   代码的松耦合，高度模块化：将页面内的元素视为一个个模块，相互独立，尽量避免耦合过高的代码，从html,css,js三个层面都要考虑模块化\n    *   严格按照规范编写代码\n\n* * *\n\n三、命名规范\n------\n\n### 1\\. 目的\n\n提高代码可预测性和可维护性的方法是使用命名约定，这就意味着采用一致的方法来对变量和函数进行命名。\n\n### 2\\. 变量名\n\n变量名包括全局变量，局部变量，类变量，函数参数\n\n### 3\\. 构造函数（类）命名\n\n首字母大写，驼峰式命名。\n\nJS中没有类，但是可以用new调用构造函数：var man = new Person();\n\n### 4\\. 普通变量命名\n\n首字母小写，驼峰式命名，匈牙利命名\n\n如：nCheckCount 表示整形的数值\n\n### 5\\. 匈牙利命名法\n\n匈牙利命名法语法：变量名＝类型＋对象描述\n\n*   类型指变量的类型\n*   对象描述指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。\n\n**提示**: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型\n\nJavaScript变量起名类型\n\n变量命名前缀\n\n举例\n\nArray 数组\n\na\n\naList，aGroup\n\nBoolean 逻辑\n\nb\n\nbChecked，bHasLogin\n\nFunction 函数\n\nf\n\nfGetHtml，fInit\n\nInteger 数字\n\nn\n\nnPage，nTotal\n\nObject 对象\n\no\n\noButton，oDate\n\nRegular Expression 正则\n\nr\n\nrDomain，rEmail\n\nString 字符\n\ns\n\nsName，sHtml\n\n### 6\\. 其他前缀规范\n\n可根据团队及项目需要增加\n\n*   $：表示Jquery对象\n    \n    例如：$Content，$Module，一种比较广泛的Jquery对象变量命名规范。\n    \n*   fn：表示函数\n    \n    例如：fnGetName，fnSetAge；和上面函数的前缀略有不同，改用fn来代替，个人认为fn能够更好的区分普通变量和函数变量。\n    \n\n### 7\\. 例外情况\n\n以根据项目及团队需要，设计出针对项目需要的前缀规范，从而达到团队开发协作便利的目的。\n\n*   作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。\n*   循环变量可以简写，比如：i，j，k等。\n*   某些作为不允许修改值的变量认为是常量，全部字母都大写。例如：COPYRIGHT，PI。常量可以存在于函数中，也可以存在于全局。必须采用全大写的命名，且单词以_分割，常量通常用于ajax请求url，和一些不会改变的数据。\n\n### 8\\. 函数命名\n\n**普通函数**：首字母小写，驼峰式命名，统一使用动词或者动词+名词形式\n\n例如：fnGetVersion()，fnSubmitForm()，fnInit()；涉及返回逻辑值的函数可以使用is，has，contains等表示逻辑的词语代替动词，例如：fnIsObject()，fnHasClass()，fnContainsElment()。\n\n**内部函数**：使用_fn+动词+名词形式，内部函数必需在函数最后定义。\n\n例如：\n\n    function fnGetNumber(nTotal) {\n        if (nTotal < 100) {\n            nTotal = 100;\n        }\n        return _fnAdd(nTotal);\n    \n        function _fnAdd(nNumber) {\n            nNumber++;\n            return nNumber;\n        }\n    }\n    alert(fGetNumber(10)); //alert 101\n    \n\n**对象方法与事件响应函数**：对象方法命名使用fn+对象类名+动词+名词形式；\n\n例如： fnAddressGetEmail()，\n\n**事件响应函数**：fn+触发事件对象名+事件名或者模块名\n\n例如：fnDivClick()，fnAddressSubmitButtonClick()\n\n**函数方法常用的动词**：\n\n    get 获取/set 设置,\n    add 增加/remove 删除\n    create 创建/destory 移除\n    start 启动/stop 停止\n    open 打开/close 关闭,\n    read 读取/write 写入\n    load 载入/save 保存,\n    create 创建/destroy 销毁\n    begin 开始/end 结束,\n    backup 备份/restore 恢复\n    import 导入/export 导出,\n    split 分割/merge 合并\n    inject 注入/extract 提取,\n    attach 附着/detach 脱离\n    bind 绑定/separate 分离,\n    view 查看/browse 浏览\n    edit 编辑/modify 修改,\n    select 选取/mark 标记\n    copy 复制/paste 粘贴,\n    undo 撤销/redo 重做\n    insert 插入/delete 移除,\n    add 加入/append 添加\n    clean 清理/clear 清除,\n    index 索引/sort 排序\n    find 查找/search 搜索,\n    increase 增加/decrease 减少\n    play 播放/pause 暂停,\n    launch 启动/run 运行\n    compile 编译/execute 执行,\n    debug 调试/trace 跟踪\n    observe 观察/listen 监听,\n    build 构建/publish 发布\n    input 输入/output 输出,\n    encode 编码/decode 解码\n    encrypt 加密/decrypt 解密,\n    compress 压缩/decompress 解压缩\n    pack 打包/unpack 解包,\n    parse 解析/emit 生成\n    connect 连接/disconnect 断开,\n    send 发送/receive 接收\n    download 下载/upload 上传,\n    refresh 刷新/synchronize 同步\n    update 更新/revert 复原,\n    lock 锁定/unlock 解锁\n    check out 签出/check in 签入,\n    submit 提交/commit 交付\n    push 推/pull 拉,\n    expand 展开/collapse 折叠\n    begin 起始/end 结束,\n    start 开始/finish 完成\n    enter 进入/exit 退出,\n    abort 放弃/quit 离开\n    obsolete 废弃/depreciate 废旧,\n    collect 收集/aggregate 聚集\n    \n\n### 9\\. 变量命名例子\n\n*   为什么需要这样强制定义变量前缀？正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，如果只通过普通单词，是很难区分的。\n    \n    普通代码\n    \n        var checked = false;\n        var check = function() {\n            return true;\n        }\n        /**\n        some code\n        **/\n        \n        if(check) {//已经无法很确切知道这里是要用checked还是check()从而导致逻辑错误\n            //do some thing\n        }\n        \n    \n    规范后代码\n    \n        var bChecked = false;\n        var fnCheck = function() {\n            return true;\n        }\n        /**\n        some code\n        **/\n        \n        if(bChecked) {\n            // do some thing\n        }\n        if(fnCheck()) {\n            // do other thing\n        }\n        \n    \n*   如何标明私有方法或私有属性？\n    \n        var person = {\n            getName: function () {\n                return this._getFirst() + ' ' + this._getLast();\n            },\n            _getFirst: function () {\n                //...\n            },\n            _getLast: function (){\n                //...\n            } };\n        \n    \n    在这个例子中，getName()以为这这是API的一个公开的方法，而\\_getFirst()和\\_getLast()意味着这是一个私有函数。尽管他们都是普通的公开方法，但是使用下划线前缀的表示方法可以提醒使用person对象的用户，告诉他们这些方法在其他地方不能确保一定能够正常工作，不能直接调用。\n    \n*   总结：下面是一些使用下划线约定的变量\n    \n    *   使用下划线结尾来表明是私有变量，例如name_和getElements_()。\n    *   使用一个下划线前缀来表示受保护属性，使用两个下划线前缀来表示私有属性。\n\n* * *\n\n四、编写注释\n------\n\n> 为代码编写注释是非常重要的。通常人们在深入思考一个问题时，会非常清楚这段代码的工作原理。但是当过一周后再次回到该代码时，可能会花上很长时间来回想起那段代码到底是干什么的。\n\n*   公共组件维护者和各栏目WD都需要在文件头部加上注释说明：\n    \n        /**\n        *文件用途说明\n        *作者姓名、联系方式（旺旺）\n        *制作日期\n        **/\n        \n    \n*   大的模块注释方法：\n    \n        //================\n        // 代码用途\n        //================\n        \n    \n*   小的注释；\n    \n        //代码说明\n        \n    \n    注释单独一行，不要在代码后的同一行内加注释。例如：\n    \n        //姓名\n        var name = “abc”;   V\n        var name =”abc”; //姓名 X\n        \n    \n\n* * *\n\n五、使用空格\n------\n\n> 使用空格有助于改善代码的可读性和一致性。在撰写英文文章时在逗号和区间范围后面使用空格。在javascript采用同样的逻辑，可在列表表达式（等价于逗号）和语句结束（等价于完成一次“思考”）后面添加空格。\n\n**用处一**\n\n*   在分开for循环的各个部分的分号之后：例如，for (var i = 0; i < 10; i +=1){…}\n*   在for循环中初始化多个变量（i和最大值等）：for (var i = 0, max = 10; i < max; i += 1){…}\n*   在限定数组项的逗号后面：var a = \\[1, 2, 3\\];\n*   对象属性的逗号之后和将属性名和属性值分开的冒号之后：var o = {a: 1, b: 2};\n*   分隔开函数中各个参数的逗号之后：myFunc(a, b, c)\n*   在函数声明的大括号之前：function myFunc() {}\n*   在匿名函数表达式之后：var myFunc = function () {};\n\n**用初二**\n\n空格的另外一个很好的用途是用来分隔所有的操作符和操作，这也就是意味着在 +, -, *, =, <, >, <=, >=, ===, !==, &&, ||, += 等之后使用空格：\n\n例子：\n\n    //大量空格，并且使用一致，是的代码可读性更好\n    //允许在阅读的时候不用一口气读下去\n    var d = 0,\n        a = b +1;\n    if ( a && b && c) {\n        d = a % c;\n        a += d;\n    }\n    \n    //反模式\n    //缺少空格或空格使用不一致，使得代码比较混乱\n    var d= 0;\n        a =b+1;\n    if (a&& b&& c) {\n    d=a %c;\n        a+= d;\n    }\n    \n\n* * *\n\n六、编写API文档\n---------\n\n### 1\\. 生成API文档的步骤：\n\n*   编写特殊格式的代码块（即一些注释块）\n*   运行工具来解析代码和注释（工具如：JSDoc Toolkit和YUIDoc）\n*   发布工具解析的结果，大多数情况是采用HTML格式发布（如网页版的API文档就是利用工具生成的）\n\n**简单举例**：\n\n    /**\n    * 翻转一个字符串\n    *\n    * @param  {String} 输入需要翻转的字符串\n    * @return {String} 翻转后的字符串\n    **/\n    \n    var reverse = function (input) {\n        //...\n        return output;\n    };\n    \n\n**YUIDoc范例**：\n\n> 完整范例：本程序由一个文件(app.js)组成，该文件仅有一个模块(myapp)。\n\napp.js:\n\n    /**\n    * 我的javascript应用程序\n    *\n    * @module myapp\n    */\n    \n    //使用命名空间来定义一个空对象\n    var MYAPP = {};\n    \n    //定义一个包含两个方法(sum()和multi())的math_stuff对象\n    /**\n    * @namespace MYAPP\n    * class math_stuff\n    */\n    \n    MYAPP.math_stuff = {\n        /**\n        * Sums two numbers\n        *\n        * @method sum\n        * param     {Number}    是第一个数\n        * param     {Number}    是第二个数\n        * return    {Number}    两个输入的总和\n        */\n        sum: function (a, b) {\n            return a + b;\n        },\n        /**\n        * Multiplies two numbers\n        * param     {Number}    是第一个数\n        * param     {Number}    是第二个数\n        * return    {Number}    两个输入相乘后结果\n        */\n        multi: function (a, b) {\n            return a * b;\n        }\n    };\n    \n\n@namespace：这里用于命名包含以上对象的全局引用的名称\n\n@class：这里有些命名不当，他实际意思是指对象或者构造函数\n\n@method：定义对象中的方法和方法名\n\n@param：列举函数所使用的参数。其中将参数类型用大括号括起来，并在其后注释参数名及描述。\n\n@return：类似于@param，这里用于描述返回值的，并且该方法没有名称。\n\n@constructor：表明这个“类”实际上是一个构造函数\n\n@property和@type描述了对象的属性。\n\n### 2\\. 编写API目的：\n\n*   为API编写注释不仅仅是一中提供参考文档的简便方法，而且还有其他用途——通过再次审查代码，提高代码质量。\n*   在解决问题时写出的解决方案仅仅是一个初稿。该解决方案可以给出令人期待的输出，但是该方案是否是最佳方案呢？改代码是否可读、易于理解、维护和升级呢？当您再次审视代码时您将更加确定代码哪些部分可以改进——如何使得代码更容易继续更新，移除一些不足之处等。它可以极大地帮助您创建高质量的代码。\n\n* * *\n\n七、推荐写法\n------\n\n1.  除了三目运算，if,else等禁止简写\n    \n         // 正确的书写\n         if (true) {\n             alert(name);\n         }\n         console.log(name);\n         // 不推荐的书写\n         if (true)\n             alert(name);\n         console.log(name);\n         // 不推荐的书写\n         if (true)\n         alert(name);\n         console.log(name)\n        \n    \n2.  在需要以{}闭合的代码段前增加换行，如：for if\n    \n         // 没有换行，小的代码段无法区分\n         if (wl && wl.length) {\n             for (i = 0, l = wl.length; i < l; ++i) {\n                 p = wl[i];\n                 type = Y.Lang.type(r[p]);\n                 if (s.hasOwnProperty(p)) {\n                     if (merge && type == 'object') {\n                         Y.mix(r[p], s[p]);\n                     } else if (ov || !(p in r)) {\n                         r[p] = s[p];\n                     }\n                 }\n             }\n         }\n         // 有了换行，逻辑清楚多了\n         if (wl && wl.length) {\n        \n             for (i = 0, l = wl.length; i < l; ++i) {\n                 p = wl[i];\n                 type = Y.Lang.type(r[p]);\n        \n                 if (s.hasOwnProperty(p)) {\n                     // 处理merge逻辑\n                     if (merge && type == 'object') {\n                         Y.mix(r[p], s[p]);\n                     } else if (ov || !(p in r)) {\n                         r[p] = s[p];\n                     }\n                 }\n             }\n         }\n        换行可以是空行，也可以是注释\n        \n    \n3.  使用Function进行类的定义，不推荐继承，如需继承采用成熟的类库实现继承\n    \n        // 类的实现\n         function Person(name) {\n             this.name = name;\n         }\n        \n         Person.prototype.sayName = function() {\n             alert(this.name);\n         };\n        \n         var me = new Person(\"Nicholas\");\n        \n         // 将this放到局部变量self\n         function Persion(name, sex) {\n             var self = this;\n        \n             self.name = name;\n             self.sex = sex;\n         }\n        \n    \n    平时咱们写代码，基本都是小程序，真心用不上什么继承，而且继承并不是JS的擅长的语言特性，尽量少用。如果非要使用的话，注意一点：\n    \n        function A(){\n            //...\n        }\n        function B(){\n            //...\n        }\n        B.prototype = new A();\n        B.prototype.constructor = B; //原则上，记得把这句话加上\n        \n    \n    继承从原则上来讲，别改变他的构造函数，否则这个继承就显得很别扭了~\n    \n4.  使用局部变量缓存反复查找的对象(包括但不限于全局变量、dom查询结果、作用域链较深的对象)\n    \n        // 缓存对象\n        var getComment = function() {\n            var dom = $(\"#common-container\"),               // 缓存dom\n                        appendTo = $.appendTo,                      // 缓存全局变量\n                data = this.json.data;                      // 缓存作用域链较深的对象\n        }\n        \n        \n        //当需要缓存this时必须使用self变量进行缓存\n        // 缓存this\n        function Row(name) {\n            var self = this;\n        \n            self.name = name;\n            $(\".row\").click(function() {\n                self.getName();\n            });\n        }\n        \n    \n    self是一个保留字，不过用它也没关系。在这里，看个人爱好吧，可以用_this, that, me等这些词，都行，但是团队开发的时候统一下比较好。\n    \n5.  使用eval，采取$.parseJSON\n    \n    三个原因：\n    \n    *   有注入风险，尤其是ajax返回数据\n    *   不方便debug\n    *   效率低，eval是一个执行效率很低的函数\n    \n    建议： 使用new Function来代替eval的使用，最好就别用。\n    \n\n* * *\n\n八、不规范写法\n-------\n\n1.  句尾没有分号\n    \n        var isHotel = json.type == \"hotel\" ? true : false\n        \n    \n    这个是要引起注意的，比如：\n    \n        a = b        // 赋值\n        (function(){\n            //....\n        })()         // 自执行函数\n        \n    \n    未加分号，结果被解析成\n    \n        a = b(function(){//...})()  //将b()()返回的结果赋值给a\n        \n    \n2.  变量命名各种各样\n    \n        var is_hotel;\n        var isHotel;\n        var ishotel;\n        \n    \n3.  if 缩写\n    \n        if (isHotel)\n            console.log(true)\n        else\n            console.log(false)\n        \n    \n4.  使用 eval\n    \n        var json = eval(jsonText);\n        \n    \n5.  变量未定义到处都是\n    \n        function() {\n            var isHotel = 'true';\n            .......\n        \n            var html = isHotel ? '<p>hotel</p>' : \"\";\n        }\n        \n    \n6.  超长函数\n    \n        function() {\n            var isHotel = 'true';\n            //....... 此处省略500行\n            return false;\n        }\n        \n    \n\n* * *\n\n九、需要注意的地方\n---------\n\n1.  window.onload只能使用一次，使用多次会被最后的覆盖。\n    \n    解决方案：\n    \n    *   只引用一次window.onload\n    *   使用jQuery的$(docuemnt.ready(function(){}); 可多次使用\n    *   使用函数封装，代码地址\n2.  CSS放在页头引入，javascript放在页尾引入\n    \n3.  在上线之前，要编译压缩代码\n4.  减少重排与重绘\n\n* * *","source":"_posts/前端规范-dya03.md","raw":"---\ntitle:  前端JS规范文档\ndate: 2018-05-12 18:34:20\ntags: \n    - 前端规范\ncover: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1556021977157&di=ca5a227f59250179324d49264938cfc7&imgtype=0&src=http%3A%2F%2Fpic.rmb.bdstatic.com%2F591245435ade8c91e3e22e90d23d80b8.jpeg\ncategories: \n    - 大杂烩\n---\n\n### 目录导航\n\n*   [前端javascript规范文档](#前端javascript规范文档)\n    *   [一、规范目的](#一规范目的)\n    *   [二、基本准则](#二基本准则)\n    *   [三、命名规范](#三命名规范)\n        *   [1\\. 目的](#目的)\n        *   [2\\. 变量名](#变量名)\n        *   [3\\. 构造函数（类）命名](#构造函数类命名)\n        *   [4\\. 普通变量命名](#普通变量命名)\n        *   [5\\. 匈牙利命名法](#匈牙利命名法)\n        *   [6\\. 其他前缀规范](#其他前缀规范)\n        *   [7\\. 例外情况](#例外情况)\n        *   [8\\. 函数命名](#函数命名)\n        *   [9\\. 变量命名例子](#变量命名例子)\n    *   [四、编写注释](#四编写注释)\n    *   [五、使用空格](#五使用空格)\n    *   [六、编写API文档](#六编写api文档)\n        *   [1\\. 生成API文档的步骤：](#生成api文档的步骤)\n        *   [2\\. 编写API目的：](#编写api目的)\n    *   [七、推荐写法](#七推荐写法)\n    *   [八、不规范写法](#八不规范写法)\n    *   [九、需要注意的地方](#九需要注意的地方)\n    *   [十、扩展阅读：](#十扩展阅读)\n\n前端javascript规范文档\n================\n\n> 说明：本文档为前端JS规范\n\n* * *\n\n一、规范目的\n------\n\n为提高团队协作效率，便于前端后期优化维护，输出高质量的文档。\n\n* * *\n\n二、基本准则\n------\n\n*   符合web标准，结构表现行为分离，兼容性优良。页面性能方面，代码要求简洁明了有序， 尽可能的减小服务器负载，保证最快的解析速度。\n*   项目的维护和二次开发可能是直接或间接的团队合作，所以创建易维护的代码是一个项目成功与否的关键，易维护的代码意味着具有如下特性：\n    *   阅读性好：如良好的注释和命名规范，有文档\n    *   具有一致性：看起来如同一个人编写\n    *   代码的松耦合，高度模块化：将页面内的元素视为一个个模块，相互独立，尽量避免耦合过高的代码，从html,css,js三个层面都要考虑模块化\n    *   严格按照规范编写代码\n\n* * *\n\n三、命名规范\n------\n\n### 1\\. 目的\n\n提高代码可预测性和可维护性的方法是使用命名约定，这就意味着采用一致的方法来对变量和函数进行命名。\n\n### 2\\. 变量名\n\n变量名包括全局变量，局部变量，类变量，函数参数\n\n### 3\\. 构造函数（类）命名\n\n首字母大写，驼峰式命名。\n\nJS中没有类，但是可以用new调用构造函数：var man = new Person();\n\n### 4\\. 普通变量命名\n\n首字母小写，驼峰式命名，匈牙利命名\n\n如：nCheckCount 表示整形的数值\n\n### 5\\. 匈牙利命名法\n\n匈牙利命名法语法：变量名＝类型＋对象描述\n\n*   类型指变量的类型\n*   对象描述指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。\n\n**提示**: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型\n\nJavaScript变量起名类型\n\n变量命名前缀\n\n举例\n\nArray 数组\n\na\n\naList，aGroup\n\nBoolean 逻辑\n\nb\n\nbChecked，bHasLogin\n\nFunction 函数\n\nf\n\nfGetHtml，fInit\n\nInteger 数字\n\nn\n\nnPage，nTotal\n\nObject 对象\n\no\n\noButton，oDate\n\nRegular Expression 正则\n\nr\n\nrDomain，rEmail\n\nString 字符\n\ns\n\nsName，sHtml\n\n### 6\\. 其他前缀规范\n\n可根据团队及项目需要增加\n\n*   $：表示Jquery对象\n    \n    例如：$Content，$Module，一种比较广泛的Jquery对象变量命名规范。\n    \n*   fn：表示函数\n    \n    例如：fnGetName，fnSetAge；和上面函数的前缀略有不同，改用fn来代替，个人认为fn能够更好的区分普通变量和函数变量。\n    \n\n### 7\\. 例外情况\n\n以根据项目及团队需要，设计出针对项目需要的前缀规范，从而达到团队开发协作便利的目的。\n\n*   作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。\n*   循环变量可以简写，比如：i，j，k等。\n*   某些作为不允许修改值的变量认为是常量，全部字母都大写。例如：COPYRIGHT，PI。常量可以存在于函数中，也可以存在于全局。必须采用全大写的命名，且单词以_分割，常量通常用于ajax请求url，和一些不会改变的数据。\n\n### 8\\. 函数命名\n\n**普通函数**：首字母小写，驼峰式命名，统一使用动词或者动词+名词形式\n\n例如：fnGetVersion()，fnSubmitForm()，fnInit()；涉及返回逻辑值的函数可以使用is，has，contains等表示逻辑的词语代替动词，例如：fnIsObject()，fnHasClass()，fnContainsElment()。\n\n**内部函数**：使用_fn+动词+名词形式，内部函数必需在函数最后定义。\n\n例如：\n\n    function fnGetNumber(nTotal) {\n        if (nTotal < 100) {\n            nTotal = 100;\n        }\n        return _fnAdd(nTotal);\n    \n        function _fnAdd(nNumber) {\n            nNumber++;\n            return nNumber;\n        }\n    }\n    alert(fGetNumber(10)); //alert 101\n    \n\n**对象方法与事件响应函数**：对象方法命名使用fn+对象类名+动词+名词形式；\n\n例如： fnAddressGetEmail()，\n\n**事件响应函数**：fn+触发事件对象名+事件名或者模块名\n\n例如：fnDivClick()，fnAddressSubmitButtonClick()\n\n**函数方法常用的动词**：\n\n    get 获取/set 设置,\n    add 增加/remove 删除\n    create 创建/destory 移除\n    start 启动/stop 停止\n    open 打开/close 关闭,\n    read 读取/write 写入\n    load 载入/save 保存,\n    create 创建/destroy 销毁\n    begin 开始/end 结束,\n    backup 备份/restore 恢复\n    import 导入/export 导出,\n    split 分割/merge 合并\n    inject 注入/extract 提取,\n    attach 附着/detach 脱离\n    bind 绑定/separate 分离,\n    view 查看/browse 浏览\n    edit 编辑/modify 修改,\n    select 选取/mark 标记\n    copy 复制/paste 粘贴,\n    undo 撤销/redo 重做\n    insert 插入/delete 移除,\n    add 加入/append 添加\n    clean 清理/clear 清除,\n    index 索引/sort 排序\n    find 查找/search 搜索,\n    increase 增加/decrease 减少\n    play 播放/pause 暂停,\n    launch 启动/run 运行\n    compile 编译/execute 执行,\n    debug 调试/trace 跟踪\n    observe 观察/listen 监听,\n    build 构建/publish 发布\n    input 输入/output 输出,\n    encode 编码/decode 解码\n    encrypt 加密/decrypt 解密,\n    compress 压缩/decompress 解压缩\n    pack 打包/unpack 解包,\n    parse 解析/emit 生成\n    connect 连接/disconnect 断开,\n    send 发送/receive 接收\n    download 下载/upload 上传,\n    refresh 刷新/synchronize 同步\n    update 更新/revert 复原,\n    lock 锁定/unlock 解锁\n    check out 签出/check in 签入,\n    submit 提交/commit 交付\n    push 推/pull 拉,\n    expand 展开/collapse 折叠\n    begin 起始/end 结束,\n    start 开始/finish 完成\n    enter 进入/exit 退出,\n    abort 放弃/quit 离开\n    obsolete 废弃/depreciate 废旧,\n    collect 收集/aggregate 聚集\n    \n\n### 9\\. 变量命名例子\n\n*   为什么需要这样强制定义变量前缀？正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，如果只通过普通单词，是很难区分的。\n    \n    普通代码\n    \n        var checked = false;\n        var check = function() {\n            return true;\n        }\n        /**\n        some code\n        **/\n        \n        if(check) {//已经无法很确切知道这里是要用checked还是check()从而导致逻辑错误\n            //do some thing\n        }\n        \n    \n    规范后代码\n    \n        var bChecked = false;\n        var fnCheck = function() {\n            return true;\n        }\n        /**\n        some code\n        **/\n        \n        if(bChecked) {\n            // do some thing\n        }\n        if(fnCheck()) {\n            // do other thing\n        }\n        \n    \n*   如何标明私有方法或私有属性？\n    \n        var person = {\n            getName: function () {\n                return this._getFirst() + ' ' + this._getLast();\n            },\n            _getFirst: function () {\n                //...\n            },\n            _getLast: function (){\n                //...\n            } };\n        \n    \n    在这个例子中，getName()以为这这是API的一个公开的方法，而\\_getFirst()和\\_getLast()意味着这是一个私有函数。尽管他们都是普通的公开方法，但是使用下划线前缀的表示方法可以提醒使用person对象的用户，告诉他们这些方法在其他地方不能确保一定能够正常工作，不能直接调用。\n    \n*   总结：下面是一些使用下划线约定的变量\n    \n    *   使用下划线结尾来表明是私有变量，例如name_和getElements_()。\n    *   使用一个下划线前缀来表示受保护属性，使用两个下划线前缀来表示私有属性。\n\n* * *\n\n四、编写注释\n------\n\n> 为代码编写注释是非常重要的。通常人们在深入思考一个问题时，会非常清楚这段代码的工作原理。但是当过一周后再次回到该代码时，可能会花上很长时间来回想起那段代码到底是干什么的。\n\n*   公共组件维护者和各栏目WD都需要在文件头部加上注释说明：\n    \n        /**\n        *文件用途说明\n        *作者姓名、联系方式（旺旺）\n        *制作日期\n        **/\n        \n    \n*   大的模块注释方法：\n    \n        //================\n        // 代码用途\n        //================\n        \n    \n*   小的注释；\n    \n        //代码说明\n        \n    \n    注释单独一行，不要在代码后的同一行内加注释。例如：\n    \n        //姓名\n        var name = “abc”;   V\n        var name =”abc”; //姓名 X\n        \n    \n\n* * *\n\n五、使用空格\n------\n\n> 使用空格有助于改善代码的可读性和一致性。在撰写英文文章时在逗号和区间范围后面使用空格。在javascript采用同样的逻辑，可在列表表达式（等价于逗号）和语句结束（等价于完成一次“思考”）后面添加空格。\n\n**用处一**\n\n*   在分开for循环的各个部分的分号之后：例如，for (var i = 0; i < 10; i +=1){…}\n*   在for循环中初始化多个变量（i和最大值等）：for (var i = 0, max = 10; i < max; i += 1){…}\n*   在限定数组项的逗号后面：var a = \\[1, 2, 3\\];\n*   对象属性的逗号之后和将属性名和属性值分开的冒号之后：var o = {a: 1, b: 2};\n*   分隔开函数中各个参数的逗号之后：myFunc(a, b, c)\n*   在函数声明的大括号之前：function myFunc() {}\n*   在匿名函数表达式之后：var myFunc = function () {};\n\n**用初二**\n\n空格的另外一个很好的用途是用来分隔所有的操作符和操作，这也就是意味着在 +, -, *, =, <, >, <=, >=, ===, !==, &&, ||, += 等之后使用空格：\n\n例子：\n\n    //大量空格，并且使用一致，是的代码可读性更好\n    //允许在阅读的时候不用一口气读下去\n    var d = 0,\n        a = b +1;\n    if ( a && b && c) {\n        d = a % c;\n        a += d;\n    }\n    \n    //反模式\n    //缺少空格或空格使用不一致，使得代码比较混乱\n    var d= 0;\n        a =b+1;\n    if (a&& b&& c) {\n    d=a %c;\n        a+= d;\n    }\n    \n\n* * *\n\n六、编写API文档\n---------\n\n### 1\\. 生成API文档的步骤：\n\n*   编写特殊格式的代码块（即一些注释块）\n*   运行工具来解析代码和注释（工具如：JSDoc Toolkit和YUIDoc）\n*   发布工具解析的结果，大多数情况是采用HTML格式发布（如网页版的API文档就是利用工具生成的）\n\n**简单举例**：\n\n    /**\n    * 翻转一个字符串\n    *\n    * @param  {String} 输入需要翻转的字符串\n    * @return {String} 翻转后的字符串\n    **/\n    \n    var reverse = function (input) {\n        //...\n        return output;\n    };\n    \n\n**YUIDoc范例**：\n\n> 完整范例：本程序由一个文件(app.js)组成，该文件仅有一个模块(myapp)。\n\napp.js:\n\n    /**\n    * 我的javascript应用程序\n    *\n    * @module myapp\n    */\n    \n    //使用命名空间来定义一个空对象\n    var MYAPP = {};\n    \n    //定义一个包含两个方法(sum()和multi())的math_stuff对象\n    /**\n    * @namespace MYAPP\n    * class math_stuff\n    */\n    \n    MYAPP.math_stuff = {\n        /**\n        * Sums two numbers\n        *\n        * @method sum\n        * param     {Number}    是第一个数\n        * param     {Number}    是第二个数\n        * return    {Number}    两个输入的总和\n        */\n        sum: function (a, b) {\n            return a + b;\n        },\n        /**\n        * Multiplies two numbers\n        * param     {Number}    是第一个数\n        * param     {Number}    是第二个数\n        * return    {Number}    两个输入相乘后结果\n        */\n        multi: function (a, b) {\n            return a * b;\n        }\n    };\n    \n\n@namespace：这里用于命名包含以上对象的全局引用的名称\n\n@class：这里有些命名不当，他实际意思是指对象或者构造函数\n\n@method：定义对象中的方法和方法名\n\n@param：列举函数所使用的参数。其中将参数类型用大括号括起来，并在其后注释参数名及描述。\n\n@return：类似于@param，这里用于描述返回值的，并且该方法没有名称。\n\n@constructor：表明这个“类”实际上是一个构造函数\n\n@property和@type描述了对象的属性。\n\n### 2\\. 编写API目的：\n\n*   为API编写注释不仅仅是一中提供参考文档的简便方法，而且还有其他用途——通过再次审查代码，提高代码质量。\n*   在解决问题时写出的解决方案仅仅是一个初稿。该解决方案可以给出令人期待的输出，但是该方案是否是最佳方案呢？改代码是否可读、易于理解、维护和升级呢？当您再次审视代码时您将更加确定代码哪些部分可以改进——如何使得代码更容易继续更新，移除一些不足之处等。它可以极大地帮助您创建高质量的代码。\n\n* * *\n\n七、推荐写法\n------\n\n1.  除了三目运算，if,else等禁止简写\n    \n         // 正确的书写\n         if (true) {\n             alert(name);\n         }\n         console.log(name);\n         // 不推荐的书写\n         if (true)\n             alert(name);\n         console.log(name);\n         // 不推荐的书写\n         if (true)\n         alert(name);\n         console.log(name)\n        \n    \n2.  在需要以{}闭合的代码段前增加换行，如：for if\n    \n         // 没有换行，小的代码段无法区分\n         if (wl && wl.length) {\n             for (i = 0, l = wl.length; i < l; ++i) {\n                 p = wl[i];\n                 type = Y.Lang.type(r[p]);\n                 if (s.hasOwnProperty(p)) {\n                     if (merge && type == 'object') {\n                         Y.mix(r[p], s[p]);\n                     } else if (ov || !(p in r)) {\n                         r[p] = s[p];\n                     }\n                 }\n             }\n         }\n         // 有了换行，逻辑清楚多了\n         if (wl && wl.length) {\n        \n             for (i = 0, l = wl.length; i < l; ++i) {\n                 p = wl[i];\n                 type = Y.Lang.type(r[p]);\n        \n                 if (s.hasOwnProperty(p)) {\n                     // 处理merge逻辑\n                     if (merge && type == 'object') {\n                         Y.mix(r[p], s[p]);\n                     } else if (ov || !(p in r)) {\n                         r[p] = s[p];\n                     }\n                 }\n             }\n         }\n        换行可以是空行，也可以是注释\n        \n    \n3.  使用Function进行类的定义，不推荐继承，如需继承采用成熟的类库实现继承\n    \n        // 类的实现\n         function Person(name) {\n             this.name = name;\n         }\n        \n         Person.prototype.sayName = function() {\n             alert(this.name);\n         };\n        \n         var me = new Person(\"Nicholas\");\n        \n         // 将this放到局部变量self\n         function Persion(name, sex) {\n             var self = this;\n        \n             self.name = name;\n             self.sex = sex;\n         }\n        \n    \n    平时咱们写代码，基本都是小程序，真心用不上什么继承，而且继承并不是JS的擅长的语言特性，尽量少用。如果非要使用的话，注意一点：\n    \n        function A(){\n            //...\n        }\n        function B(){\n            //...\n        }\n        B.prototype = new A();\n        B.prototype.constructor = B; //原则上，记得把这句话加上\n        \n    \n    继承从原则上来讲，别改变他的构造函数，否则这个继承就显得很别扭了~\n    \n4.  使用局部变量缓存反复查找的对象(包括但不限于全局变量、dom查询结果、作用域链较深的对象)\n    \n        // 缓存对象\n        var getComment = function() {\n            var dom = $(\"#common-container\"),               // 缓存dom\n                        appendTo = $.appendTo,                      // 缓存全局变量\n                data = this.json.data;                      // 缓存作用域链较深的对象\n        }\n        \n        \n        //当需要缓存this时必须使用self变量进行缓存\n        // 缓存this\n        function Row(name) {\n            var self = this;\n        \n            self.name = name;\n            $(\".row\").click(function() {\n                self.getName();\n            });\n        }\n        \n    \n    self是一个保留字，不过用它也没关系。在这里，看个人爱好吧，可以用_this, that, me等这些词，都行，但是团队开发的时候统一下比较好。\n    \n5.  使用eval，采取$.parseJSON\n    \n    三个原因：\n    \n    *   有注入风险，尤其是ajax返回数据\n    *   不方便debug\n    *   效率低，eval是一个执行效率很低的函数\n    \n    建议： 使用new Function来代替eval的使用，最好就别用。\n    \n\n* * *\n\n八、不规范写法\n-------\n\n1.  句尾没有分号\n    \n        var isHotel = json.type == \"hotel\" ? true : false\n        \n    \n    这个是要引起注意的，比如：\n    \n        a = b        // 赋值\n        (function(){\n            //....\n        })()         // 自执行函数\n        \n    \n    未加分号，结果被解析成\n    \n        a = b(function(){//...})()  //将b()()返回的结果赋值给a\n        \n    \n2.  变量命名各种各样\n    \n        var is_hotel;\n        var isHotel;\n        var ishotel;\n        \n    \n3.  if 缩写\n    \n        if (isHotel)\n            console.log(true)\n        else\n            console.log(false)\n        \n    \n4.  使用 eval\n    \n        var json = eval(jsonText);\n        \n    \n5.  变量未定义到处都是\n    \n        function() {\n            var isHotel = 'true';\n            .......\n        \n            var html = isHotel ? '<p>hotel</p>' : \"\";\n        }\n        \n    \n6.  超长函数\n    \n        function() {\n            var isHotel = 'true';\n            //....... 此处省略500行\n            return false;\n        }\n        \n    \n\n* * *\n\n九、需要注意的地方\n---------\n\n1.  window.onload只能使用一次，使用多次会被最后的覆盖。\n    \n    解决方案：\n    \n    *   只引用一次window.onload\n    *   使用jQuery的$(docuemnt.ready(function(){}); 可多次使用\n    *   使用函数封装，代码地址\n2.  CSS放在页头引入，javascript放在页尾引入\n    \n3.  在上线之前，要编译压缩代码\n4.  减少重排与重绘\n\n* * *","slug":"前端规范-dya03","published":1,"updated":"2019-04-23T09:41:52.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdgnrpj000j7wumz4io9k46","content":"<h3 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h3><ul>\n<li><a href=\"#前端javascript规范文档\">前端javascript规范文档</a><ul>\n<li><a href=\"#一规范目的\">一、规范目的</a></li>\n<li><a href=\"#二基本准则\">二、基本准则</a></li>\n<li><a href=\"#三命名规范\">三、命名规范</a><ul>\n<li><a href=\"#目的\">1. 目的</a></li>\n<li><a href=\"#变量名\">2. 变量名</a></li>\n<li><a href=\"#构造函数类命名\">3. 构造函数（类）命名</a></li>\n<li><a href=\"#普通变量命名\">4. 普通变量命名</a></li>\n<li><a href=\"#匈牙利命名法\">5. 匈牙利命名法</a></li>\n<li><a href=\"#其他前缀规范\">6. 其他前缀规范</a></li>\n<li><a href=\"#例外情况\">7. 例外情况</a></li>\n<li><a href=\"#函数命名\">8. 函数命名</a></li>\n<li><a href=\"#变量命名例子\">9. 变量命名例子</a></li>\n</ul>\n</li>\n<li><a href=\"#四编写注释\">四、编写注释</a></li>\n<li><a href=\"#五使用空格\">五、使用空格</a></li>\n<li><a href=\"#六编写api文档\">六、编写API文档</a><ul>\n<li><a href=\"#生成api文档的步骤\">1. 生成API文档的步骤：</a></li>\n<li><a href=\"#编写api目的\">2. 编写API目的：</a></li>\n</ul>\n</li>\n<li><a href=\"#七推荐写法\">七、推荐写法</a></li>\n<li><a href=\"#八不规范写法\">八、不规范写法</a></li>\n<li><a href=\"#九需要注意的地方\">九、需要注意的地方</a></li>\n<li><a href=\"#十扩展阅读\">十、扩展阅读：</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"前端javascript规范文档\"><a href=\"#前端javascript规范文档\" class=\"headerlink\" title=\"前端javascript规范文档\"></a>前端javascript规范文档</h1><blockquote>\n<p>说明：本文档为前端JS规范</p>\n</blockquote>\n<hr>\n<h2 id=\"一、规范目的\"><a href=\"#一、规范目的\" class=\"headerlink\" title=\"一、规范目的\"></a>一、规范目的</h2><p>为提高团队协作效率，便于前端后期优化维护，输出高质量的文档。</p>\n<hr>\n<h2 id=\"二、基本准则\"><a href=\"#二、基本准则\" class=\"headerlink\" title=\"二、基本准则\"></a>二、基本准则</h2><ul>\n<li>符合web标准，结构表现行为分离，兼容性优良。页面性能方面，代码要求简洁明了有序， 尽可能的减小服务器负载，保证最快的解析速度。</li>\n<li>项目的维护和二次开发可能是直接或间接的团队合作，所以创建易维护的代码是一个项目成功与否的关键，易维护的代码意味着具有如下特性：<ul>\n<li>阅读性好：如良好的注释和命名规范，有文档</li>\n<li>具有一致性：看起来如同一个人编写</li>\n<li>代码的松耦合，高度模块化：将页面内的元素视为一个个模块，相互独立，尽量避免耦合过高的代码，从html,css,js三个层面都要考虑模块化</li>\n<li>严格按照规范编写代码</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"三、命名规范\"><a href=\"#三、命名规范\" class=\"headerlink\" title=\"三、命名规范\"></a>三、命名规范</h2><h3 id=\"1-目的\"><a href=\"#1-目的\" class=\"headerlink\" title=\"1. 目的\"></a>1. 目的</h3><p>提高代码可预测性和可维护性的方法是使用命名约定，这就意味着采用一致的方法来对变量和函数进行命名。</p>\n<h3 id=\"2-变量名\"><a href=\"#2-变量名\" class=\"headerlink\" title=\"2. 变量名\"></a>2. 变量名</h3><p>变量名包括全局变量，局部变量，类变量，函数参数</p>\n<h3 id=\"3-构造函数（类）命名\"><a href=\"#3-构造函数（类）命名\" class=\"headerlink\" title=\"3. 构造函数（类）命名\"></a>3. 构造函数（类）命名</h3><p>首字母大写，驼峰式命名。</p>\n<p>JS中没有类，但是可以用new调用构造函数：var man = new Person();</p>\n<h3 id=\"4-普通变量命名\"><a href=\"#4-普通变量命名\" class=\"headerlink\" title=\"4. 普通变量命名\"></a>4. 普通变量命名</h3><p>首字母小写，驼峰式命名，匈牙利命名</p>\n<p>如：nCheckCount 表示整形的数值</p>\n<h3 id=\"5-匈牙利命名法\"><a href=\"#5-匈牙利命名法\" class=\"headerlink\" title=\"5. 匈牙利命名法\"></a>5. 匈牙利命名法</h3><p>匈牙利命名法语法：变量名＝类型＋对象描述</p>\n<ul>\n<li>类型指变量的类型</li>\n<li>对象描述指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。</li>\n</ul>\n<p><strong>提示</strong>: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型</p>\n<p>JavaScript变量起名类型</p>\n<p>变量命名前缀</p>\n<p>举例</p>\n<p>Array 数组</p>\n<p>a</p>\n<p>aList，aGroup</p>\n<p>Boolean 逻辑</p>\n<p>b</p>\n<p>bChecked，bHasLogin</p>\n<p>Function 函数</p>\n<p>f</p>\n<p>fGetHtml，fInit</p>\n<p>Integer 数字</p>\n<p>n</p>\n<p>nPage，nTotal</p>\n<p>Object 对象</p>\n<p>o</p>\n<p>oButton，oDate</p>\n<p>Regular Expression 正则</p>\n<p>r</p>\n<p>rDomain，rEmail</p>\n<p>String 字符</p>\n<p>s</p>\n<p>sName，sHtml</p>\n<h3 id=\"6-其他前缀规范\"><a href=\"#6-其他前缀规范\" class=\"headerlink\" title=\"6. 其他前缀规范\"></a>6. 其他前缀规范</h3><p>可根据团队及项目需要增加</p>\n<ul>\n<li><p>$：表示Jquery对象</p>\n<p>例如：$Content，$Module，一种比较广泛的Jquery对象变量命名规范。</p>\n</li>\n<li><p>fn：表示函数</p>\n<p>例如：fnGetName，fnSetAge；和上面函数的前缀略有不同，改用fn来代替，个人认为fn能够更好的区分普通变量和函数变量。</p>\n</li>\n</ul>\n<h3 id=\"7-例外情况\"><a href=\"#7-例外情况\" class=\"headerlink\" title=\"7. 例外情况\"></a>7. 例外情况</h3><p>以根据项目及团队需要，设计出针对项目需要的前缀规范，从而达到团队开发协作便利的目的。</p>\n<ul>\n<li>作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。</li>\n<li>循环变量可以简写，比如：i，j，k等。</li>\n<li>某些作为不允许修改值的变量认为是常量，全部字母都大写。例如：COPYRIGHT，PI。常量可以存在于函数中，也可以存在于全局。必须采用全大写的命名，且单词以_分割，常量通常用于ajax请求url，和一些不会改变的数据。</li>\n</ul>\n<h3 id=\"8-函数命名\"><a href=\"#8-函数命名\" class=\"headerlink\" title=\"8. 函数命名\"></a>8. 函数命名</h3><p><strong>普通函数</strong>：首字母小写，驼峰式命名，统一使用动词或者动词+名词形式</p>\n<p>例如：fnGetVersion()，fnSubmitForm()，fnInit()；涉及返回逻辑值的函数可以使用is，has，contains等表示逻辑的词语代替动词，例如：fnIsObject()，fnHasClass()，fnContainsElment()。</p>\n<p><strong>内部函数</strong>：使用_fn+动词+名词形式，内部函数必需在函数最后定义。</p>\n<p>例如：</p>\n<pre><code>function fnGetNumber(nTotal) {\n    if (nTotal &lt; 100) {\n        nTotal = 100;\n    }\n    return _fnAdd(nTotal);\n\n    function _fnAdd(nNumber) {\n        nNumber++;\n        return nNumber;\n    }\n}\nalert(fGetNumber(10)); //alert 101\n</code></pre><p><strong>对象方法与事件响应函数</strong>：对象方法命名使用fn+对象类名+动词+名词形式；</p>\n<p>例如： fnAddressGetEmail()，</p>\n<p><strong>事件响应函数</strong>：fn+触发事件对象名+事件名或者模块名</p>\n<p>例如：fnDivClick()，fnAddressSubmitButtonClick()</p>\n<p><strong>函数方法常用的动词</strong>：</p>\n<pre><code>get 获取/set 设置,\nadd 增加/remove 删除\ncreate 创建/destory 移除\nstart 启动/stop 停止\nopen 打开/close 关闭,\nread 读取/write 写入\nload 载入/save 保存,\ncreate 创建/destroy 销毁\nbegin 开始/end 结束,\nbackup 备份/restore 恢复\nimport 导入/export 导出,\nsplit 分割/merge 合并\ninject 注入/extract 提取,\nattach 附着/detach 脱离\nbind 绑定/separate 分离,\nview 查看/browse 浏览\nedit 编辑/modify 修改,\nselect 选取/mark 标记\ncopy 复制/paste 粘贴,\nundo 撤销/redo 重做\ninsert 插入/delete 移除,\nadd 加入/append 添加\nclean 清理/clear 清除,\nindex 索引/sort 排序\nfind 查找/search 搜索,\nincrease 增加/decrease 减少\nplay 播放/pause 暂停,\nlaunch 启动/run 运行\ncompile 编译/execute 执行,\ndebug 调试/trace 跟踪\nobserve 观察/listen 监听,\nbuild 构建/publish 发布\ninput 输入/output 输出,\nencode 编码/decode 解码\nencrypt 加密/decrypt 解密,\ncompress 压缩/decompress 解压缩\npack 打包/unpack 解包,\nparse 解析/emit 生成\nconnect 连接/disconnect 断开,\nsend 发送/receive 接收\ndownload 下载/upload 上传,\nrefresh 刷新/synchronize 同步\nupdate 更新/revert 复原,\nlock 锁定/unlock 解锁\ncheck out 签出/check in 签入,\nsubmit 提交/commit 交付\npush 推/pull 拉,\nexpand 展开/collapse 折叠\nbegin 起始/end 结束,\nstart 开始/finish 完成\nenter 进入/exit 退出,\nabort 放弃/quit 离开\nobsolete 废弃/depreciate 废旧,\ncollect 收集/aggregate 聚集\n</code></pre><h3 id=\"9-变量命名例子\"><a href=\"#9-变量命名例子\" class=\"headerlink\" title=\"9. 变量命名例子\"></a>9. 变量命名例子</h3><ul>\n<li><p>为什么需要这样强制定义变量前缀？正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，如果只通过普通单词，是很难区分的。</p>\n<p>普通代码</p>\n<pre><code>var checked = false;\nvar check = function() {\n    return true;\n}\n/**\nsome code\n**/\n\nif(check) {//已经无法很确切知道这里是要用checked还是check()从而导致逻辑错误\n    //do some thing\n}\n</code></pre></li>\n</ul>\n<pre><code>规范后代码\n\n    var bChecked = false;\n    var fnCheck = function() {\n        return true;\n    }\n    /**\n    some code\n    **/\n\n    if(bChecked) {\n        // do some thing\n    }\n    if(fnCheck()) {\n        // do other thing\n    }\n</code></pre><ul>\n<li><p>如何标明私有方法或私有属性？</p>\n<pre><code>var person = {\n    getName: function () {\n        return this._getFirst() + &apos; &apos; + this._getLast();\n    },\n    _getFirst: function () {\n        //...\n    },\n    _getLast: function (){\n        //...\n    } };\n</code></pre></li>\n</ul>\n<pre><code>在这个例子中，getName()以为这这是API的一个公开的方法，而\\_getFirst()和\\_getLast()意味着这是一个私有函数。尽管他们都是普通的公开方法，但是使用下划线前缀的表示方法可以提醒使用person对象的用户，告诉他们这些方法在其他地方不能确保一定能够正常工作，不能直接调用。\n</code></pre><ul>\n<li><p>总结：下面是一些使用下划线约定的变量</p>\n<ul>\n<li>使用下划线结尾来表明是私有变量，例如name_和getElements_()。</li>\n<li>使用一个下划线前缀来表示受保护属性，使用两个下划线前缀来表示私有属性。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"四、编写注释\"><a href=\"#四、编写注释\" class=\"headerlink\" title=\"四、编写注释\"></a>四、编写注释</h2><blockquote>\n<p>为代码编写注释是非常重要的。通常人们在深入思考一个问题时，会非常清楚这段代码的工作原理。但是当过一周后再次回到该代码时，可能会花上很长时间来回想起那段代码到底是干什么的。</p>\n</blockquote>\n<ul>\n<li><p>公共组件维护者和各栏目WD都需要在文件头部加上注释说明：</p>\n<pre><code>/**\n*文件用途说明\n*作者姓名、联系方式（旺旺）\n*制作日期\n**/\n</code></pre></li>\n</ul>\n<ul>\n<li><p>大的模块注释方法：</p>\n<pre><code>//================\n// 代码用途\n//================\n</code></pre></li>\n</ul>\n<ul>\n<li><p>小的注释；</p>\n<pre><code>//代码说明\n</code></pre></li>\n</ul>\n<pre><code>注释单独一行，不要在代码后的同一行内加注释。例如：\n\n    //姓名\n    var name = “abc”;   V\n    var name =”abc”; //姓名 X\n</code></pre><hr>\n<h2 id=\"五、使用空格\"><a href=\"#五、使用空格\" class=\"headerlink\" title=\"五、使用空格\"></a>五、使用空格</h2><blockquote>\n<p>使用空格有助于改善代码的可读性和一致性。在撰写英文文章时在逗号和区间范围后面使用空格。在javascript采用同样的逻辑，可在列表表达式（等价于逗号）和语句结束（等价于完成一次“思考”）后面添加空格。</p>\n</blockquote>\n<p><strong>用处一</strong></p>\n<ul>\n<li>在分开for循环的各个部分的分号之后：例如，for (var i = 0; i &lt; 10; i +=1){…}</li>\n<li>在for循环中初始化多个变量（i和最大值等）：for (var i = 0, max = 10; i &lt; max; i += 1){…}</li>\n<li>在限定数组项的逗号后面：var a = [1, 2, 3];</li>\n<li>对象属性的逗号之后和将属性名和属性值分开的冒号之后：var o = {a: 1, b: 2};</li>\n<li>分隔开函数中各个参数的逗号之后：myFunc(a, b, c)</li>\n<li>在函数声明的大括号之前：function myFunc() {}</li>\n<li>在匿名函数表达式之后：var myFunc = function () {};</li>\n</ul>\n<p><strong>用初二</strong></p>\n<p>空格的另外一个很好的用途是用来分隔所有的操作符和操作，这也就是意味着在 +, -, *, =, &lt;, &gt;, &lt;=, &gt;=, ===, !==, &amp;&amp;, ||, += 等之后使用空格：</p>\n<p>例子：</p>\n<pre><code>//大量空格，并且使用一致，是的代码可读性更好\n//允许在阅读的时候不用一口气读下去\nvar d = 0,\n    a = b +1;\nif ( a &amp;&amp; b &amp;&amp; c) {\n    d = a % c;\n    a += d;\n}\n\n//反模式\n//缺少空格或空格使用不一致，使得代码比较混乱\nvar d= 0;\n    a =b+1;\nif (a&amp;&amp; b&amp;&amp; c) {\nd=a %c;\n    a+= d;\n}\n</code></pre><hr>\n<h2 id=\"六、编写API文档\"><a href=\"#六、编写API文档\" class=\"headerlink\" title=\"六、编写API文档\"></a>六、编写API文档</h2><h3 id=\"1-生成API文档的步骤：\"><a href=\"#1-生成API文档的步骤：\" class=\"headerlink\" title=\"1. 生成API文档的步骤：\"></a>1. 生成API文档的步骤：</h3><ul>\n<li>编写特殊格式的代码块（即一些注释块）</li>\n<li>运行工具来解析代码和注释（工具如：JSDoc Toolkit和YUIDoc）</li>\n<li>发布工具解析的结果，大多数情况是采用HTML格式发布（如网页版的API文档就是利用工具生成的）</li>\n</ul>\n<p><strong>简单举例</strong>：</p>\n<pre><code>/**\n* 翻转一个字符串\n*\n* @param  {String} 输入需要翻转的字符串\n* @return {String} 翻转后的字符串\n**/\n\nvar reverse = function (input) {\n    //...\n    return output;\n};\n</code></pre><p><strong>YUIDoc范例</strong>：</p>\n<blockquote>\n<p>完整范例：本程序由一个文件(app.js)组成，该文件仅有一个模块(myapp)。</p>\n</blockquote>\n<p>app.js:</p>\n<pre><code>/**\n* 我的javascript应用程序\n*\n* @module myapp\n*/\n\n//使用命名空间来定义一个空对象\nvar MYAPP = {};\n\n//定义一个包含两个方法(sum()和multi())的math_stuff对象\n/**\n* @namespace MYAPP\n* class math_stuff\n*/\n\nMYAPP.math_stuff = {\n    /**\n    * Sums two numbers\n    *\n    * @method sum\n    * param     {Number}    是第一个数\n    * param     {Number}    是第二个数\n    * return    {Number}    两个输入的总和\n    */\n    sum: function (a, b) {\n        return a + b;\n    },\n    /**\n    * Multiplies two numbers\n    * param     {Number}    是第一个数\n    * param     {Number}    是第二个数\n    * return    {Number}    两个输入相乘后结果\n    */\n    multi: function (a, b) {\n        return a * b;\n    }\n};\n</code></pre><p>@namespace：这里用于命名包含以上对象的全局引用的名称</p>\n<p>@class：这里有些命名不当，他实际意思是指对象或者构造函数</p>\n<p>@method：定义对象中的方法和方法名</p>\n<p>@param：列举函数所使用的参数。其中将参数类型用大括号括起来，并在其后注释参数名及描述。</p>\n<p>@return：类似于@param，这里用于描述返回值的，并且该方法没有名称。</p>\n<p>@constructor：表明这个“类”实际上是一个构造函数</p>\n<p>@property和@type描述了对象的属性。</p>\n<h3 id=\"2-编写API目的：\"><a href=\"#2-编写API目的：\" class=\"headerlink\" title=\"2. 编写API目的：\"></a>2. 编写API目的：</h3><ul>\n<li>为API编写注释不仅仅是一中提供参考文档的简便方法，而且还有其他用途——通过再次审查代码，提高代码质量。</li>\n<li>在解决问题时写出的解决方案仅仅是一个初稿。该解决方案可以给出令人期待的输出，但是该方案是否是最佳方案呢？改代码是否可读、易于理解、维护和升级呢？当您再次审视代码时您将更加确定代码哪些部分可以改进——如何使得代码更容易继续更新，移除一些不足之处等。它可以极大地帮助您创建高质量的代码。</li>\n</ul>\n<hr>\n<h2 id=\"七、推荐写法\"><a href=\"#七、推荐写法\" class=\"headerlink\" title=\"七、推荐写法\"></a>七、推荐写法</h2><ol>\n<li><p>除了三目运算，if,else等禁止简写</p>\n<pre><code>// 正确的书写\nif (true) {\n    alert(name);\n}\nconsole.log(name);\n// 不推荐的书写\nif (true)\n    alert(name);\nconsole.log(name);\n// 不推荐的书写\nif (true)\nalert(name);\nconsole.log(name)\n</code></pre></li>\n</ol>\n<ol start=\"2\">\n<li><p>在需要以{}闭合的代码段前增加换行，如：for if</p>\n<pre><code> // 没有换行，小的代码段无法区分\n if (wl &amp;&amp; wl.length) {\n     for (i = 0, l = wl.length; i &lt; l; ++i) {\n         p = wl[i];\n         type = Y.Lang.type(r[p]);\n         if (s.hasOwnProperty(p)) {\n             if (merge &amp;&amp; type == &apos;object&apos;) {\n                 Y.mix(r[p], s[p]);\n             } else if (ov || !(p in r)) {\n                 r[p] = s[p];\n             }\n         }\n     }\n }\n // 有了换行，逻辑清楚多了\n if (wl &amp;&amp; wl.length) {\n\n     for (i = 0, l = wl.length; i &lt; l; ++i) {\n         p = wl[i];\n         type = Y.Lang.type(r[p]);\n\n         if (s.hasOwnProperty(p)) {\n             // 处理merge逻辑\n             if (merge &amp;&amp; type == &apos;object&apos;) {\n                 Y.mix(r[p], s[p]);\n             } else if (ov || !(p in r)) {\n                 r[p] = s[p];\n             }\n         }\n     }\n }\n换行可以是空行，也可以是注释\n</code></pre></li>\n</ol>\n<ol start=\"3\">\n<li><p>使用Function进行类的定义，不推荐继承，如需继承采用成熟的类库实现继承</p>\n<pre><code>// 类的实现\n function Person(name) {\n     this.name = name;\n }\n\n Person.prototype.sayName = function() {\n     alert(this.name);\n };\n\n var me = new Person(&quot;Nicholas&quot;);\n\n // 将this放到局部变量self\n function Persion(name, sex) {\n     var self = this;\n\n     self.name = name;\n     self.sex = sex;\n }\n</code></pre></li>\n</ol>\n<pre><code>平时咱们写代码，基本都是小程序，真心用不上什么继承，而且继承并不是JS的擅长的语言特性，尽量少用。如果非要使用的话，注意一点：\n\n    function A(){\n        //...\n    }\n    function B(){\n        //...\n    }\n    B.prototype = new A();\n    B.prototype.constructor = B; //原则上，记得把这句话加上\n\n\n继承从原则上来讲，别改变他的构造函数，否则这个继承就显得很别扭了~\n</code></pre><ol start=\"4\">\n<li><p>使用局部变量缓存反复查找的对象(包括但不限于全局变量、dom查询结果、作用域链较深的对象)</p>\n<pre><code>// 缓存对象\nvar getComment = function() {\n    var dom = $(&quot;#common-container&quot;),               // 缓存dom\n                appendTo = $.appendTo,                      // 缓存全局变量\n        data = this.json.data;                      // 缓存作用域链较深的对象\n}\n</code></pre></li>\n</ol>\n<pre><code>    //当需要缓存this时必须使用self变量进行缓存\n    // 缓存this\n    function Row(name) {\n        var self = this;\n\n        self.name = name;\n        $(&quot;.row&quot;).click(function() {\n            self.getName();\n        });\n    }\n\n\nself是一个保留字，不过用它也没关系。在这里，看个人爱好吧，可以用_this, that, me等这些词，都行，但是团队开发的时候统一下比较好。\n</code></pre><ol start=\"5\">\n<li><p>使用eval，采取$.parseJSON</p>\n<p>三个原因：</p>\n<ul>\n<li>有注入风险，尤其是ajax返回数据</li>\n<li>不方便debug</li>\n<li>效率低，eval是一个执行效率很低的函数</li>\n</ul>\n<p>建议： 使用new Function来代替eval的使用，最好就别用。</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"八、不规范写法\"><a href=\"#八、不规范写法\" class=\"headerlink\" title=\"八、不规范写法\"></a>八、不规范写法</h2><ol>\n<li><p>句尾没有分号</p>\n<pre><code>var isHotel = json.type == &quot;hotel&quot; ? true : false\n</code></pre></li>\n</ol>\n<pre><code>这个是要引起注意的，比如：\n\n    a = b        // 赋值\n    (function(){\n        //....\n    })()         // 自执行函数\n\n\n未加分号，结果被解析成\n\n    a = b(function(){//...})()  //将b()()返回的结果赋值给a\n</code></pre><ol start=\"2\">\n<li><p>变量命名各种各样</p>\n<pre><code>var is_hotel;\nvar isHotel;\nvar ishotel;\n</code></pre></li>\n</ol>\n<ol start=\"3\">\n<li><p>if 缩写</p>\n<pre><code>if (isHotel)\n    console.log(true)\nelse\n    console.log(false)\n</code></pre></li>\n</ol>\n<ol start=\"4\">\n<li><p>使用 eval</p>\n<pre><code>var json = eval(jsonText);\n</code></pre></li>\n</ol>\n<ol start=\"5\">\n<li><p>变量未定义到处都是</p>\n<pre><code>function() {\n    var isHotel = &apos;true&apos;;\n    .......\n\n    var html = isHotel ? &apos;&lt;p&gt;hotel&lt;/p&gt;&apos; : &quot;&quot;;\n}\n</code></pre></li>\n</ol>\n<ol start=\"6\">\n<li><p>超长函数</p>\n<pre><code>function() {\n    var isHotel = &apos;true&apos;;\n    //....... 此处省略500行\n    return false;\n}\n</code></pre></li>\n</ol>\n<hr>\n<h2 id=\"九、需要注意的地方\"><a href=\"#九、需要注意的地方\" class=\"headerlink\" title=\"九、需要注意的地方\"></a>九、需要注意的地方</h2><ol>\n<li><p>window.onload只能使用一次，使用多次会被最后的覆盖。</p>\n<p>解决方案：</p>\n<ul>\n<li>只引用一次window.onload</li>\n<li>使用jQuery的$(docuemnt.ready(function(){}); 可多次使用</li>\n<li>使用函数封装，代码地址</li>\n</ul>\n</li>\n<li><p>CSS放在页头引入，javascript放在页尾引入</p>\n</li>\n<li><p>在上线之前，要编译压缩代码</p>\n</li>\n<li>减少重排与重绘</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h3><ul>\n<li><a href=\"#前端javascript规范文档\">前端javascript规范文档</a><ul>\n<li><a href=\"#一规范目的\">一、规范目的</a></li>\n<li><a href=\"#二基本准则\">二、基本准则</a></li>\n<li><a href=\"#三命名规范\">三、命名规范</a><ul>\n<li><a href=\"#目的\">1. 目的</a></li>\n<li><a href=\"#变量名\">2. 变量名</a></li>\n<li><a href=\"#构造函数类命名\">3. 构造函数（类）命名</a></li>\n<li><a href=\"#普通变量命名\">4. 普通变量命名</a></li>\n<li><a href=\"#匈牙利命名法\">5. 匈牙利命名法</a></li>\n<li><a href=\"#其他前缀规范\">6. 其他前缀规范</a></li>\n<li><a href=\"#例外情况\">7. 例外情况</a></li>\n<li><a href=\"#函数命名\">8. 函数命名</a></li>\n<li><a href=\"#变量命名例子\">9. 变量命名例子</a></li>\n</ul>\n</li>\n<li><a href=\"#四编写注释\">四、编写注释</a></li>\n<li><a href=\"#五使用空格\">五、使用空格</a></li>\n<li><a href=\"#六编写api文档\">六、编写API文档</a><ul>\n<li><a href=\"#生成api文档的步骤\">1. 生成API文档的步骤：</a></li>\n<li><a href=\"#编写api目的\">2. 编写API目的：</a></li>\n</ul>\n</li>\n<li><a href=\"#七推荐写法\">七、推荐写法</a></li>\n<li><a href=\"#八不规范写法\">八、不规范写法</a></li>\n<li><a href=\"#九需要注意的地方\">九、需要注意的地方</a></li>\n<li><a href=\"#十扩展阅读\">十、扩展阅读：</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"前端javascript规范文档\"><a href=\"#前端javascript规范文档\" class=\"headerlink\" title=\"前端javascript规范文档\"></a>前端javascript规范文档</h1><blockquote>\n<p>说明：本文档为前端JS规范</p>\n</blockquote>\n<hr>\n<h2 id=\"一、规范目的\"><a href=\"#一、规范目的\" class=\"headerlink\" title=\"一、规范目的\"></a>一、规范目的</h2><p>为提高团队协作效率，便于前端后期优化维护，输出高质量的文档。</p>\n<hr>\n<h2 id=\"二、基本准则\"><a href=\"#二、基本准则\" class=\"headerlink\" title=\"二、基本准则\"></a>二、基本准则</h2><ul>\n<li>符合web标准，结构表现行为分离，兼容性优良。页面性能方面，代码要求简洁明了有序， 尽可能的减小服务器负载，保证最快的解析速度。</li>\n<li>项目的维护和二次开发可能是直接或间接的团队合作，所以创建易维护的代码是一个项目成功与否的关键，易维护的代码意味着具有如下特性：<ul>\n<li>阅读性好：如良好的注释和命名规范，有文档</li>\n<li>具有一致性：看起来如同一个人编写</li>\n<li>代码的松耦合，高度模块化：将页面内的元素视为一个个模块，相互独立，尽量避免耦合过高的代码，从html,css,js三个层面都要考虑模块化</li>\n<li>严格按照规范编写代码</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"三、命名规范\"><a href=\"#三、命名规范\" class=\"headerlink\" title=\"三、命名规范\"></a>三、命名规范</h2><h3 id=\"1-目的\"><a href=\"#1-目的\" class=\"headerlink\" title=\"1. 目的\"></a>1. 目的</h3><p>提高代码可预测性和可维护性的方法是使用命名约定，这就意味着采用一致的方法来对变量和函数进行命名。</p>\n<h3 id=\"2-变量名\"><a href=\"#2-变量名\" class=\"headerlink\" title=\"2. 变量名\"></a>2. 变量名</h3><p>变量名包括全局变量，局部变量，类变量，函数参数</p>\n<h3 id=\"3-构造函数（类）命名\"><a href=\"#3-构造函数（类）命名\" class=\"headerlink\" title=\"3. 构造函数（类）命名\"></a>3. 构造函数（类）命名</h3><p>首字母大写，驼峰式命名。</p>\n<p>JS中没有类，但是可以用new调用构造函数：var man = new Person();</p>\n<h3 id=\"4-普通变量命名\"><a href=\"#4-普通变量命名\" class=\"headerlink\" title=\"4. 普通变量命名\"></a>4. 普通变量命名</h3><p>首字母小写，驼峰式命名，匈牙利命名</p>\n<p>如：nCheckCount 表示整形的数值</p>\n<h3 id=\"5-匈牙利命名法\"><a href=\"#5-匈牙利命名法\" class=\"headerlink\" title=\"5. 匈牙利命名法\"></a>5. 匈牙利命名法</h3><p>匈牙利命名法语法：变量名＝类型＋对象描述</p>\n<ul>\n<li>类型指变量的类型</li>\n<li>对象描述指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。</li>\n</ul>\n<p><strong>提示</strong>: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型</p>\n<p>JavaScript变量起名类型</p>\n<p>变量命名前缀</p>\n<p>举例</p>\n<p>Array 数组</p>\n<p>a</p>\n<p>aList，aGroup</p>\n<p>Boolean 逻辑</p>\n<p>b</p>\n<p>bChecked，bHasLogin</p>\n<p>Function 函数</p>\n<p>f</p>\n<p>fGetHtml，fInit</p>\n<p>Integer 数字</p>\n<p>n</p>\n<p>nPage，nTotal</p>\n<p>Object 对象</p>\n<p>o</p>\n<p>oButton，oDate</p>\n<p>Regular Expression 正则</p>\n<p>r</p>\n<p>rDomain，rEmail</p>\n<p>String 字符</p>\n<p>s</p>\n<p>sName，sHtml</p>\n<h3 id=\"6-其他前缀规范\"><a href=\"#6-其他前缀规范\" class=\"headerlink\" title=\"6. 其他前缀规范\"></a>6. 其他前缀规范</h3><p>可根据团队及项目需要增加</p>\n<ul>\n<li><p>$：表示Jquery对象</p>\n<p>例如：$Content，$Module，一种比较广泛的Jquery对象变量命名规范。</p>\n</li>\n<li><p>fn：表示函数</p>\n<p>例如：fnGetName，fnSetAge；和上面函数的前缀略有不同，改用fn来代替，个人认为fn能够更好的区分普通变量和函数变量。</p>\n</li>\n</ul>\n<h3 id=\"7-例外情况\"><a href=\"#7-例外情况\" class=\"headerlink\" title=\"7. 例外情况\"></a>7. 例外情况</h3><p>以根据项目及团队需要，设计出针对项目需要的前缀规范，从而达到团队开发协作便利的目的。</p>\n<ul>\n<li>作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。</li>\n<li>循环变量可以简写，比如：i，j，k等。</li>\n<li>某些作为不允许修改值的变量认为是常量，全部字母都大写。例如：COPYRIGHT，PI。常量可以存在于函数中，也可以存在于全局。必须采用全大写的命名，且单词以_分割，常量通常用于ajax请求url，和一些不会改变的数据。</li>\n</ul>\n<h3 id=\"8-函数命名\"><a href=\"#8-函数命名\" class=\"headerlink\" title=\"8. 函数命名\"></a>8. 函数命名</h3><p><strong>普通函数</strong>：首字母小写，驼峰式命名，统一使用动词或者动词+名词形式</p>\n<p>例如：fnGetVersion()，fnSubmitForm()，fnInit()；涉及返回逻辑值的函数可以使用is，has，contains等表示逻辑的词语代替动词，例如：fnIsObject()，fnHasClass()，fnContainsElment()。</p>\n<p><strong>内部函数</strong>：使用_fn+动词+名词形式，内部函数必需在函数最后定义。</p>\n<p>例如：</p>\n<pre><code>function fnGetNumber(nTotal) {\n    if (nTotal &lt; 100) {\n        nTotal = 100;\n    }\n    return _fnAdd(nTotal);\n\n    function _fnAdd(nNumber) {\n        nNumber++;\n        return nNumber;\n    }\n}\nalert(fGetNumber(10)); //alert 101\n</code></pre><p><strong>对象方法与事件响应函数</strong>：对象方法命名使用fn+对象类名+动词+名词形式；</p>\n<p>例如： fnAddressGetEmail()，</p>\n<p><strong>事件响应函数</strong>：fn+触发事件对象名+事件名或者模块名</p>\n<p>例如：fnDivClick()，fnAddressSubmitButtonClick()</p>\n<p><strong>函数方法常用的动词</strong>：</p>\n<pre><code>get 获取/set 设置,\nadd 增加/remove 删除\ncreate 创建/destory 移除\nstart 启动/stop 停止\nopen 打开/close 关闭,\nread 读取/write 写入\nload 载入/save 保存,\ncreate 创建/destroy 销毁\nbegin 开始/end 结束,\nbackup 备份/restore 恢复\nimport 导入/export 导出,\nsplit 分割/merge 合并\ninject 注入/extract 提取,\nattach 附着/detach 脱离\nbind 绑定/separate 分离,\nview 查看/browse 浏览\nedit 编辑/modify 修改,\nselect 选取/mark 标记\ncopy 复制/paste 粘贴,\nundo 撤销/redo 重做\ninsert 插入/delete 移除,\nadd 加入/append 添加\nclean 清理/clear 清除,\nindex 索引/sort 排序\nfind 查找/search 搜索,\nincrease 增加/decrease 减少\nplay 播放/pause 暂停,\nlaunch 启动/run 运行\ncompile 编译/execute 执行,\ndebug 调试/trace 跟踪\nobserve 观察/listen 监听,\nbuild 构建/publish 发布\ninput 输入/output 输出,\nencode 编码/decode 解码\nencrypt 加密/decrypt 解密,\ncompress 压缩/decompress 解压缩\npack 打包/unpack 解包,\nparse 解析/emit 生成\nconnect 连接/disconnect 断开,\nsend 发送/receive 接收\ndownload 下载/upload 上传,\nrefresh 刷新/synchronize 同步\nupdate 更新/revert 复原,\nlock 锁定/unlock 解锁\ncheck out 签出/check in 签入,\nsubmit 提交/commit 交付\npush 推/pull 拉,\nexpand 展开/collapse 折叠\nbegin 起始/end 结束,\nstart 开始/finish 完成\nenter 进入/exit 退出,\nabort 放弃/quit 离开\nobsolete 废弃/depreciate 废旧,\ncollect 收集/aggregate 聚集\n</code></pre><h3 id=\"9-变量命名例子\"><a href=\"#9-变量命名例子\" class=\"headerlink\" title=\"9. 变量命名例子\"></a>9. 变量命名例子</h3><ul>\n<li><p>为什么需要这样强制定义变量前缀？正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，如果只通过普通单词，是很难区分的。</p>\n<p>普通代码</p>\n<pre><code>var checked = false;\nvar check = function() {\n    return true;\n}\n/**\nsome code\n**/\n\nif(check) {//已经无法很确切知道这里是要用checked还是check()从而导致逻辑错误\n    //do some thing\n}\n</code></pre></li>\n</ul>\n<pre><code>规范后代码\n\n    var bChecked = false;\n    var fnCheck = function() {\n        return true;\n    }\n    /**\n    some code\n    **/\n\n    if(bChecked) {\n        // do some thing\n    }\n    if(fnCheck()) {\n        // do other thing\n    }\n</code></pre><ul>\n<li><p>如何标明私有方法或私有属性？</p>\n<pre><code>var person = {\n    getName: function () {\n        return this._getFirst() + &apos; &apos; + this._getLast();\n    },\n    _getFirst: function () {\n        //...\n    },\n    _getLast: function (){\n        //...\n    } };\n</code></pre></li>\n</ul>\n<pre><code>在这个例子中，getName()以为这这是API的一个公开的方法，而\\_getFirst()和\\_getLast()意味着这是一个私有函数。尽管他们都是普通的公开方法，但是使用下划线前缀的表示方法可以提醒使用person对象的用户，告诉他们这些方法在其他地方不能确保一定能够正常工作，不能直接调用。\n</code></pre><ul>\n<li><p>总结：下面是一些使用下划线约定的变量</p>\n<ul>\n<li>使用下划线结尾来表明是私有变量，例如name_和getElements_()。</li>\n<li>使用一个下划线前缀来表示受保护属性，使用两个下划线前缀来表示私有属性。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"四、编写注释\"><a href=\"#四、编写注释\" class=\"headerlink\" title=\"四、编写注释\"></a>四、编写注释</h2><blockquote>\n<p>为代码编写注释是非常重要的。通常人们在深入思考一个问题时，会非常清楚这段代码的工作原理。但是当过一周后再次回到该代码时，可能会花上很长时间来回想起那段代码到底是干什么的。</p>\n</blockquote>\n<ul>\n<li><p>公共组件维护者和各栏目WD都需要在文件头部加上注释说明：</p>\n<pre><code>/**\n*文件用途说明\n*作者姓名、联系方式（旺旺）\n*制作日期\n**/\n</code></pre></li>\n</ul>\n<ul>\n<li><p>大的模块注释方法：</p>\n<pre><code>//================\n// 代码用途\n//================\n</code></pre></li>\n</ul>\n<ul>\n<li><p>小的注释；</p>\n<pre><code>//代码说明\n</code></pre></li>\n</ul>\n<pre><code>注释单独一行，不要在代码后的同一行内加注释。例如：\n\n    //姓名\n    var name = “abc”;   V\n    var name =”abc”; //姓名 X\n</code></pre><hr>\n<h2 id=\"五、使用空格\"><a href=\"#五、使用空格\" class=\"headerlink\" title=\"五、使用空格\"></a>五、使用空格</h2><blockquote>\n<p>使用空格有助于改善代码的可读性和一致性。在撰写英文文章时在逗号和区间范围后面使用空格。在javascript采用同样的逻辑，可在列表表达式（等价于逗号）和语句结束（等价于完成一次“思考”）后面添加空格。</p>\n</blockquote>\n<p><strong>用处一</strong></p>\n<ul>\n<li>在分开for循环的各个部分的分号之后：例如，for (var i = 0; i &lt; 10; i +=1){…}</li>\n<li>在for循环中初始化多个变量（i和最大值等）：for (var i = 0, max = 10; i &lt; max; i += 1){…}</li>\n<li>在限定数组项的逗号后面：var a = [1, 2, 3];</li>\n<li>对象属性的逗号之后和将属性名和属性值分开的冒号之后：var o = {a: 1, b: 2};</li>\n<li>分隔开函数中各个参数的逗号之后：myFunc(a, b, c)</li>\n<li>在函数声明的大括号之前：function myFunc() {}</li>\n<li>在匿名函数表达式之后：var myFunc = function () {};</li>\n</ul>\n<p><strong>用初二</strong></p>\n<p>空格的另外一个很好的用途是用来分隔所有的操作符和操作，这也就是意味着在 +, -, *, =, &lt;, &gt;, &lt;=, &gt;=, ===, !==, &amp;&amp;, ||, += 等之后使用空格：</p>\n<p>例子：</p>\n<pre><code>//大量空格，并且使用一致，是的代码可读性更好\n//允许在阅读的时候不用一口气读下去\nvar d = 0,\n    a = b +1;\nif ( a &amp;&amp; b &amp;&amp; c) {\n    d = a % c;\n    a += d;\n}\n\n//反模式\n//缺少空格或空格使用不一致，使得代码比较混乱\nvar d= 0;\n    a =b+1;\nif (a&amp;&amp; b&amp;&amp; c) {\nd=a %c;\n    a+= d;\n}\n</code></pre><hr>\n<h2 id=\"六、编写API文档\"><a href=\"#六、编写API文档\" class=\"headerlink\" title=\"六、编写API文档\"></a>六、编写API文档</h2><h3 id=\"1-生成API文档的步骤：\"><a href=\"#1-生成API文档的步骤：\" class=\"headerlink\" title=\"1. 生成API文档的步骤：\"></a>1. 生成API文档的步骤：</h3><ul>\n<li>编写特殊格式的代码块（即一些注释块）</li>\n<li>运行工具来解析代码和注释（工具如：JSDoc Toolkit和YUIDoc）</li>\n<li>发布工具解析的结果，大多数情况是采用HTML格式发布（如网页版的API文档就是利用工具生成的）</li>\n</ul>\n<p><strong>简单举例</strong>：</p>\n<pre><code>/**\n* 翻转一个字符串\n*\n* @param  {String} 输入需要翻转的字符串\n* @return {String} 翻转后的字符串\n**/\n\nvar reverse = function (input) {\n    //...\n    return output;\n};\n</code></pre><p><strong>YUIDoc范例</strong>：</p>\n<blockquote>\n<p>完整范例：本程序由一个文件(app.js)组成，该文件仅有一个模块(myapp)。</p>\n</blockquote>\n<p>app.js:</p>\n<pre><code>/**\n* 我的javascript应用程序\n*\n* @module myapp\n*/\n\n//使用命名空间来定义一个空对象\nvar MYAPP = {};\n\n//定义一个包含两个方法(sum()和multi())的math_stuff对象\n/**\n* @namespace MYAPP\n* class math_stuff\n*/\n\nMYAPP.math_stuff = {\n    /**\n    * Sums two numbers\n    *\n    * @method sum\n    * param     {Number}    是第一个数\n    * param     {Number}    是第二个数\n    * return    {Number}    两个输入的总和\n    */\n    sum: function (a, b) {\n        return a + b;\n    },\n    /**\n    * Multiplies two numbers\n    * param     {Number}    是第一个数\n    * param     {Number}    是第二个数\n    * return    {Number}    两个输入相乘后结果\n    */\n    multi: function (a, b) {\n        return a * b;\n    }\n};\n</code></pre><p>@namespace：这里用于命名包含以上对象的全局引用的名称</p>\n<p>@class：这里有些命名不当，他实际意思是指对象或者构造函数</p>\n<p>@method：定义对象中的方法和方法名</p>\n<p>@param：列举函数所使用的参数。其中将参数类型用大括号括起来，并在其后注释参数名及描述。</p>\n<p>@return：类似于@param，这里用于描述返回值的，并且该方法没有名称。</p>\n<p>@constructor：表明这个“类”实际上是一个构造函数</p>\n<p>@property和@type描述了对象的属性。</p>\n<h3 id=\"2-编写API目的：\"><a href=\"#2-编写API目的：\" class=\"headerlink\" title=\"2. 编写API目的：\"></a>2. 编写API目的：</h3><ul>\n<li>为API编写注释不仅仅是一中提供参考文档的简便方法，而且还有其他用途——通过再次审查代码，提高代码质量。</li>\n<li>在解决问题时写出的解决方案仅仅是一个初稿。该解决方案可以给出令人期待的输出，但是该方案是否是最佳方案呢？改代码是否可读、易于理解、维护和升级呢？当您再次审视代码时您将更加确定代码哪些部分可以改进——如何使得代码更容易继续更新，移除一些不足之处等。它可以极大地帮助您创建高质量的代码。</li>\n</ul>\n<hr>\n<h2 id=\"七、推荐写法\"><a href=\"#七、推荐写法\" class=\"headerlink\" title=\"七、推荐写法\"></a>七、推荐写法</h2><ol>\n<li><p>除了三目运算，if,else等禁止简写</p>\n<pre><code>// 正确的书写\nif (true) {\n    alert(name);\n}\nconsole.log(name);\n// 不推荐的书写\nif (true)\n    alert(name);\nconsole.log(name);\n// 不推荐的书写\nif (true)\nalert(name);\nconsole.log(name)\n</code></pre></li>\n</ol>\n<ol start=\"2\">\n<li><p>在需要以{}闭合的代码段前增加换行，如：for if</p>\n<pre><code> // 没有换行，小的代码段无法区分\n if (wl &amp;&amp; wl.length) {\n     for (i = 0, l = wl.length; i &lt; l; ++i) {\n         p = wl[i];\n         type = Y.Lang.type(r[p]);\n         if (s.hasOwnProperty(p)) {\n             if (merge &amp;&amp; type == &apos;object&apos;) {\n                 Y.mix(r[p], s[p]);\n             } else if (ov || !(p in r)) {\n                 r[p] = s[p];\n             }\n         }\n     }\n }\n // 有了换行，逻辑清楚多了\n if (wl &amp;&amp; wl.length) {\n\n     for (i = 0, l = wl.length; i &lt; l; ++i) {\n         p = wl[i];\n         type = Y.Lang.type(r[p]);\n\n         if (s.hasOwnProperty(p)) {\n             // 处理merge逻辑\n             if (merge &amp;&amp; type == &apos;object&apos;) {\n                 Y.mix(r[p], s[p]);\n             } else if (ov || !(p in r)) {\n                 r[p] = s[p];\n             }\n         }\n     }\n }\n换行可以是空行，也可以是注释\n</code></pre></li>\n</ol>\n<ol start=\"3\">\n<li><p>使用Function进行类的定义，不推荐继承，如需继承采用成熟的类库实现继承</p>\n<pre><code>// 类的实现\n function Person(name) {\n     this.name = name;\n }\n\n Person.prototype.sayName = function() {\n     alert(this.name);\n };\n\n var me = new Person(&quot;Nicholas&quot;);\n\n // 将this放到局部变量self\n function Persion(name, sex) {\n     var self = this;\n\n     self.name = name;\n     self.sex = sex;\n }\n</code></pre></li>\n</ol>\n<pre><code>平时咱们写代码，基本都是小程序，真心用不上什么继承，而且继承并不是JS的擅长的语言特性，尽量少用。如果非要使用的话，注意一点：\n\n    function A(){\n        //...\n    }\n    function B(){\n        //...\n    }\n    B.prototype = new A();\n    B.prototype.constructor = B; //原则上，记得把这句话加上\n\n\n继承从原则上来讲，别改变他的构造函数，否则这个继承就显得很别扭了~\n</code></pre><ol start=\"4\">\n<li><p>使用局部变量缓存反复查找的对象(包括但不限于全局变量、dom查询结果、作用域链较深的对象)</p>\n<pre><code>// 缓存对象\nvar getComment = function() {\n    var dom = $(&quot;#common-container&quot;),               // 缓存dom\n                appendTo = $.appendTo,                      // 缓存全局变量\n        data = this.json.data;                      // 缓存作用域链较深的对象\n}\n</code></pre></li>\n</ol>\n<pre><code>    //当需要缓存this时必须使用self变量进行缓存\n    // 缓存this\n    function Row(name) {\n        var self = this;\n\n        self.name = name;\n        $(&quot;.row&quot;).click(function() {\n            self.getName();\n        });\n    }\n\n\nself是一个保留字，不过用它也没关系。在这里，看个人爱好吧，可以用_this, that, me等这些词，都行，但是团队开发的时候统一下比较好。\n</code></pre><ol start=\"5\">\n<li><p>使用eval，采取$.parseJSON</p>\n<p>三个原因：</p>\n<ul>\n<li>有注入风险，尤其是ajax返回数据</li>\n<li>不方便debug</li>\n<li>效率低，eval是一个执行效率很低的函数</li>\n</ul>\n<p>建议： 使用new Function来代替eval的使用，最好就别用。</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"八、不规范写法\"><a href=\"#八、不规范写法\" class=\"headerlink\" title=\"八、不规范写法\"></a>八、不规范写法</h2><ol>\n<li><p>句尾没有分号</p>\n<pre><code>var isHotel = json.type == &quot;hotel&quot; ? true : false\n</code></pre></li>\n</ol>\n<pre><code>这个是要引起注意的，比如：\n\n    a = b        // 赋值\n    (function(){\n        //....\n    })()         // 自执行函数\n\n\n未加分号，结果被解析成\n\n    a = b(function(){//...})()  //将b()()返回的结果赋值给a\n</code></pre><ol start=\"2\">\n<li><p>变量命名各种各样</p>\n<pre><code>var is_hotel;\nvar isHotel;\nvar ishotel;\n</code></pre></li>\n</ol>\n<ol start=\"3\">\n<li><p>if 缩写</p>\n<pre><code>if (isHotel)\n    console.log(true)\nelse\n    console.log(false)\n</code></pre></li>\n</ol>\n<ol start=\"4\">\n<li><p>使用 eval</p>\n<pre><code>var json = eval(jsonText);\n</code></pre></li>\n</ol>\n<ol start=\"5\">\n<li><p>变量未定义到处都是</p>\n<pre><code>function() {\n    var isHotel = &apos;true&apos;;\n    .......\n\n    var html = isHotel ? &apos;&lt;p&gt;hotel&lt;/p&gt;&apos; : &quot;&quot;;\n}\n</code></pre></li>\n</ol>\n<ol start=\"6\">\n<li><p>超长函数</p>\n<pre><code>function() {\n    var isHotel = &apos;true&apos;;\n    //....... 此处省略500行\n    return false;\n}\n</code></pre></li>\n</ol>\n<hr>\n<h2 id=\"九、需要注意的地方\"><a href=\"#九、需要注意的地方\" class=\"headerlink\" title=\"九、需要注意的地方\"></a>九、需要注意的地方</h2><ol>\n<li><p>window.onload只能使用一次，使用多次会被最后的覆盖。</p>\n<p>解决方案：</p>\n<ul>\n<li>只引用一次window.onload</li>\n<li>使用jQuery的$(docuemnt.ready(function(){}); 可多次使用</li>\n<li>使用函数封装，代码地址</li>\n</ul>\n</li>\n<li><p>CSS放在页头引入，javascript放在页尾引入</p>\n</li>\n<li><p>在上线之前，要编译压缩代码</p>\n</li>\n<li>减少重排与重绘</li>\n</ol>\n<hr>\n"},{"title":"MD编辑器就是不告诉你之表情","date":"2019-05-07T07:14:55.000Z","cover":"https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=238832654,1207190021&fm=173&app=25&f=JPEG?w=640&h=348&s=F3B78B6411F23F8444DCFC860300E0EA","_content":"angry: [ ‘😠’, ‘😠’ ],\n\nblush: [ ‘😊’, ‘😊’ ],\n\nbroken_heart: [ ‘💔’, ‘💔’ ],\n\nconfused: [ ‘😕’, ‘😕’ ], \n\ncry: [ “:’(”, “:’-(”, ‘😢’, ‘😢’ ],\n\nfrowning: [ ‘😦’, ‘😦’ ],\n\nheart: [ ‘❤️’ ],\n\nimp: [ ‘👿’, ‘👿’ ],\n\ninnocent: [ ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’ ],\n\njoy: [ “:’)”, “:’-)”, ‘😂’, ‘😂’, “😂”, “:’-D”, ‘😂’, ‘😂’ ],\n\nkissing: [ ‘:’, ':-’ ],\n\nlaughing: [ ‘😆’, ‘😆’ ],\n\nneutral_face: [ ‘😐’, ‘😐’ ],\n\nopen_mouth: [ ‘😮’, ‘😮’, ‘😮’, ‘😮’ ],\n\nrage: [ ‘😡’, ‘😡’ ],\n\nsmile: [ ‘😄’, ‘😄’ ],\n\nsmiley: [ ‘😃’, ‘😃’ ],\n\nsmiling_imp: [ ‘😈’, ‘😈’ ],\n\nsob: [ “:,’(”, “:,’-(”, ‘😭’, ‘😭’ ],\n\nstuck_out_tongue: [ ‘😛’, ‘😛’ ],\n\nsunglasses: [ ‘😎’, ‘😎’ ],\n\nsweat: [ ‘😓’, ‘😓’ ],\n\nsweat_smile: [ ‘😅’, ‘😅’ ],\n\nunamused: [ ‘😒’, ‘😒’, ‘😒’, ‘😒’, ‘:′,′:− &#x27;, &#x27;:- \n′\n , \n′\n :−’ ],\n\nwink: [ ‘😉’, ‘😉’ ]\n\n“grinning”: “😀”,<br/>\n\n“smiley”: “😃”,<br/>\n\n“smile”: “😄”,<br/>\n\n“grin”: “😁”,<br/>\n\n“laughing”: “😆”,<br/>\n\n“satisfied”: “😆”,<br/>\n\n“sweat_smile”: “😅”,<br/>\n\n“joy”: “😂”,<br/>\n\n“blush”: “😊”,<br/>\n\n“innocent”: “😇”,<br/>\n\n“wink”: “😉”,<br/>\n\n“relieved”: “😌”,<br/>\n\n“heart_eyes”: “😍”,<br/>\n\n“kissing_heart”: “😘”,<br/>\n\n“kissing”: “😗”,<br/>\n\n“kissing_smiling_eyes”: “😙”,<br/>\n\n“kissing_closed_eyes”: “😚”,<br/>\n\n“yum”: “😋”,<br/>\n\n“stuck_out_tongue_winking_eye”: “😜”,<br/>\n\n“stuck_out_tongue_closed_eyes”: “😝”,<br/>\n\n“stuck_out_tongue”: “😛”,<br/>\n\n“sunglasses”: “😎”,<br/>\n\n“smirk”: “😏”,<br/>\n\n“unamused”: “😒”,<br/>\n\n“disappointed”: “😞”,<br/>\n\n“pensive”: “😔”,<br/>\n\n“worried”: “😟”,<br/>\n\n“confused”: “😕”,<br/>\n\n“persevere”: “😣”,<br/>\n\n“confounded”: “😖”,<br/>\n\n“tired_face”: “😫”,<br/>\n\n“weary”: “😩”,<br/>\n\n“angry”: “😠”,<br/>\n\n“rage”: “😡”,<br/>\n\n“pout”: “😡”,<br/>\n\n“no_mouth”: “😶”,<br/>\n\n“neutral_face”: “😐”,<br/>\n\n“expressionless”: “😑”,<br/>\n\n“hushed”: “😯”,<br/>\n\n“frowning”: “😦”,<br/>\n\n“anguished”: “😧”,<br/>\n\n“open_mouth”: “😮”,<br/>\n\n“astonished”: “😲”,<br/>\n\n“dizzy_face”: “😵”,<br/>\n\n“flushed”: “😳”,<br/>\n\n“scream”: “😱”,<br/>\n\n“fearful”: “😨”,<br/>\n\n“cold_sweat”: “😰”,<br/>\n\n“cry”: “😢”,<br/>\n\n“disappointed_relieved”: “😥”,<br/>\n\n“sob”: “😭”,<br/>\n\n“sweat”: “😓”,<br/>\n\n“sleepy”: “😪”,<br/>\n\n“sleeping”: “😴”,<br/>\n\n“mask”: “😷”,<br/>\n\n“smiling_imp”: “😈”,<br/>\n\n“smiley_cat”: “😺”,<br/>\n\n“smile_cat”: “😸”,<br/>\n\n“joy_cat”: “😹”,<br/>\n\n“heart_eyes_cat”: “😻”,<br/>\n\n“smirk_cat”: “😼”,<br/>\n\n“kissing_cat”: “😽”,<br/>\n\n“scream_cat”: “🙀”,<br/>\n\n“crying_cat_face”: “😿”,<br/>\n\n“pouting_cat”: “😾”,<br/>\n\n“fist_raised”: “✊”,<br/>\n\n“fist”: “✊”,<br/>\n\n“v”: “✌️”,<br/>\n\n“point_up”: “☝️”,<br/>\n\n“hand”: “✋”,<br/>\n\n“raised_hand”: “✋”,<br/>\n\n“cat”: “🐱”,<br/>\n\n“mouse”: “🐭”,<br/>\n\n“cow”: “🐮”,<br/>\n\n“monkey_face”: “🐵”,<br/>\n\n“star”: “⭐️”,<br/>\n\n“sparkles”: “✨”,<br/>\n\n“zap”: “⚡️”,<br/>\n\n“sunny”: “☀️”,<br/>\n\n“cloud”: “☁️”,<br/>\n\n“snowflake”: “❄️”,<br/>\n\n“umbrella”: “☔️”,<br/>\n\n“coffee”: “☕️”,<br/>\n\n“airplane”: “✈️”,<br/>\n\n“anchor”: “⚓️”,<br/>\n\n“watch”: “⌚️”,<br/>\n\n“phone”: “☎️”,<br/>\n\n“telephone”: “☎️”,<br/>\n\n“hourglass”: “⌛️”,<br/>\n\n“email”: “✉️”,<br/>\n\n“envelope”: “✉️”,<br/>\n\n“scissors”: “✂️”,<br/>\n\n“black_nib”: “✒️”,<br/>\n\n“pencil2”: “✏️”,<br/>\n\n“heart”: “❤️”,<br/>\n\n“aries”: “♈️”,<br/>\n\n“taurus”: “♉️”,<br/>\n\n“gemini”: “♊️”,<br/>\n\n“cancer”: “♋️”,<br/>\n\n“leo”: “♌️”,<br/>\n\n“virgo”: “♍️”,<br/>\n\n“libra”: “♎️”,<br/>\n\n“scorpius”: “♏️”,<br/>\n\n“sagittarius”: “♐️”,<br/>\n\n“capricorn”: “♑️”,<br/>\n\n“aquarius”: “♒️”,<br/>\n\n“pisces”: “♓️”,<br/>\n\n“eight_pointed_black_star”: “✴️”,<br/>\n\n“x”: “❌”,<br/>\n\n“hotsprings”: “♨️”,<br/>\n\n“exclamation”: “❗️”,<br/>\n\n“heavy_exclamation_mark”: “❗️”,<br/>\n\n“grey_exclamation”: “❕”,<br/>\n\n“question”: “❓”,<br/>\n\n“grey_question”: “❔”,<br/>\n\n“bangbang”: “‼️”,<br/>\n\n“interrobang”: “⁉️”,<br/>\n\n“part_alternation_mark”: “〽️”,<br/>\n\n“warning”: “⚠️”,<br/>\n\n“recycle”: “♻️”,<br/>\n\n“white_check_mark”: “✅”,<br/>\n\n“sparkle”: “❇️”,<br/>\n\n“eight_spoked_asterisk”: “✳️”,<br/>\n\n“negative_squared_cross_mark”: “❎”,<br/>\n\n“m”: “Ⓜ️”,<br/>\n\n“wheelchair”: “♿️”,<br/>\n\n“information_source”: “ℹ️”,<br/>\n\n“heavy_plus_sign”: “➕”,<br/>\n\n“heavy_minus_sign”: “➖”,<br/>\n\n“heavy_division_sign”: “➗”,<br/>\n\n“heavy_multiplication_x”: “✖️”,<br/>\n\n“tm”: “™️”,<br/>\n\n“copyright”: “©️”,<br/>\n\n“registered”: “®️”,<br/>\n\n“wavy_dash”: “〰️”,<br/>\n\n“curly_loop”: “➰”,<br/>\n\n“loop”: “➿”,<br/>\n\n“heavy_check_mark”: “✔️”,<br/>\n\n“ballot_box_with_check”: “☑️”,<br/>\n\n“white_circle”: “⚪️”,<br/>\n\n“black_circle”: “⚫️”,<br/>\n\n“black_small_square”: “▪️”,<br/>\n\n“white_small_square”: “▫️”,<br/>\n\n“black_medium_small_square”: “◾️”,<br/>\n\n“white_medium_small_square”: “◽️”,<br/>\n\n“black_medium_square”: “◼️”,<br/>\n\n“white_medium_square”: “◻️”,<br/>\n\n“black_large_square”: “⬛️”,<br/>\n\n“white_large_square”: “⬜️”,<br/>\n\n“black_joker”: “🃏”,<br/>\n\n“mahjong”: “🀄️”\n\n“100”: “💯”,<br/>\n\n“1234”: “🔢”,<br/>\n\n“grinning”: “😀”,<br/>\n\n“smiley”: “😃”,<br/>\n\n“smile”: “😄”,<br/>\n\n“grin”: “😁”,<br/>\n\n“laughing”: “😆”,<br/>\n\n“satisfied”: “😆”,<br/>\n\n“sweat_smile”: “😅”,<br/>\n\n“joy”: “😂”,<br/>\n\n“rofl”: “🤣”,<br/>\n\n“relaxed”: “☺️”,<br/>\n\n“blush”: “😊”,<br/>\n\n“innocent”: “😇”,<br/>\n\n“slightly_smiling_face”: “🙂”,<br/>\n\n“upside_down_face”: “🙃”,<br/>\n\n“wink”: “😉”,<br/>\n\n“relieved”: “😌”,<br/>\n\n“heart_eyes”: “😍”,<br/>\n\n“kissing_heart”: “😘”,<br/>\n\n“kissing”: “😗”,<br/>\n\n“kissing_smiling_eyes”: “😙”,<br/>\n\n“kissing_closed_eyes”: “😚”,<br/>\n\n“yum”: “😋”,<br/>\n\n“stuck_out_tongue_winking_eye”: “😜”,<br/>\n\n“stuck_out_tongue_closed_eyes”: “😝”,<br/>\n\n“stuck_out_tongue”: “😛”,<br/>\n\n“money_mouth_face”: “🤑”,<br/>\n\n“hugs”: “🤗”,<br/>\n\n“nerd_face”: “🤓”,<br/>\n\n“sunglasses”: “😎”,<br/>\n\n“clown_face”: “🤡”,<br/>\n\n“cowboy_hat_face”: “🤠”,<br/>\n\n“smirk”: “😏”,<br/>\n\n“unamused”: “😒”,<br/>\n\n“disappointed”: “😞”,<br/>\n\n“pensive”: “😔”,<br/>\n\n“worried”: “😟”,<br/>\n\n“confused”: “😕”,<br/>\n\n“slightly_frowning_face”: “🙁”,<br/>\n\n“frowning_face”: “☹️”,<br/>\n\n“persevere”: “😣”,<br/>\n\n“confounded”: “😖”,<br/>\n\n“tired_face”: “😫”,<br/>\n\n“weary”: “😩”,<br/>\n\n“triumph”: “😤”,<br/>\n\n“angry”: “😠”,<br/>\n\n“rage”: “😡”,<br/>\n\n“pout”: “😡”,<br/>\n\n“no_mouth”: “😶”,<br/>\n\n“neutral_face”: “😐”,<br/>\n\n“expressionless”: “😑”,<br/>\n\n“hushed”: “😯”,<br/>\n\n“frowning”: “😦”,<br/>\n\n“anguished”: “😧”,<br/>\n\n“open_mouth”: “😮”,<br/>\n\n“astonished”: “😲”,<br/>\n\n“dizzy_face”: “😵”,<br/>\n\n“flushed”: “😳”,<br/>\n\n“scream”: “😱”,<br/>\n\n“fearful”: “😨”,<br/>\n\n“cold_sweat”: “😰”,<br/>\n\n“cry”: “😢”,<br/>\n\n“disappointed_relieved”: “😥”,<br/>\n\n“drooling_face”: “🤤”,<br/>\n\n“sob”: “😭”,<br/>\n\n“sweat”: “😓”,<br/>\n\n“sleepy”: “😪”,<br/>\n\n“sleeping”: “😴”,<br/>\n\n“roll_eyes”: “🙄”,<br/>\n\n“thinking”: “🤔”,<br/>\n\n“lying_face”: “🤥”,<br/>\n\n“grimacing”: “😬”,<br/>\n\n“zipper_mouth_face”: “🤐”,<br/>\n\n“nauseated_face”: “🤢”,<br/>\n\n“sneezing_face”: “🤧”,<br/>\n\n“mask”: “😷”,<br/>\n\n“face_with_thermometer”: “🤒”,<br/>\n\n“face_with_head_bandage”: “🤕”,<br/>\n\n“smiling_imp”: “😈”,<br/>\n\n“imp”: “👿”,<br/>\n\n“japanese_ogre”: “👹”,<br/>\n\n“japanese_goblin”: “👺”,<br/>\n\n“hankey”: “💩”,<br/>\n\n“poop”: “💩”,<br/>\n\n“shit”: “💩”,<br/>\n\n“ghost”: “👻”,<br/>\n\n“skull”: “💀”,<br/>\n\n“skull_and_crossbones”: “☠️”,<br/>\n\n“alien”: “👽”,<br/>\n\n“space_invader”: “👾”,<br/>\n\n“robot”: “🤖”,<br/>\n\n“jack_o_lantern”: “🎃”,<br/>\n\n“smiley_cat”: “😺”,<br/>\n\n“smile_cat”: “😸”,<br/>\n\n“joy_cat”: “😹”,<br/>\n\n“heart_eyes_cat”: “😻”,<br/>\n\n“smirk_cat”: “😼”,<br/>\n\n“kissing_cat”: “😽”,<br/>\n\n“scream_cat”: “🙀”,<br/>\n\n“crying_cat_face”: “😿”,<br/>\n\n“pouting_cat”: “😾”,<br/>\n\n“open_hands”: “👐”,<br/>\n\n“raised_hands”: “🙌”,<br/>\n\n“clap”: “👏”,<br/>\n\n“pray”: “🙏”,<br/>\n\n“handshake”: “🤝”,<br/>\n\n“+1”: “👍”,<br/>\n\n“thumbsup”: “👍”,<br/>\n\n“-1”: “👎”,<br/>\n\n“thumbsdown”: “👎”,<br/>\n\n“fist_oncoming”: “👊”,<br/>\n\n“facepunch”: “👊”,<br/>\n\n“punch”: “👊”,<br/>\n\n“fist_raised”: “✊”,<br/>\n\n“fist”: “✊”,<br/>\n\n“fist_left”: “🤛”,<br/>\n\n“fist_right”: “🤜”,<br/>\n\n“crossed_fingers”: “🤞”,<br/>\n\n“v”: “✌️”,<br/>\n\n“metal”: “🤘”,<br/>\n\n“ok_hand”: “👌”,<br/>\n\n“point_left”: “👈”,<br/>\n\n“point_right”: “👉”,<br/>\n\n“point_up_2”: “👆”,<br/>\n\n“point_down”: “👇”,<br/>\n\n“point_up”: “☝️”,<br/>\n\n“hand”: “✋”,<br/>\n\n“raised_hand”: “✋”,<br/>\n\n“raised_back_of_hand”: “🤚”,<br/>\n\n“raised_hand_with_fingers_splayed”: “🖐”,<br/>\n\n“vulcan_salute”: “🖖”,<br/>\n\n“wave”: “👋”,<br/>\n\n“call_me_hand”: “🤙”,<br/>\n\n“muscle”: “💪”,<br/>\n\n“middle_finger”: “🖕”,<br/>\n\n“fu”: “🖕”,<br/>\n\n“writing_hand”: “✍️”,<br/>\n\n“selfie”: “🤳”,<br/>\n\n“nail_care”: “💅”,<br/>\n\n“ring”: “💍”,<br/>\n\n“lipstick”: “💄”,<br/>\n\n“kiss”: “💋”,<br/>\n\n“lips”: “👄”,<br/>\n\n“tongue”: “👅”,<br/>\n\n“ear”: “👂”,<br/>\n\n“nose”: “👃”,<br/>\n\n“footprints”: “👣”,<br/>\n\n“eye”: “👁”,<br/>\n\n“eyes”: “👀”,<br/>\n\n“speaking_head”: “🗣”,<br/>\n\n“bust_in_silhouette”: “👤”,<br/>\n\n“busts_in_silhouette”: “👥”,<br/>\n\n“baby”: “👶”,<br/>\n\n“boy”: “👦”,<br/>\n\n“girl”: “👧”,<br/>\n\n“man”: “👨”,<br/>\n\n“woman”: “👩”,<br/>\n\n“blonde_woman”: “👱‍♀”,<br/>\n\n“blonde_man”: “👱”,<br/>\n\n“person_with_blond_hair”: “👱”,<br/>\n\n“older_man”: “👴”,<br/>\n\n“older_woman”: “👵”,<br/>\n\n“man_with_gua_pi_mao”: “👲”,<br/>\n\n“woman_with_turban”: “👳‍♀”,<br/>\n\n“man_with_turban”: “👳”,<br/>\n\n“policewoman”: “👮‍♀”,<br/>\n\n“policeman”: “👮”,<br/>\n\n“cop”: “👮”,<br/>\n\n“construction_worker_woman”: “👷‍♀”,<br/>\n\n“construction_worker_man”: “👷”,<br/>\n\n“construction_worker”: “👷”,<br/>\n\n“guardswoman”: “💂‍♀”,<br/>\n\n“guardsman”: “💂”,<br/>\n\n“female_detective”: “🕵️‍♀️”,<br/>\n\n“male_detective”: “🕵”,<br/>\n\n“detective”: “🕵”,<br/>\n\n“woman_health_worker”: “👩‍⚕”,<br/>\n\n“man_health_worker”: “👨‍⚕”,<br/>\n\n“woman_farmer”: “👩‍🌾”,<br/>\n\n“man_farmer”: “👨‍🌾”,<br/>\n\n“woman_cook”: “👩‍🍳”,<br/>\n\n“man_cook”: “👨‍🍳”,<br/>\n\n“woman_student”: “👩‍🎓”,<br/>\n\n“man_student”: “👨‍🎓”,<br/>\n\n“woman_singer”: “👩‍🎤”,<br/>\n\n“man_singer”: “👨‍🎤”,<br/>\n\n“woman_teacher”: “👩‍🏫”,<br/>\n\n“man_teacher”: “👨‍🏫”,<br/>\n\n“woman_factory_worker”: “👩‍🏭”,<br/>\n\n“man_factory_worker”: “👨‍🏭”,<br/>\n\n\n“woman_technologist”: “👩‍💻”,<br/>\n\n“man_technologist”: “👨‍💻”,<br/>\n\n“woman_office_worker”: “👩‍💼”,<br/>\n\n“man_office_worker”: “👨‍💼”,<br/>\n\n\n“woman_mechanic”: “👩‍🔧”,<br/>\n\n“man_mechanic”: “👨‍🔧”,<br/>\n\n“woman_scientist”: “👩‍🔬”,<br/>\n\n“man_scientist”: “👨‍🔬”,<br/>\n\n“woman_artist”: “👩‍🎨”,<br/>\n\n“man_artist”: “👨‍🎨”,<br/>\n\n“woman_firefighter”: “👩‍🚒”,<br/>\n\n“man_firefighter”: “👨‍🚒”,<br/>\n\n“woman_pilot”: “👩‍✈”,<br/>\n\n“man_pilot”: “👨‍✈”,<br/>\n\n“woman_astronaut”: “👩‍🚀”,<br/>\n\n“man_astronaut”: “👨‍🚀”,<br/>\n\n“woman_judge”: “👩‍⚖”,<br/>\n\n“man_judge”: “👨‍⚖”,<br/>\n\n“mrs_claus”: “🤶”,<br/>\n\n“santa”: “🎅”,<br/>\n\n“princess”: “👸”,<br/>\n\n“prince”: “🤴”,<br/>\n\n“bride_with_veil”: “👰”,<br/>\n\n“man_in_tuxedo”: “🤵”,<br/>\n\n“angel”: “👼”,<br/>\n\n“pregnant_woman”: “🤰”,<br/>\n\n“bowing_woman”: “🙇‍♀”,<br/>\n\n“bowing_man”: “🙇”,<br/>\n\n“bow”: “🙇”,<br/>\n\n“tipping_hand_woman”: “💁”,<br/>\n\n“information_desk_person”: “💁”,<br/>\n\n“sassy_woman”: “💁”,<br/>\n\n“tipping_hand_man”: “💁‍♂”,<br/>\n\n“sassy_man”: “💁‍♂”,<br/>\n\n“no_good_woman”: “🙅”,<br/>\n\n“no_good”: “🙅”,<br/>\n\n“ng_woman”: “🙅”,<br/>\n\n“no_good_man”: “🙅‍♂”,<br/>\n\n“ng_man”: “🙅‍♂”,<br/>\n\n“ok_woman”: “🙆”,<br/>\n\n“ok_man”: “🙆‍♂”,<br/>\n\n“raising_hand_woman”: “🙋”,<br/>\n\n“raising_hand”: “🙋”,<br/>\n\n“raising_hand_man”: “🙋‍♂”,<br/>\n\n“woman_facepalming”: “🤦‍♀”,<br/>\n\n“man_facepalming”: “🤦‍♂”,<br/>\n\n“woman_shrugging”: “🤷‍♀”,<br/>\n\n“man_shrugging”: “🤷‍♂”,<br/>\n\n“pouting_woman”: “🙎”,<br/>\n\n“person_with_pouting_face”: “🙎”,<br/>\n\n“pouting_man”: “🙎‍♂”,<br/>\n\n“frowning_woman”: “🙍”,<br/>\n\n“person_frowning”: “🙍”,<br/>\n\n“frowning_man”: “🙍‍♂”,<br/>\n\n“haircut_woman”: “💇”,<br/>\n\n“haircut”: “💇”,<br/>\n\n“haircut_man”: “💇‍♂”,<br/>\n\n“massage_woman”: “💆”,<br/>\n\n“massage”: “💆”,<br/>\n\n“massage_man”: “💆‍♂”,<br/>\n\n“business_suit_levitating”: “🕴”,<br/>\n\n“dancer”: “💃”,<br/>\n\n“man_dancing”: “🕺”,<br/>\n\n“dancing_women”: “👯”,<br/>\n\n“dancers”: “👯”,<br/>\n\n“dancing_men”: “👯‍♂”,<br/>\n\n“walking_woman”: “🚶‍♀”,<br/>\n\n“walking_man”: “🚶”,<br/>\n\n“walking”: “🚶”,<br/>\n\n“running_woman”: “🏃‍♀”,<br/>\n\n“running_man”: “🏃”,<br/>\n\n“runner”: “🏃”,<br/>\n\n“running”: “🏃”,<br/>\n\n“couple”: “👫”,<br/>\n\n“two_women_holding_hands”: “👭”,<br/>\n\n“two_men_holding_hands”: “👬”,<br/>\n\n“couple_with_heart_woman_man”: “💑”,<br/>\n\n“couple_with_heart”: “💑”,<br/>\n\n“couple_with_heart_woman_woman”: “👩‍❤️‍👩”,<br/>\n\n“couple_with_heart_man_man”: “👨‍❤️‍👨”,<br/>\n\n“couplekiss_man_woman”: “💏”,<br/>\n\n“couplekiss_woman_woman”: “👩‍❤️‍💋‍👩”,<br/>\n\n“couplekiss_man_man”: “👨‍❤️‍💋‍👨”,<br/>\n\n“family_man_woman_boy”: “👪”,<br/>\n\n“family”: “👪”,<br/>\n\n“family_man_woman_girl”: “👨‍👩‍👧”,<br/>\n\n“family_man_woman_girl_boy”: “👨‍👩‍👧‍👦”,<br/>\n\n“family_man_woman_boy_boy”: “👨‍👩‍👦‍👦”,<br/>\n\n“family_man_woman_girl_girl”: “👨‍👩‍👧‍👧”,<br/>\n\n“family_woman_woman_boy”: “👩‍👩‍👦”,<br/>\n\n“family_woman_woman_girl”: “👩‍👩‍👧”,<br/>\n\n“family_woman_woman_girl_boy”: “👩‍👩‍👧‍👦”,<br/>\n\n“family_woman_woman_boy_boy”: “👩‍👩‍👦‍👦”,<br/>\n\n“family_woman_woman_girl_girl”: “👩‍👩‍👧‍👧”,<br/>\n\n“family_man_man_boy”: “👨‍👨‍👦”,<br/>\n\n“family_man_man_girl”: “👨‍👨‍👧”,<br/>\n\n“family_man_man_girl_boy”: “👨‍👨‍👧‍👦”,<br/>\n\n“family_man_man_boy_boy”: “👨‍👨‍👦‍👦”,<br/>\n\n“family_man_man_girl_girl”: “👨‍👨‍👧‍👧”,<br/>\n\n“family_woman_boy”: “👩‍👦”,<br/>\n\n\n“family_woman_girl”: “👩‍👧”,<br/>\n\n“family_woman_girl_boy”: “👩‍👧‍👦”,<br/>\n\n“family_woman_boy_boy”: “👩‍👦‍👦”,<br/>\n\n\n“family_woman_girl_girl”: “👩‍👧‍👧”,<br/>\n\n“family_man_boy”: “👨‍👦”,<br/>\n\n“family_man_girl”: “👨‍👧”,<br/>\n\n“family_man_girl_boy”: “👨‍👧‍👦”,<br/>\n\n“family_man_boy_boy”: “👨‍👦‍👦”,<br/>\n\n“family_man_girl_girl”: “👨‍👧‍👧”,<br/>\n\n“womans_clothes”: “👚”,<br/>\n\n“shirt”: “👕”,<br/>\n\n“tshirt”: “👕”,<br/>\n\n“jeans”: “👖”,<br/>\n\n“necktie”: “👔”,<br/>\n\n“dress”: “👗”,<br/>\n\n“bikini”: “👙”,<br/>\n\n“kimono”: “👘”,<br/>\n\n“high_heel”: “👠”,<br/>\n\n“sandal”: “👡”,<br/>\n\n“boot”: “👢”,<br/>\n\n“mans_shoe”: “👞”,<br/>\n\n“shoe”: “👞”,<br/>\n\n“athletic_shoe”: “👟”,<br/>\n\n“womans_hat”: “👒”,<br/>\n\n“tophat”: “🎩”,<br/>\n\n“mortar_board”: “🎓”,<br/>\n\n“crown”: “👑”,<br/>\n\n“rescue_worker_helmet”: “⛑”,<br/>\n\n“school_satchel”: “🎒”,<br/>\n\n“pouch”: “👝”,<br/>\n\n“purse”: “👛”,<br/>\n\n“handbag”: “👜”,<br/>\n\n“briefcase”: “💼”,<br/>\n\n\n“eyeglasses”: “👓”,<br/>\n\n“dark_sunglasses”: “🕶”,<br/>\n\n“closed_umbrella”: “🌂”,<br/>\n\n“open_umbrella”: “☂️”,<br/>\n\n“dog”: “🐶”,<br/>\n\n“cat”: “🐱”,<br/>\n\n\n“mouse”: “🐭”,<br/>\n\n“hamster”: “🐹”,<br/>\n\n“rabbit”: “🐰”,<br/>\n\n“fox_face”: “🦊”,<br/>\n\n“bear”: “🐻”,<br/>\n\n“panda_face”: “🐼”,<br/>\n\n“koala”: “🐨”,<br/>\n\n“tiger”: “🐯”,<br/>\n\n“lion”: “🦁”,<br/>\n\n“cow”: “🐮”,<br/>\n\n“pig”: “🐷”,<br/>\n\n“pig_nose”: “🐽”,<br/>\n\n“frog”: “🐸”,<br/>\n\n“monkey_face”: “🐵”,<br/>\n\n“see_no_evil”: “🙈”,<br/>\n\n“hear_no_evil”: “🙉”,<br/>\n\n“speak_no_evil”: “🙊”,<br/>\n\n“monkey”: “🐒”,<br/>\n\n“chicken”: “🐔”,<br/>\n\n“penguin”: “🐧”,<br/>\n\n“bird”: “🐦”,<br/>\n\n“baby_chick”: “🐤”,<br/>\n\n“hatching_chick”: “🐣”,<br/>\n\n“hatched_chick”: “🐥”,<br/>\n\n“duck”: “🦆”,<br/>\n\n“eagle”: “🦅”,<br/>\n\n“owl”: “🦉”,<br/>\n\n“bat”: “🦇”,<br/>\n\n“wolf”: “🐺”,<br/>\n\n“boar”: “🐗”,<br/>\n\n“horse”: “🐴”,<br/>\n\n“unicorn”: “🦄”,<br/>\n\n“bee”: “🐝”,<br/>\n\n“honeybee”: “🐝”,<br/>\n\n“bug”: “🐛”,<br/>\n\n“butterfly”: “🦋”,<br/>\n\n“snail”: “🐌”,<br/>\n\n“shell”: “🐚”,<br/>\n\n“beetle”: “🐞”,<br/>\n\n“ant”: “🐜”,<br/>\n\n“spider”: “🕷”,<br/>\n\n“spider_web”: “🕸”,<br/>\n\n“turtle”: “🐢”,<br/>\n\n“snake”: “🐍”,<br/>\n\n“lizard”: “🦎”,<br/>\n\n“scorpion”: “🦂”,<br/>\n\n“crab”: “🦀”,<br/>\n\n“squid”: “🦑”,<br/>\n\n“octopus”: “🐙”,<br/>\n\n“shrimp”: “🦐”,<br/>\n\n“tropical_fish”: “🐠”,<br/>\n\n“fish”: “🐟”,<br/>\n\n“blowfish”: “🐡”,<br/>\n\n“dolphin”: “🐬”,<br/>\n\n“flipper”: “🐬”,<br/>\n\n“shark”: “🦈”,<br/>\n\n“whale”: “🐳”,<br/>\n\n“whale2”: “🐋”,<br/>\n\n“crocodile”: “🐊”,<br/>\n\n“leopard”: “🐆”,<br/>\n\n“tiger2”: “🐅”,<br/>\n\n“water_buffalo”: “🐃”,<br/>\n\n“ox”: “🐂”,<br/>\n\n“cow2”: “🐄”,<br/>\n\n“deer”: “🦌”,<br/>\n\n\n“dromedary_camel”: “🐪”,<br/>\n\n“camel”: “🐫”,<br/>\n\n“elephant”: “🐘”,<br/>\n\n“rhinoceros”: “🦏”,<br/>\n\n“gorilla”: “🦍”,<br/>\n\n“racehorse”: “🐎”,<br/>\n\n“pig2”: “🐖”,<br/>\n\n“goat”: “🐐”,<br/>\n\n“ram”: “🐏”,<br/>\n\n“sheep”: “🐑”,<br/>\n\n“dog2”: “🐕”,<br/>\n\n“poodle”: “🐩”,<br/>\n\n“cat2”: “🐈”,<br/>\n\n“rooster”: “🐓”,<br/>\n\n“turkey”: “🦃”,<br/>\n\n“dove”: “🕊”,<br/>\n\n“rabbit2”: “🐇”,<br/>\n\n“mouse2”: “🐁”,<br/>\n\n“rat”: “🐀”,<br/>\n\n\n“chipmunk”: “🐿”,<br/>\n\n“feet”: “🐾”,<br/>\n\n“paw_prints”: “🐾”,<br/>\n\n“dragon”: “🐉”,<br/>\n\n“dragon_face”: “🐲”,<br/>\n\n“cactus”: “🌵”,<br/>\n\n“christmas_tree”: “🎄”,<br/>\n\n“evergreen_tree”: “🌲”,<br/>\n\n“deciduous_tree”: “🌳”,<br/>\n\n“palm_tree”: “🌴”,<br/>\n\n“seedling”: “🌱”,<br/>\n\n“herb”: “🌿”,<br/>\n\n“shamrock”: “☘️”,<br/>\n\n“four_leaf_clover”: “🍀”,<br/>\n\n“bamboo”: “🎍”,<br/>\n\n“tanabata_tree”: “🎋”,<br/>\n\n“leaves”: “🍃”,<br/>\n\n“fallen_leaf”: “🍂”,<br/>\n\n“maple_leaf”: “🍁”,<br/>\n\n“mushroom”: “🍄”,<br/>\n\n“ear_of_rice”: “🌾”,<br/>\n\n“bouquet”: “💐”,<br/>\n\n“tulip”: “🌷”,<br/>\n\n“rose”: “🌹”,<br/>\n\n“wilted_flower”: “🥀”,<br/>\n\n“sunflower”: “🌻”,<br/>\n\n“blossom”: “🌼”,<br/>\n\n“cherry_blossom”: “🌸”,<br/>\n\n“hibiscus”: “🌺”,<br/>\n\n“earth_americas”: “🌎”,<br/>\n\n“earth_africa”: “🌍”,<br/>\n\n“earth_asia”: “🌏”,<br/>\n\n“full_moon”: “🌕”,<br/>\n\n“waning_gibbous_moon”: “🌖”,<br/>\n\n“last_quarter_moon”: “🌗”,<br/>\n\n“waning_crescent_moon”: “🌘”,<br/>\n\n“new_moon”: “🌑”,<br/>\n\n“waxing_crescent_moon”: “🌒”,<br/>\n\n“first_quarter_moon”: “🌓”,<br/>\n\n“moon”: “🌔”,<br/>\n\n“waxing_gibbous_moon”: “🌔”,<br/>\n\n“new_moon_with_face”: “🌚”,<br/>\n\n\n“full_moon_with_face”: “🌝”,<br/>\n\n“sun_with_face”: “🌞”,<br/>\n\n“first_quarter_moon_with_face”: “🌛”,<br/>\n\n“last_quarter_moon_with_face”: “🌜”,<br/>\n\n“crescent_moon”: “🌙”,<br/>\n\n“dizzy”: “💫”,<br/>\n\n“star”: “⭐️”,<br/>\n\n“star2”: “🌟”,<br/>\n\n“sparkles”: “✨”,<br/>\n\n“zap”: “⚡️”,<br/>\n\n“fire”: “🔥”,<br/>\n\n“boom”: “💥”,<br/>\n\n“collision”: “💥”,<br/>\n\n“comet”: “☄”,<br/>\n\n“sunny”: “☀️”,<br/>\n\n“sun_behind_small_cloud”: “🌤”,<br/>\n\n“partly_sunny”: “⛅️”,<br/>\n\n“sun_behind_large_cloud”: “🌥”,<br/>\n\n“sun_behind_rain_cloud”: “🌦”,<br/>\n\n“rainbow”: “🌈”,<br/>\n\n“cloud”: “☁️”,<br/>\n\n“cloud_with_rain”: “🌧”,<br/>\n\n“cloud_with_lightning_and_rain”: “⛈”,<br/>\n\n“cloud_with_lightning”: “🌩”,<br/>\n\n“cloud_with_snow”: “🌨”,<br/>\n\n“snowman_with_snow”: “☃️”,<br/>\n\n“snowman”: “⛄️”,<br/>\n\n“snowflake”: “❄️”,<br/>\n\n“wind_face”: “🌬”,<br/>\n\n“dash”: “💨”,<br/>\n\n“tornado”: “🌪”,<br/>\n\n“fog”: “🌫”,<br/>\n\n“ocean”: “🌊”,<br/>\n\n“droplet”: “💧”,<br/>\n\n“sweat_drops”: “💦”,<br/>\n\n“umbrella”: “☔️”,<br/>\n\n“green_apple”: “🍏”,<br/>\n\n“apple”: “🍎”,<br/>\n\n“pear”: “🍐”,<br/>\n\n“tangerine”: “🍊”,<br/>\n\n“orange”: “🍊”,<br/>\n\n“mandarin”: “🍊”,<br/>\n\n\n“lemon”: “🍋”,<br/>\n\n“banana”: “🍌”,<br/>\n\n“watermelon”: “🍉”,<br/>\n\n\n“grapes”: “🍇”,<br/>\n\n“strawberry”: “🍓”,<br/>\n\n“melon”: “🍈”,<br/>\n\n“cherries”: “🍒”,<br/>\n\n“peach”: “🍑”,<br/>\n\n“pineapple”: “🍍”,<br/>\n\n\n“kiwi_fruit”: “🥝”,<br/>\n\n“avocado”: “🥑”,<br/>\n\n“tomato”: “🍅”,<br/>\n\n“eggplant”: “🍆”,<br/>\n\n“cucumber”: “🥒”,<br/>\n\n“carrot”: “🥕”,<br/>\n\n“corn”: “🌽”,<br/>\n\n“hot_pepper”: “🌶”,<br/>\n\n“potato”: “🥔”,<br/>\n\n“sweet_potato”: “🍠”,<br/>\n\n“chestnut”: “🌰”,<br/>\n\n“peanuts”: “🥜”,<br/>\n\n“honey_pot”: “🍯”,<br/>\n\n“croissant”: “🥐”,<br/>\n\n“bread”: “🍞”,<br/>\n\n“baguette_bread”: “🥖”,<br/>\n\n“cheese”: “🧀”,<br/>\n\n“egg”: “🥚”,<br/>\n\n“fried_egg”: “🍳”,<br/>\n\n“bacon”: “🥓”,<br/>\n\n“pancakes”: “🥞”,<br/>\n\n“fried_shrimp”: “🍤”,<br/>\n\n“poultry_leg”: “🍗”,<br/>\n\n“meat_on_bone”: “🍖”,<br/>\n\n“pizza”: “🍕”,<br/>\n\n“hotdog”: “🌭”,<br/>\n\n“hamburger”: “🍔”,<br/>\n\n“fries”: “🍟”,<br/>\n\n“stuffed_flatbread”: “🥙”,<br/>\n\n“taco”: “🌮”,<br/>\n\n“burrito”: “🌯”,<br/>\n\n“green_salad”: “🥗”,<br/>\n\n“shallow_pan_of_food”: “🥘”,<br/>\n\n“spaghetti”: “🍝”,<br/>\n\n“ramen”: “🍜”,<br/>\n\n“stew”: “🍲”,<br/>\n\n“fish_cake”: “🍥”,<br/>\n\n“sushi”: “🍣”,<br/>\n\n“bento”: “🍱”,<br/>\n\n“curry”: “🍛”,<br/>\n\n“rice”: “🍚”,<br/>\n\n\n“rice_ball”: “🍙”,<br/>\n\n“rice_cracker”: “🍘”,<br/>\n\n“oden”: “🍢”,<br/>\n\n“dango”: “🍡”,<br/>\n\n“shaved_ice”: “🍧”,<br/>\n\n“ice_cream”: “🍨”,<br/>\n\n“icecream”: “🍦”,<br/>\n\n“cake”: “🍰”,<br/>\n\n“birthday”: “🎂”,<br/>\n\n“custard”: “🍮”,<br/>\n\n“lollipop”: “🍭”,<br/>\n\n“candy”: “🍬”,<br/>\n\n“chocolate_bar”: “🍫”,<br/>\n\n“popcorn”: “🍿”,<br/>\n\n“doughnut”: “🍩”,<br/>\n\n“cookie”: “🍪”,<br/>\n\n“milk_glass”: “🥛”,<br/>\n\n“baby_bottle”: “🍼”,<br/>\n\n“coffee”: “☕️”,<br/>\n\n“tea”: “🍵”,<br/>\n\n\n“sake”: “🍶”,<br/>\n\n“beer”: “🍺”,<br/>\n\n“beers”: “🍻”,<br/>\n\n“clinking_glasses”: “🥂”,<br/>\n\n“wine_glass”: “🍷”,<br/>\n\n“tumbler_glass”: “🥃”,<br/>\n\n“cocktail”: “🍸”,<br/>\n\n“tropical_drink”: “🍹”,<br/>\n\n“champagne”: “🍾”,<br/>\n\n“spoon”: “🥄”,<br/>\n\n“fork_and_knife”: “🍴”,<br/>\n\n“plate_with_cutlery”: “🍽”,<br/>\n\n“soccer”: “⚽️”,<br/>\n\n“basketball”: “🏀”,<br/>\n\n“football”: “🏈”,<br/>\n\n“baseball”: “⚾️”,<br/>\n\n“tennis”: “🎾”,<br/>\n\n“volleyball”: “🏐”,<br/>\n\n“rugby_football”: “🏉”,<br/>\n\n“8ball”: “🎱”,<br/>\n\n“ping_pong”: “🏓”,<br/>\n\n“badminton”: “🏸”,<br/>\n\n“goal_net”: “🥅”,<br/>\n\n“ice_hockey”: “🏒”,<br/>\n\n“field_hockey”: “🏑”,<br/>\n\n“cricket”: “🏏”,<br/>\n\n“golf”: “⛳️”,<br/>\n\n“bow_and_arrow”: “🏹”,<br/>\n\n“fishing_pole_and_fish”: “🎣”,<br/>\n\n“boxing_glove”: “🥊”,<br/>\n\n“martial_arts_uniform”: “🥋”,<br/>\n\n“ice_skate”: “⛸”,<br/>\n\n“ski”: “🎿”,<br/>\n\n“skier”: “⛷”,<br/>\n\n“snowboarder”: “🏂”,<br/>\n\n“weight_lifting_woman”: “🏋️‍♀️”,<br/>\n\n“weight_lifting_man”: “🏋”,<br/>\n\n“person_fencing”: “🤺”,<br/>\n\n“women_wrestling”: “🤼‍♀”,<br/>\n\n“men_wrestling”: “🤼‍♂”,<br/>\n\n“woman_cartwheeling”: “🤸‍♀”,<br/>\n\n“man_cartwheeling”: “🤸‍♂”,<br/>\n\n“basketball_woman”: “⛹️‍♀️”,<br/>\n\n\n“basketball_man”: “⛹”,<br/>\n\n“woman_playing_handball”: “🤾‍♀”,<br/>\n\n“man_playing_handball”: “🤾‍♂”,<br/>\n\n“golfing_woman”: “🏌️‍♀️”,<br/>\n\n“golfing_man”: “🏌”,<br/>\n\n“surfing_woman”: “🏄‍♀”,<br/>\n\n“surfing_man”: “🏄”,<br/>\n\n“surfer”: “🏄”,<br/>\n\n“swimming_woman”: “🏊‍♀”,<br/>\n\n“swimming_man”: “🏊”,<br/>\n\n“swimmer”: “🏊”,<br/>\n“woman_playing_water_polo”: “🤽‍♀”,<br/>\n“man_playing_water_polo”: “🤽‍♂”,<br/>\n“rowing_woman”: “🚣‍♀”,<br/>\n“rowing_man”: “🚣”,<br/>\n“rowboat”: “🚣”,<br/>\n“horse_racing”: “🏇”,<br/>\n“biking_woman”: “🚴‍♀”,<br/>\n“biking_man”: “🚴”,<br/>\n“bicyclist”: “🚴”,<br/>\n“mountain_biking_woman”: “🚵‍♀”,<br/>\n“mountain_biking_man”: “🚵”,<br/>\n“mountain_bicyclist”: “🚵”,<br/>\n“running_shirt_with_sash”: “🎽”,<br/>\n“medal_sports”: “🏅”,<br/>\n“medal_military”: “🎖”,<br/>\n“1st_place_medal”: “🥇”,<br/>\n“2nd_place_medal”: “🥈”,<br/>\n“3rd_place_medal”: “🥉”,<br/>\n“trophy”: “🏆”,<br/>\n“rosette”: “🏵”,<br/>\n“reminder_ribbon”: “🎗”,<br/>\n“ticket”: “🎫”,<br/>\n“tickets”: “🎟”,<br/>\n“circus_tent”: “🎪”,<br/>\n“woman_juggling”: “🤹‍♀”,<br/>\n“man_juggling”: “🤹‍♂”,<br/>\n“performing_arts”: “🎭”,<br/>\n“art”: “🎨”,<br/>\n“clapper”: “🎬”,<br/>\n“microphone”: “🎤”,<br/>\n“headphones”: “🎧”,<br/>\n“musical_score”: “🎼”,<br/>\n“musical_keyboard”: “🎹”,<br/>\n“drum”: “🥁”,<br/>\n“saxophone”: “🎷”,<br/>\n“trumpet”: “🎺”,<br/>\n“guitar”: “🎸”,<br/>\n“violin”: “🎻”,<br/>\n“game_die”: “🎲”,<br/>\n“dart”: “🎯”,<br/>\n“bowling”: “🎳”,<br/>\n“video_game”: “🎮”,<br/>\n“slot_machine”: “🎰”,<br/>\n“car”: “🚗”,<br/>\n“red_car”: “🚗”,<br/>\n“taxi”: “🚕”,<br/>\n“blue_car”: “🚙”,<br/>\n“bus”: “🚌”,<br/>\n“trolleybus”: “🚎”,<br/>\n“racing_car”: “🏎”,<br/>\n“police_car”: “🚓”,<br/>\n“ambulance”: “🚑”,<br/>\n“fire_engine”: “🚒”,<br/>\n“minibus”: “🚐”,<br/>\n“truck”: “🚚”,<br/>\n“articulated_lorry”: “🚛”,<br/>\n“tractor”: “🚜”,<br/>\n“kick_scooter”: “🛴”,<br/>\n“bike”: “🚲”,<br/>\n“motor_scooter”: “🛵”,<br/>\n“motorcycle”: “🏍”,<br/>\n“rotating_light”: “🚨”,<br/>\n“oncoming_police_car”: “🚔”,<br/>\n“oncoming_bus”: “🚍”,<br/>\n“oncoming_automobile”: “🚘”,<br/>\n“oncoming_taxi”: “🚖”,<br/>\n“aerial_tramway”: “🚡”,<br/>\n“mountain_cableway”: “🚠”,<br/>\n“suspension_railway”: “🚟”,<br/>\n“railway_car”: “🚃”,<br/>\n“train”: “🚋”,<br/>\n“mountain_railway”: “🚞”,<br/>\n“monorail”: “🚝”,<br/>\n“bullettrain_side”: “🚄”,<br/>\n“bullettrain_front”: “🚅”,<br/>\n“light_rail”: “🚈”,<br/>\n“steam_locomotive”: “🚂”,<br/>\n“train2”: “🚆”,<br/>\n“metro”: “🚇”,<br/>\n“tram”: “🚊”,<br/>\n“station”: “🚉”,<br/>\n“helicopter”: “🚁”,<br/>\n“small_airplane”: “🛩”,<br/>\n“airplane”: “✈️”,<br/>\n“flight_departure”: “🛫”,<br/>\n“flight_arrival”: “🛬”,<br/>\n“rocket”: “🚀”,<br/>\n“artificial_satellite”: “🛰”,<br/>\n“seat”: “💺”,<br/>\n“canoe”: “🛶”,<br/>\n“boat”: “⛵️”,<br/>\n“sailboat”: “⛵️”,<br/>\n“motor_boat”: “🛥”,<br/>\n“speedboat”: “🚤”,<br/>\n“passenger_ship”: “🛳”,<br/>\n“ferry”: “⛴”,<br/>\n“ship”: “🚢”,<br/>\n“anchor”: “⚓️”,<br/>\n“construction”: “🚧”,<br/>\n“fuelpump”: “⛽️”,<br/>\n“busstop”: “🚏”,<br/>\n“vertical_traffic_light”: “🚦”,<br/>\n“traffic_light”: “🚥”,<br/>\n“world_map”: “🗺”,<br/>\n“moyai”: “🗿”,<br/>\n“statue_of_liberty”: “🗽”,<br/>\n“fountain”: “⛲️”,<br/>\n“tokyo_tower”: “🗼”,<br/>\n“european_castle”: “🏰”,<br/>\n“japanese_castle”: “🏯”,<br/>\n“stadium”: “🏟”,<br/>\n“ferris_wheel”: “🎡”,<br/>\n“roller_coaster”: “🎢”,<br/>\n“carousel_horse”: “🎠”,<br/>\n“parasol_on_ground”: “⛱”,<br/>\n“beach_umbrella”: “🏖”,<br/>\n“desert_island”: “🏝”,<br/>\n“mountain”: “⛰”,<br/>\n“mountain_snow”: “🏔”,<br/>\n“mount_fuji”: “🗻”,<br/>\n“volcano”: “🌋”,<br/>\n“desert”: “🏜”,<br/>\n“camping”: “🏕”,<br/>\n“tent”: “⛺️”,<br/>\n“railway_track”: “🛤”,<br/>\n“motorway”: “🛣”,<br/>\n“building_construction”: “🏗”,<br/>\n“factory”: “🏭”,<br/>\n“house”: “🏠”,<br/>\n“house_with_garden”: “🏡”,<br/>\n“houses”: “🏘”,<br/>\n“derelict_house”: “🏚”,<br/>\n“office”: “🏢”,<br/>\n“department_store”: “🏬”,<br/>\n“post_office”: “🏣”,<br/>\n“european_post_office”: “🏤”,<br/>\n“hospital”: “🏥”,<br/>\n“bank”: “🏦”,<br/>\n“hotel”: “🏨”,<br/>\n“convenience_store”: “🏪”,<br/>\n“school”: “🏫”,<br/>\n“love_hotel”: “🏩”,<br/>\n“wedding”: “💒”,<br/>\n“classical_building”: “🏛”,<br/>\n“church”: “⛪️”,<br/>\n“mosque”: “🕌”,<br/>\n“synagogue”: “🕍”,<br/>\n“kaaba”: “🕋”,<br/>\n“shinto_shrine”: “⛩”,<br/>\n“japan”: “🗾”,<br/>\n“rice_scene”: “🎑”,<br/>\n“national_park”: “🏞”,<br/>\n“sunrise”: “🌅”,<br/>\n“sunrise_over_mountains”: “🌄”,<br/>\n“stars”: “🌠”,<br/>\n“sparkler”: “🎇”,<br/>\n“fireworks”: “🎆”,<br/>\n“city_sunrise”: “🌇”,<br/>\n“city_sunset”: “🌆”,<br/>\n“cityscape”: “🏙”,<br/>\n“night_with_stars”: “🌃”,<br/>\n“milky_way”: “🌌”,<br/>\n“bridge_at_night”: “🌉”,<br/>\n“foggy”: “🌁”,<br/>\n“watch”: “⌚️”,<br/>\n“iphone”: “📱”,<br/>\n“calling”: “📲”,<br/>\n“computer”: “💻”,<br/>\n“keyboard”: “⌨️”,<br/>\n“desktop_computer”: “🖥”,<br/>\n“printer”: “🖨”,<br/>\n“computer_mouse”: “🖱”,<br/>\n“trackball”: “🖲”,<br/>\n“joystick”: “🕹”,<br/>\n“clamp”: “🗜”,<br/>\n“minidisc”: “💽”,<br/>\n“floppy_disk”: “💾”,<br/>\n“cd”: “💿”,<br/>\n“dvd”: “📀”,<br/>\n“vhs”: “📼”,<br/>\n“camera”: “📷”,<br/>\n“camera_flash”: “📸”,<br/>\n“video_camera”: “📹”,<br/>\n“movie_camera”: “🎥”,<br/>\n“film_projector”: “📽”,<br/>\n“film_strip”: “🎞”,<br/>\n“telephone_receiver”: “📞”,<br/>\n“phone”: “☎️”,<br/>\n“telephone”: “☎️”,<br/>\n“pager”: “📟”,<br/>\n“fax”: “📠”,<br/>\n“tv”: “📺”,<br/>\n“radio”: “📻”,<br/>\n“studio_microphone”: “🎙”,<br/>\n“level_slider”: “🎚”,<br/>\n“control_knobs”: “🎛”,<br/>\n“stopwatch”: “⏱”,<br/>\n“timer_clock”: “⏲”,<br/>\n“alarm_clock”: “⏰”,<br/>\n“mantelpiece_clock”: “🕰”,<br/>\n“hourglass”: “⌛️”,<br/>\n“hourglass_flowing_sand”: “⏳”,<br/>\n“satellite”: “📡”,<br/>\n“battery”: “🔋”,<br/>\n“electric_plug”: “🔌”,<br/>\n“bulb”: “💡”,<br/>\n“flashlight”: “🔦”,<br/>\n“candle”: “🕯”,<br/>\n“wastebasket”: “🗑”,<br/>\n“oil_drum”: “🛢”,<br/>\n“money_with_wings”: “💸”,<br/>\n“dollar”: “💵”,<br/>\n“yen”: “💴”,<br/>\n“euro”: “💶”,<br/>\n“pound”: “💷”,<br/>\n“moneybag”: “💰”,<br/>\n“credit_card”: “💳”,<br/>\n“gem”: “💎”,<br/>\n“balance_scale”: “⚖️”,<br/>\n“wrench”: “🔧”,<br/>\n“hammer”: “🔨”,<br/>\n“hammer_and_pick”: “⚒”,<br/>\n“hammer_and_wrench”: “🛠”,<br/>\n“pick”: “⛏”,<br/>\n“nut_and_bolt”: “🔩”,<br/>\n“gear”: “⚙️”,<br/>\n“chains”: “⛓”,<br/>\n“gun”: “🔫”,<br/>\n“bomb”: “💣”,<br/>\n“hocho”: “🔪”,<br/>\n“knife”: “🔪”,<br/>\n“dagger”: “🗡”,<br/>\n“crossed_swords”: “⚔️”,<br/>\n“shield”: “🛡”,<br/>\n“smoking”: “🚬”,<br/>\n“coffin”: “⚰️”,<br/>\n“funeral_urn”: “⚱️”,<br/>\n“amphora”: “🏺”,<br/>\n“crystal_ball”: “🔮”,<br/>\n“prayer_beads”: “📿”,<br/>\n“barber”: “💈”,<br/>\n“alembic”: “⚗️”,<br/>\n“telescope”: “🔭”,<br/>\n“microscope”: “🔬”,<br/>\n“hole”: “🕳”,<br/>\n“pill”: “💊”,<br/>\n“syringe”: “💉”,<br/>\n“thermometer”: “🌡”,<br/>\n“toilet”: “🚽”,<br/>\n“potable_water”: “🚰”,<br/>\n“shower”: “🚿”,<br/>\n“bathtub”: “🛁”,<br/>\n“bath”: “🛀”,<br/>\n“bellhop_bell”: “🛎”,<br/>\n“key”: “🔑”,<br/>\n“old_key”: “🗝”,<br/>\n“door”: “🚪”,<br/>\n“couch_and_lamp”: “🛋”,<br/>\n“bed”: “🛏”,<br/>\n“sleeping_bed”: “🛌”,<br/>\n“framed_picture”: “🖼”,<br/>\n“shopping”: “🛍”,<br/>\n“shopping_cart”: “🛒”,<br/>\n“gift”: “🎁”,<br/>\n“balloon”: “🎈”,<br/>\n“flags”: “🎏”,<br/>\n“ribbon”: “🎀”,<br/>\n“confetti_ball”: “🎊”,<br/>\n“tada”: “🎉”,<br/>\n“dolls”: “🎎”,<br/>\n“izakaya_lantern”: “🏮”,<br/>\n“lantern”: “🏮”,<br/>\n“wind_chime”: “🎐”,<br/>\n“email”: “✉️”,<br/>\n“envelope”: “✉️”,<br/>\n“envelope_with_arrow”: “📩”,<br/>\n“incoming_envelope”: “📨”,<br/>\n“e-mail”: “📧”,<br/>\n“love_letter”: “💌”,<br/>\n“inbox_tray”: “📥”,<br/>\n“outbox_tray”: “📤”,<br/>\n“package”: “📦”,<br/>\n“label”: “🏷”,<br/>\n“mailbox_closed”: “📪”,<br/>\n“mailbox”: “📫”,<br/>\n“mailbox_with_mail”: “📬”,<br/>\n“mailbox_with_no_mail”: “📭”,<br/>\n“postbox”: “📮”,<br/>\n“postal_horn”: “📯”,<br/>\n“scroll”: “📜”,<br/>\n“page_with_curl”: “📃”,<br/>\n“page_facing_up”: “📄”,<br/>\n“bookmark_tabs”: “📑”,<br/>\n“bar_chart”: “📊”,<br/>\n“chart_with_upwards_trend”: “📈”,<br/>\n“chart_with_downwards_trend”: “📉”,<br/>\n“spiral_notepad”: “🗒”,<br/>\n“spiral_calendar”: “🗓”,<br/>\n“calendar”: “📆”,<br/>\n“date”: “📅”,<br/>\n“card_index”: “📇”,<br/>\n“card_file_box”: “🗃”,<br/>\n“ballot_box”: “🗳”,<br/>\n“file_cabinet”: “🗄”,<br/>\n“clipboard”: “📋”,<br/>\n“file_folder”: “📁”,<br/>\n“open_file_folder”: “📂”,<br/>\n“card_index_dividers”: “🗂”,<br/>\n“newspaper_roll”: “🗞”,<br/>\n“newspaper”: “📰”,<br/>\n“notebook”: “📓”,<br/>\n“notebook_with_decorative_cover”: “📔”,<br/>\n“ledger”: “📒”,<br/>\n“closed_book”: “📕”,<br/>\n“green_book”: “📗”,<br/>\n“blue_book”: “📘”,<br/>\n“orange_book”: “📙”,<br/>\n“books”: “📚”,<br/>\n“book”: “📖”,<br/>\n“open_book”: “📖”,<br/>\n“bookmark”: “🔖”,<br/>\n“link”: “🔗”,<br/>\n“paperclip”: “📎”,<br/>\n“paperclips”: “🖇”,<br/>\n“triangular_ruler”: “📐”,<br/>\n“straight_ruler”: “📏”,<br/>\n“pushpin”: “📌”,<br/>\n“round_pushpin”: “📍”,<br/>\n“scissors”: “✂️”,<br/>\n“pen”: “🖊”,<br/>\n“fountain_pen”: “🖋”,<br/>\n“black_nib”: “✒️”,<br/>\n“paintbrush”: “🖌”,<br/>\n“crayon”: “🖍”,<br/>\n“memo”: “📝”,<br/>\n“pencil”: “📝”,<br/>\n“pencil2”: “✏️”,<br/>\n“mag”: “🔍”,<br/>\n“mag_right”: “🔎”,<br/>\n“lock_with_ink_pen”: “🔏”,<br/>\n“closed_lock_with_key”: “🔐”,<br/>\n“lock”: “🔒”,<br/>\n“unlock”: “🔓”,<br/>\n“heart”: “❤️”,<br/>\n“yellow_heart”: “💛”,<br/>\n“green_heart”: “💚”,<br/>\n“blue_heart”: “💙”,<br/>\n“purple_heart”: “💜”,<br/>\n“black_heart”: “🖤”,<br/>\n“broken_heart”: “💔”,<br/>\n“heavy_heart_exclamation”: “❣️”,<br/>\n“two_hearts”: “💕”,<br/>\n“revolving_hearts”: “💞”,<br/>\n“heartbeat”: “💓”,<br/>\n“heartpulse”: “💗”,<br/>\n“sparkling_heart”: “💖”,<br/>\n“cupid”: “💘”,<br/>\n“gift_heart”: “💝”,<br/>\n“heart_decoration”: “💟”,<br/>\n“peace_symbol”: “☮️”,<br/>\n“latin_cross”: “✝️”,<br/>\n“star_and_crescent”: “☪️”,<br/>\n“om”: “🕉”,<br/>\n“wheel_of_dharma”: “☸️”,<br/>\n“star_of_david”: “✡️”,<br/>\n“six_pointed_star”: “🔯”,<br/>\n“menorah”: “🕎”,<br/>\n“yin_yang”: “☯️”,<br/>\n“orthodox_cross”: “☦️”,<br/>\n“place_of_worship”: “🛐”,<br/>\n“ophiuchus”: “⛎”,<br/>\n“aries”: “♈️”,<br/>\n“taurus”: “♉️”,<br/>\n“gemini”: “♊️”,<br/>\n“cancer”: “♋️”,<br/>\n“leo”: “♌️”,<br/>\n“virgo”: “♍️”,<br/>\n“libra”: “♎️”,<br/>\n“scorpius”: “♏️”,<br/>\n“sagittarius”: “♐️”,<br/>\n“capricorn”: “♑️”,<br/>\n“aquarius”: “♒️”,<br/>\n“pisces”: “♓️”,<br/>\n“id”: “🆔”,<br/>\n“atom_symbol”: “⚛️”,<br/>\n“accept”: “🉑”,<br/>\n“radioactive”: “☢️”,<br/>\n“biohazard”: “☣️”,<br/>\n“mobile_phone_off”: “📴”,<br/>\n“vibration_mode”: “📳”,<br/>\n“eight_pointed_black_star”: “✴️”,<br/>\n“vs”: “🆚”,<br/>\n“white_flower”: “💮”,<br/>\n“ideograph_advantage”: “🉐”,<br/>\n“secret”: “㊙️”,<br/>\n“congratulations”: “㊗️”,<br/>\n“u6e80”: “🈵”,<br/>\n“a”: “🅰️”,<br/>\n“b”: “🅱️”,<br/>\n“ab”: “🆎”,<br/>\n“cl”: “🆑”,<br/>\n“o2”: “🅾️”,<br/>\n“sos”: “🆘”,<br/>\n“x”: “❌”,<br/>\n“o”: “⭕️”,<br/>\n“stop_sign”: “🛑”,<br/>\n“no_entry”: “⛔️”,<br/>\n“name_badge”: “📛”,<br/>\n“no_entry_sign”: “🚫”,<br/>\n“anger”: “💢”,<br/>\n“hotsprings”: “♨️”,<br/>\n“no_pedestrians”: “🚷”,<br/>\n“do_not_litter”: “🚯”,<br/>\n“no_bicycles”: “🚳”,<br/>\n“non-potable_water”: “🚱”,<br/>\n“underage”: “🔞”,<br/>\n“no_mobile_phones”: “📵”,<br/>\n“no_smoking”: “🚭”,<br/>\n“exclamation”: “❗️”,<br/>\n“heavy_exclamation_mark”: “❗️”,<br/>\n“grey_exclamation”: “❕”,<br/>\n“question”: “❓”,<br/>\n“grey_question”: “❔”,<br/>\n“bangbang”: “‼️”,<br/>\n“interrobang”: “⁉️”,<br/>\n“low_brightness”: “🔅”,<br/>\n“high_brightness”: “🔆”,<br/>\n“part_alternation_mark”: “〽️”,<br/>\n“warning”: “⚠️”,<br/>\n“children_crossing”: “🚸”,<br/>\n“trident”: “🔱”,<br/>\n“fleur_de_lis”: “⚜️”,<br/>\n“beginner”: “🔰”,<br/>\n“recycle”: “♻️”,<br/>\n“white_check_mark”: “✅”,<br/>\n“chart”: “💹”,<br/>\n“sparkle”: “❇️”,<br/>\n“eight_spoked_asterisk”: “✳️”,<br/>\n“negative_squared_cross_mark”: “❎”,<br/>\n“globe_with_meridians”: “🌐”,<br/>\n“diamond_shape_with_a_dot_inside”: “💠”,<br/>\n“m”: “Ⓜ️”,<br/>\n“cyclone”: “🌀”,<br/>\n“zzz”: “💤”,<br/>\n“atm”: “🏧”,<br/>\n“wc”: “🚾”,<br/>\n“wheelchair”: “♿️”,<br/>\n“parking”: “🅿️”,<br/>\n“sa”: “🈂️”,<br/>\n“passport_control”: “🛂”,<br/>\n“customs”: “🛃”,<br/>\n“baggage_claim”: “🛄”,<br/>\n“left_luggage”: “🛅”,<br/>\n“mens”: “🚹”,<br/>\n“womens”: “🚺”,<br/>\n“baby_symbol”: “🚼”,<br/>\n“restroom”: “🚻”,<br/>\n“put_litter_in_its_place”: “🚮”,<br/>\n“cinema”: “🎦”,<br/>\n“signal_strength”: “📶”,<br/>\n“koko”: “🈁”,<br/>\n“symbols”: “🔣”,<br/>\n“information_source”: “ℹ️”,<br/>\n“abc”: “🔤”,<br/>\n“abcd”: “🔡”,<br/>\n“capital_abcd”: “🔠”,<br/>\n“ng”: “🆖”,<br/>\n“ok”: “🆗”,<br/>\n“up”: “🆙”,<br/>\n“cool”: “🆒”,<br/>\n“new”: “🆕”,<br/>\n“free”: “🆓”,<br/>\n“zero”: “0️⃣”,<br/>\n“one”: “1️⃣”,<br/>\n“two”: “2️⃣”,<br/>\n“three”: “3️⃣”,<br/>\n“four”: “4️⃣”,<br/>\n“five”: “5️⃣”,<br/>\n“six”: “6️⃣”,<br/>\n“seven”: “7️⃣”,<br/>\n“eight”: “8️⃣”,<br/>\n“nine”: “9️⃣”,<br/>\n“keycap_ten”: “🔟”,<br/>\n“hash”: “#️⃣”,<br/>\n“asterisk”: “*️⃣”,<br/>\n“arrow_forward”: “▶️”,<br/>\n“pause_button”: “⏸”,<br/>\n“play_or_pause_button”: “⏯”,<br/>\n“stop_button”: “⏹”,<br/>\n“record_button”: “⏺”,<br/>\n“next_track_button”: “⏭”,<br/>\n“previous_track_button”: “⏮”,<br/>\n“fast_forward”: “⏩”,<br/>\n“rewind”: “⏪”,<br/>\n“arrow_double_up”: “⏫”,<br/>\n“arrow_double_down”: “⏬”,<br/>\n“arrow_backward”: “◀️”,<br/>\n“arrow_up_small”: “🔼”,<br/>\n“arrow_down_small”: “🔽”,<br/>\n“arrow_right”: “➡️”,<br/>\n“arrow_left”: “⬅️”,<br/>\n“arrow_up”: “⬆️”,<br/>\n“arrow_down”: “⬇️”,<br/>\n“arrow_upper_right”: “↗️”,<br/>\n“arrow_lower_right”: “↘️”,<br/>\n“arrow_lower_left”: “↙️”,<br/>\n“arrow_upper_left”: “↖️”,<br/>\n“arrow_up_down”: “↕️”,<br/>\n“left_right_arrow”: “↔️”,<br/>\n“arrow_right_hook”: “↪️”,<br/>\n“leftwards_arrow_with_hook”: “↩️”,<br/>\n“arrow_heading_up”: “⤴️”,<br/>\n“arrow_heading_down”: “⤵️”,<br/>\n“twisted_rightwards_arrows”: “🔀”,<br/>\n“repeat”: “🔁”,<br/>\n“repeat_one”: “🔂”,<br/>\n“arrows_counterclockwise”: “🔄”,<br/>\n“arrows_clockwise”: “🔃”,<br/>\n“musical_note”: “🎵”,<br/>\n“notes”: “🎶”,<br/>\n“heavy_plus_sign”: “➕”,<br/>\n“heavy_minus_sign”: “➖”,<br/>\n“heavy_division_sign”: “➗”,<br/>\n“heavy_multiplication_x”: “✖️”,<br/>\n“heavy_dollar_sign”: “💲”,<br/>\n“currency_exchange”: “💱”,<br/>\n“tm”: “™️”,<br/>\n“copyright”: “©️”,<br/>\n“registered”: “®️”,<br/>\n“wavy_dash”: “〰️”,<br/>\n“curly_loop”: “➰”,<br/>\n“loop”: “➿”,<br/>\n“end”: “🔚”,<br/>\n“back”: “🔙”,<br/>\n“on”: “🔛”,<br/>\n“top”: “🔝”,<br/>\n“soon”: “🔜”,<br/>\n“heavy_check_mark”: “✔️”,<br/>\n“ballot_box_with_check”: “☑️”,<br/>\n“radio_button”: “🔘”,<br/>\n“white_circle”: “⚪️”,<br/>\n“black_circle”: “⚫️”,<br/>\n“red_circle”: “🔴”,<br/>\n“large_blue_circle”: “🔵”,<br/>\n“small_red_triangle”: “🔺”,<br/>\n“small_red_triangle_down”: “🔻”,<br/>\n“small_orange_diamond”: “🔸”,<br/>\n“small_blue_diamond”: “🔹”,<br/>\n“large_orange_diamond”: “🔶”,<br/>\n“large_blue_diamond”: “🔷”,<br/>\n“white_square_button”: “🔳”,<br/>\n“black_square_button”: “🔲”,<br/>\n“black_small_square”: “▪️”,<br/>\n“white_small_square”: “▫️”,<br/>\n“black_medium_small_square”: “◾️”,<br/>\n“white_medium_small_square”: “◽️”,<br/>\n“black_medium_square”: “◼️”,<br/>\n“white_medium_square”: “◻️”,<br/>\n“black_large_square”: “⬛️”,<br/>\n“white_large_square”: “⬜️”,<br/>\n“speaker”: “🔈”,<br/>\n“mute”: “🔇”,<br/>\n“sound”: “🔉”,<br/>\n“loud_sound”: “🔊”,<br/>\n“bell”: “🔔”,<br/>\n“no_bell”: “🔕”,<br/>\n“mega”: “📣”,<br/>\n“loudspeaker”: “📢”,<br/>\n“eye_speech_bubble”: “👁‍🗨”,<br/>\n“speech_balloon”: “💬”,<br/>\n“thought_balloon”: “💭”,<br/>\n“right_anger_bubble”: “🗯”,<br/>\n“spades”: “♠️”,<br/>\n“clubs”: “♣️”,<br/>\n“hearts”: “♥️”,<br/>\n“diamonds”: “♦️”,<br/>\n“black_joker”: “🃏”,<br/>\n“flower_playing_cards”: “🎴”,<br/>\n“mahjong”: “🀄️”,<br/>\n“clock1”: “🕐”,<br/>\n“clock2”: “🕑”,<br/>\n“clock3”: “🕒”,<br/>\n“clock4”: “🕓”,<br/>\n“clock5”: “🕔”,<br/>\n“clock6”: “🕕”,<br/>\n“clock7”: “🕖”,<br/>\n“clock8”: “🕗”,<br/>\n“clock9”: “🕘”,<br/>\n“clock10”: “🕙”,<br/>\n“clock11”: “🕚”,<br/>\n“clock12”: “🕛”,<br/>\n“clock130”: “🕜”,<br/>\n“clock230”: “🕝”,<br/>\n“clock330”: “🕞”,<br/>\n“clock430”: “🕟”,<br/>\n“clock530”: “🕠”,<br/>\n“clock630”: “🕡”,<br/>\n“clock730”: “🕢”,<br/>\n“clock830”: “🕣”,<br/>\n“clock930”: “🕤”,<br/>\n“clock1030”: “🕥”,<br/>\n“clock1130”: “🕦”,<br/>\n“clock1230”: “🕧”,<br/>\n“white_flag”: “🏳️”,<br/>\n“black_flag”: “🏴”,<br/>\n“checkered_flag”: “🏁”,<br/>\n“triangular_flag_on_post”: “🚩”,<br/>\n“rainbow_flag”: “🏳️‍🌈”,<br/>\n“afghanistan”: “🇦🇫”,<br/>\n“aland_islands”: “🇦🇽”,<br/>\n“albania”: “🇦🇱”,<br/>\n“algeria”: “🇩🇿”,<br/>\n“american_samoa”: “🇦🇸”,<br/>\n“andorra”: “🇦🇩”,<br/>\n“angola”: “🇦🇴”,<br/>\n“anguilla”: “🇦🇮”,<br/>\n“antarctica”: “🇦🇶”,<br/>\n“antigua_barbuda”: “🇦🇬”,<br/>\n“argentina”: “🇦🇷”,<br/>\n“armenia”: “🇦🇲”,<br/>\n“aruba”: “🇦🇼”,<br/>\n“australia”: “🇦🇺”,<br/>\n“austria”: “🇦🇹”,<br/>\n“azerbaijan”: “🇦🇿”,<br/>\n“bahamas”: “🇧🇸”,<br/>\n“bahrain”: “🇧🇭”,<br/>\n“bangladesh”: “🇧🇩”,<br/>\n“barbados”: “🇧🇧”,<br/>\n“belarus”: “🇧🇾”,<br/>\n“belgium”: “🇧🇪”,<br/>\n“belize”: “🇧🇿”,<br/>\n“benin”: “🇧🇯”,<br/>\n“bermuda”: “🇧🇲”,<br/>\n“bhutan”: “🇧🇹”,<br/>\n“bolivia”: “🇧🇴”,<br/>\n“caribbean_netherlands”: “🇧🇶”,<br/>\n“bosnia_herzegovina”: “🇧🇦”,<br/>\n“botswana”: “🇧🇼”,<br/>\n“brazil”: “🇧🇷”,<br/>\n“british_indian_ocean_territory”: “🇮🇴”,<br/>\n“british_virgin_islands”: “🇻🇬”,<br/>\n“brunei”: “🇧🇳”,<br/>\n“bulgaria”: “🇧🇬”,<br/>\n“burkina_faso”: “🇧🇫”,<br/>\n“burundi”: “🇧🇮”,<br/>\n“cape_verde”: “🇨🇻”,<br/>\n“cambodia”: “🇰🇭”,<br/>\n“cameroon”: “🇨🇲”,<br/>\n“canada”: “🇨🇦”,<br/>\n“canary_islands”: “🇮🇨”,<br/>\n“cayman_islands”: “🇰🇾”,<br/>\n“central_african_republic”: “🇨🇫”,<br/>\n“chad”: “🇹🇩”,<br/>\n“chile”: “🇨🇱”,<br/>\n“cn”: “🇨🇳”,<br/>\n“christmas_island”: “🇨🇽”,<br/>\n“cocos_islands”: “🇨🇨”,<br/>\n“colombia”: “🇨🇴”,<br/>\n“comoros”: “🇰🇲”,<br/>\n“congo_brazzaville”: “🇨🇬”,<br/>\n“congo_kinshasa”: “🇨🇩”,<br/>\n“cook_islands”: “🇨🇰”,<br/>\n“costa_rica”: “🇨🇷”,<br/>\n“cote_divoire”: “🇨🇮”,<br/>\n“croatia”: “🇭🇷”,<br/>\n“cuba”: “🇨🇺”,<br/>\n“curacao”: “🇨🇼”,<br/>\n“cyprus”: “🇨🇾”,<br/>\n“czech_republic”: “🇨🇿”,<br/>\n“denmark”: “🇩🇰”,<br/>\n“djibouti”: “🇩🇯”,<br/>\n“dominica”: “🇩🇲”,<br/>\n“dominican_republic”: “🇩🇴”,<br/>\n“ecuador”: “🇪🇨”,<br/>\n“egypt”: “🇪🇬”,<br/>\n“el_salvador”: “🇸🇻”,<br/>\n“equatorial_guinea”: “🇬🇶”,<br/>\n“eritrea”: “🇪🇷”,<br/>\n“estonia”: “🇪🇪”,<br/>\n“ethiopia”: “🇪🇹”,<br/>\n“eu”: “🇪🇺”,<br/>\n“european_union”: “🇪🇺”,<br/>\n“falkland_islands”: “🇫🇰”,<br/>\n“faroe_islands”: “🇫🇴”,<br/>\n“fiji”: “🇫🇯”,<br/>\n“finland”: “🇫🇮”,<br/>\n“fr”: “🇫🇷”,<br/>\n“french_guiana”: “🇬🇫”,<br/>\n“french_polynesia”: “🇵🇫”,<br/>\n“french_southern_territories”: “🇹🇫”,<br/>\n“gabon”: “🇬🇦”,<br/>\n“gambia”: “🇬🇲”,<br/>\n“georgia”: “🇬🇪”,<br/>\n“de”: “🇩🇪”,<br/>\n“ghana”: “🇬🇭”,<br/>\n“gibraltar”: “🇬🇮”,<br/>\n“greece”: “🇬🇷”,<br/>\n“greenland”: “🇬🇱”,<br/>\n“grenada”: “🇬🇩”,<br/>\n“guadeloupe”: “🇬🇵”,<br/>\n“guam”: “🇬🇺”,<br/>\n“guatemala”: “🇬🇹”,<br/>\n“guernsey”: “🇬🇬”,<br/>\n“guinea”: “🇬🇳”,<br/>\n“guinea_bissau”: “🇬🇼”,<br/>\n“guyana”: “🇬🇾”,<br/>\n“haiti”: “🇭🇹”,<br/>\n“honduras”: “🇭🇳”,<br/>\n“hong_kong”: “🇭🇰”,<br/>\n“hungary”: “🇭🇺”,<br/>\n“iceland”: “🇮🇸”,<br/>\n“india”: “🇮🇳”,<br/>\n“indonesia”: “🇮🇩”,<br/>\n“iran”: “🇮🇷”,<br/>\n“iraq”: “🇮🇶”,<br/>\n“ireland”: “🇮🇪”,<br/>\n“isle_of_man”: “🇮🇲”,<br/>\n“israel”: “🇮🇱”,<br/>\n“it”: “🇮🇹”,<br/>\n“jamaica”: “🇯🇲”,<br/>\n“jp”: “🇯🇵”,<br/>\n“crossed_flags”: “🎌”,<br/>\n“jersey”: “🇯🇪”,<br/>\n“jordan”: “🇯🇴”,<br/>\n“kazakhstan”: “🇰🇿”,<br/>\n“kenya”: “🇰🇪”,<br/>\n“kiribati”: “🇰🇮”,<br/>\n“kosovo”: “🇽🇰”,<br/>\n“kuwait”: “🇰🇼”,<br/>\n“kyrgyzstan”: “🇰🇬”,<br/>\n“laos”: “🇱🇦”,<br/>\n“latvia”: “🇱🇻”,<br/>\n“lebanon”: “🇱🇧”,<br/>\n“lesotho”: “🇱🇸”,<br/>\n“liberia”: “🇱🇷”,<br/>\n“libya”: “🇱🇾”,<br/>\n“liechtenstein”: “🇱🇮”,<br/>\n“lithuania”: “🇱🇹”,<br/>\n“luxembourg”: “🇱🇺”,<br/>\n“macau”: “🇲🇴”,<br/>\n“macedonia”: “🇲🇰”,<br/>\n“madagascar”: “🇲🇬”,<br/>\n“malawi”: “🇲🇼”,<br/>\n“malaysia”: “🇲🇾”,<br/>\n“maldives”: “🇲🇻”,<br/>\n“mali”: “🇲🇱”,<br/>\n“malta”: “🇲🇹”,<br/>\n“marshall_islands”: “🇲🇭”,<br/>\n“martinique”: “🇲🇶”,<br/>\n“mauritania”: “🇲🇷”,<br/>\n“mauritius”: “🇲🇺”,<br/>\n“mayotte”: “🇾🇹”,<br/>\n“mexico”: “🇲🇽”,<br/>\n“micronesia”: “🇫🇲”,<br/>\n“moldova”: “🇲🇩”,<br/>\n“monaco”: “🇲🇨”,<br/>\n“mongolia”: “🇲🇳”,<br/>\n“montenegro”: “🇲🇪”,<br/>\n“montserrat”: “🇲🇸”,<br/>\n“morocco”: “🇲🇦”,<br/>\n“mozambique”: “🇲🇿”,<br/>\n“myanmar”: “🇲🇲”,<br/>\n“namibia”: “🇳🇦”,<br/>\n“nauru”: “🇳🇷”,<br/>\n“nepal”: “🇳🇵”,<br/>\n“netherlands”: “🇳🇱”,<br/>\n“new_caledonia”: “🇳🇨”,<br/>\n“new_zealand”: “🇳🇿”,<br/>\n“nicaragua”: “🇳🇮”,<br/>\n“niger”: “🇳🇪”,<br/>\n“nigeria”: “🇳🇬”,<br/>\n“niue”: “🇳🇺”,<br/>\n“norfolk_island”: “🇳🇫”,<br/>\n“northern_mariana_islands”: “🇲🇵”,<br/>\n“north_korea”: “🇰🇵”,<br/>\n“norway”: “🇳🇴”,<br/>\n“oman”: “🇴🇲”,<br/>\n“pakistan”: “🇵🇰”,<br/>\n“palau”: “🇵🇼”,<br/>\n“palestinian_territories”: “🇵🇸”,<br/>\n“panama”: “🇵🇦”,<br/>\n“papua_new_guinea”: “🇵🇬”,<br/>\n“paraguay”: “🇵🇾”,<br/>\n“peru”: “🇵🇪”,<br/>\n“philippines”: “🇵🇭”,<br/>\n“pitcairn_islands”: “🇵🇳”,<br/>\n“poland”: “🇵🇱”,<br/>\n“portugal”: “🇵🇹”,<br/>\n“puerto_rico”: “🇵🇷”,<br/>\n“qatar”: “🇶🇦”,<br/>\n“reunion”: “🇷🇪”,<br/>\n“romania”: “🇷🇴”,<br/>\n“ru”: “🇷🇺”,<br/>\n“rwanda”: “🇷🇼”,<br/>\n“st_barthelemy”: “🇧🇱”,<br/>\n“st_helena”: “🇸🇭”,<br/>\n“st_kitts_nevis”: “🇰🇳”,<br/>\n“st_lucia”: “🇱🇨”,<br/>\n“st_pierre_miquelon”: “🇵🇲”,<br/>\n“st_vincent_grenadines”: “🇻🇨”,<br/>\n“samoa”: “🇼🇸”,<br/>\n“san_marino”: “🇸🇲”,<br/>\n“sao_tome_principe”: “🇸🇹”,<br/>\n“saudi_arabia”: “🇸🇦”,<br/>\n“senegal”: “🇸🇳”,<br/>\n“serbia”: “🇷🇸”,<br/>\n“seychelles”: “🇸🇨”,<br/>\n“sierra_leone”: “🇸🇱”,<br/>\n“singapore”: “🇸🇬”,<br/>\n“sint_maarten”: “🇸🇽”,<br/>\n“slovakia”: “🇸🇰”,<br/>\n“slovenia”: “🇸🇮”,<br/>\n“solomon_islands”: “🇸🇧”,<br/>\n“somalia”: “🇸🇴”,<br/>\n“south_africa”: “🇿🇦”,<br/>\n“south_georgia_south_sandwich_islands”: “🇬🇸”,<br/>\n“kr”: “🇰🇷”,<br/>\n“south_sudan”: “🇸🇸”,<br/>\n“es”: “🇪🇸”,<br/>\n“sri_lanka”: “🇱🇰”,<br/>\n“sudan”: “🇸🇩”,<br/>\n“suriname”: “🇸🇷”,<br/>\n“swaziland”: “🇸🇿”,<br/>\n“sweden”: “🇸🇪”,<br/>\n“switzerland”: “🇨🇭”,<br/>\n“syria”: “🇸🇾”,<br/>\n“taiwan”: “🇹🇼”,<br/>\n“tajikistan”: “🇹🇯”,<br/>\n“tanzania”: “🇹🇿”,<br/>\n“thailand”: “🇹🇭”,<br/>\n“timor_leste”: “🇹🇱”,<br/>\n“togo”: “🇹🇬”,<br/>\n“tokelau”: “🇹🇰”,<br/>\n“tonga”: “🇹🇴”,<br/>\n“trinidad_tobago”: “🇹🇹”,<br/>\n“tunisia”: “🇹🇳”,<br/>\n“tr”: “🇹🇷”,<br/>\n“turkmenistan”: “🇹🇲”,<br/>\n“turks_caicos_islands”: “🇹🇨”,<br/>\n“tuvalu”: “🇹🇻”,<br/>\n“uganda”: “🇺🇬”,<br/>\n“ukraine”: “🇺🇦”,<br/>\n“united_arab_emirates”: “🇦🇪”,<br/>\n“gb”: “🇬🇧”,<br/>\n“uk”: “🇬🇧”,<br/>\n“us”: “🇺🇸”,<br/>\n“us_virgin_islands”: “🇻🇮”,<br/>\n“uruguay”: “🇺🇾”,<br/>\n“uzbekistan”: “🇺🇿”,<br/>\n“vanuatu”: “🇻🇺”,<br/>\n“vatican_city”: “🇻🇦”,<br/>\n“venezuela”: “🇻🇪”,<br/>\n“vietnam”: “🇻🇳”,<br/>\n“wallis_futuna”: “🇼🇫”,<br/>\n“western_sahara”: “🇪🇭”,<br/>\n“yemen”: “🇾🇪”,<br/>\n“zambia”: “🇿🇲”,<br/>\n“zimbabwe”: “🇿🇼”\n","source":"_posts/MD编辑器就是不告诉你之表情.md","raw":"---\ntitle: MD编辑器就是不告诉你之表情\ndate: 2019-05-07 15:14:55\ntags: \n    - MD\ncategories: \n    - 大杂烩\ncover: https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=238832654,1207190021&fm=173&app=25&f=JPEG?w=640&h=348&s=F3B78B6411F23F8444DCFC860300E0EA\n---\nangry: [ ‘😠’, ‘😠’ ],\n\nblush: [ ‘😊’, ‘😊’ ],\n\nbroken_heart: [ ‘💔’, ‘💔’ ],\n\nconfused: [ ‘😕’, ‘😕’ ], \n\ncry: [ “:’(”, “:’-(”, ‘😢’, ‘😢’ ],\n\nfrowning: [ ‘😦’, ‘😦’ ],\n\nheart: [ ‘❤️’ ],\n\nimp: [ ‘👿’, ‘👿’ ],\n\ninnocent: [ ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’ ],\n\njoy: [ “:’)”, “:’-)”, ‘😂’, ‘😂’, “😂”, “:’-D”, ‘😂’, ‘😂’ ],\n\nkissing: [ ‘:’, ':-’ ],\n\nlaughing: [ ‘😆’, ‘😆’ ],\n\nneutral_face: [ ‘😐’, ‘😐’ ],\n\nopen_mouth: [ ‘😮’, ‘😮’, ‘😮’, ‘😮’ ],\n\nrage: [ ‘😡’, ‘😡’ ],\n\nsmile: [ ‘😄’, ‘😄’ ],\n\nsmiley: [ ‘😃’, ‘😃’ ],\n\nsmiling_imp: [ ‘😈’, ‘😈’ ],\n\nsob: [ “:,’(”, “:,’-(”, ‘😭’, ‘😭’ ],\n\nstuck_out_tongue: [ ‘😛’, ‘😛’ ],\n\nsunglasses: [ ‘😎’, ‘😎’ ],\n\nsweat: [ ‘😓’, ‘😓’ ],\n\nsweat_smile: [ ‘😅’, ‘😅’ ],\n\nunamused: [ ‘😒’, ‘😒’, ‘😒’, ‘😒’, ‘:′,′:− &#x27;, &#x27;:- \n′\n , \n′\n :−’ ],\n\nwink: [ ‘😉’, ‘😉’ ]\n\n“grinning”: “😀”,<br/>\n\n“smiley”: “😃”,<br/>\n\n“smile”: “😄”,<br/>\n\n“grin”: “😁”,<br/>\n\n“laughing”: “😆”,<br/>\n\n“satisfied”: “😆”,<br/>\n\n“sweat_smile”: “😅”,<br/>\n\n“joy”: “😂”,<br/>\n\n“blush”: “😊”,<br/>\n\n“innocent”: “😇”,<br/>\n\n“wink”: “😉”,<br/>\n\n“relieved”: “😌”,<br/>\n\n“heart_eyes”: “😍”,<br/>\n\n“kissing_heart”: “😘”,<br/>\n\n“kissing”: “😗”,<br/>\n\n“kissing_smiling_eyes”: “😙”,<br/>\n\n“kissing_closed_eyes”: “😚”,<br/>\n\n“yum”: “😋”,<br/>\n\n“stuck_out_tongue_winking_eye”: “😜”,<br/>\n\n“stuck_out_tongue_closed_eyes”: “😝”,<br/>\n\n“stuck_out_tongue”: “😛”,<br/>\n\n“sunglasses”: “😎”,<br/>\n\n“smirk”: “😏”,<br/>\n\n“unamused”: “😒”,<br/>\n\n“disappointed”: “😞”,<br/>\n\n“pensive”: “😔”,<br/>\n\n“worried”: “😟”,<br/>\n\n“confused”: “😕”,<br/>\n\n“persevere”: “😣”,<br/>\n\n“confounded”: “😖”,<br/>\n\n“tired_face”: “😫”,<br/>\n\n“weary”: “😩”,<br/>\n\n“angry”: “😠”,<br/>\n\n“rage”: “😡”,<br/>\n\n“pout”: “😡”,<br/>\n\n“no_mouth”: “😶”,<br/>\n\n“neutral_face”: “😐”,<br/>\n\n“expressionless”: “😑”,<br/>\n\n“hushed”: “😯”,<br/>\n\n“frowning”: “😦”,<br/>\n\n“anguished”: “😧”,<br/>\n\n“open_mouth”: “😮”,<br/>\n\n“astonished”: “😲”,<br/>\n\n“dizzy_face”: “😵”,<br/>\n\n“flushed”: “😳”,<br/>\n\n“scream”: “😱”,<br/>\n\n“fearful”: “😨”,<br/>\n\n“cold_sweat”: “😰”,<br/>\n\n“cry”: “😢”,<br/>\n\n“disappointed_relieved”: “😥”,<br/>\n\n“sob”: “😭”,<br/>\n\n“sweat”: “😓”,<br/>\n\n“sleepy”: “😪”,<br/>\n\n“sleeping”: “😴”,<br/>\n\n“mask”: “😷”,<br/>\n\n“smiling_imp”: “😈”,<br/>\n\n“smiley_cat”: “😺”,<br/>\n\n“smile_cat”: “😸”,<br/>\n\n“joy_cat”: “😹”,<br/>\n\n“heart_eyes_cat”: “😻”,<br/>\n\n“smirk_cat”: “😼”,<br/>\n\n“kissing_cat”: “😽”,<br/>\n\n“scream_cat”: “🙀”,<br/>\n\n“crying_cat_face”: “😿”,<br/>\n\n“pouting_cat”: “😾”,<br/>\n\n“fist_raised”: “✊”,<br/>\n\n“fist”: “✊”,<br/>\n\n“v”: “✌️”,<br/>\n\n“point_up”: “☝️”,<br/>\n\n“hand”: “✋”,<br/>\n\n“raised_hand”: “✋”,<br/>\n\n“cat”: “🐱”,<br/>\n\n“mouse”: “🐭”,<br/>\n\n“cow”: “🐮”,<br/>\n\n“monkey_face”: “🐵”,<br/>\n\n“star”: “⭐️”,<br/>\n\n“sparkles”: “✨”,<br/>\n\n“zap”: “⚡️”,<br/>\n\n“sunny”: “☀️”,<br/>\n\n“cloud”: “☁️”,<br/>\n\n“snowflake”: “❄️”,<br/>\n\n“umbrella”: “☔️”,<br/>\n\n“coffee”: “☕️”,<br/>\n\n“airplane”: “✈️”,<br/>\n\n“anchor”: “⚓️”,<br/>\n\n“watch”: “⌚️”,<br/>\n\n“phone”: “☎️”,<br/>\n\n“telephone”: “☎️”,<br/>\n\n“hourglass”: “⌛️”,<br/>\n\n“email”: “✉️”,<br/>\n\n“envelope”: “✉️”,<br/>\n\n“scissors”: “✂️”,<br/>\n\n“black_nib”: “✒️”,<br/>\n\n“pencil2”: “✏️”,<br/>\n\n“heart”: “❤️”,<br/>\n\n“aries”: “♈️”,<br/>\n\n“taurus”: “♉️”,<br/>\n\n“gemini”: “♊️”,<br/>\n\n“cancer”: “♋️”,<br/>\n\n“leo”: “♌️”,<br/>\n\n“virgo”: “♍️”,<br/>\n\n“libra”: “♎️”,<br/>\n\n“scorpius”: “♏️”,<br/>\n\n“sagittarius”: “♐️”,<br/>\n\n“capricorn”: “♑️”,<br/>\n\n“aquarius”: “♒️”,<br/>\n\n“pisces”: “♓️”,<br/>\n\n“eight_pointed_black_star”: “✴️”,<br/>\n\n“x”: “❌”,<br/>\n\n“hotsprings”: “♨️”,<br/>\n\n“exclamation”: “❗️”,<br/>\n\n“heavy_exclamation_mark”: “❗️”,<br/>\n\n“grey_exclamation”: “❕”,<br/>\n\n“question”: “❓”,<br/>\n\n“grey_question”: “❔”,<br/>\n\n“bangbang”: “‼️”,<br/>\n\n“interrobang”: “⁉️”,<br/>\n\n“part_alternation_mark”: “〽️”,<br/>\n\n“warning”: “⚠️”,<br/>\n\n“recycle”: “♻️”,<br/>\n\n“white_check_mark”: “✅”,<br/>\n\n“sparkle”: “❇️”,<br/>\n\n“eight_spoked_asterisk”: “✳️”,<br/>\n\n“negative_squared_cross_mark”: “❎”,<br/>\n\n“m”: “Ⓜ️”,<br/>\n\n“wheelchair”: “♿️”,<br/>\n\n“information_source”: “ℹ️”,<br/>\n\n“heavy_plus_sign”: “➕”,<br/>\n\n“heavy_minus_sign”: “➖”,<br/>\n\n“heavy_division_sign”: “➗”,<br/>\n\n“heavy_multiplication_x”: “✖️”,<br/>\n\n“tm”: “™️”,<br/>\n\n“copyright”: “©️”,<br/>\n\n“registered”: “®️”,<br/>\n\n“wavy_dash”: “〰️”,<br/>\n\n“curly_loop”: “➰”,<br/>\n\n“loop”: “➿”,<br/>\n\n“heavy_check_mark”: “✔️”,<br/>\n\n“ballot_box_with_check”: “☑️”,<br/>\n\n“white_circle”: “⚪️”,<br/>\n\n“black_circle”: “⚫️”,<br/>\n\n“black_small_square”: “▪️”,<br/>\n\n“white_small_square”: “▫️”,<br/>\n\n“black_medium_small_square”: “◾️”,<br/>\n\n“white_medium_small_square”: “◽️”,<br/>\n\n“black_medium_square”: “◼️”,<br/>\n\n“white_medium_square”: “◻️”,<br/>\n\n“black_large_square”: “⬛️”,<br/>\n\n“white_large_square”: “⬜️”,<br/>\n\n“black_joker”: “🃏”,<br/>\n\n“mahjong”: “🀄️”\n\n“100”: “💯”,<br/>\n\n“1234”: “🔢”,<br/>\n\n“grinning”: “😀”,<br/>\n\n“smiley”: “😃”,<br/>\n\n“smile”: “😄”,<br/>\n\n“grin”: “😁”,<br/>\n\n“laughing”: “😆”,<br/>\n\n“satisfied”: “😆”,<br/>\n\n“sweat_smile”: “😅”,<br/>\n\n“joy”: “😂”,<br/>\n\n“rofl”: “🤣”,<br/>\n\n“relaxed”: “☺️”,<br/>\n\n“blush”: “😊”,<br/>\n\n“innocent”: “😇”,<br/>\n\n“slightly_smiling_face”: “🙂”,<br/>\n\n“upside_down_face”: “🙃”,<br/>\n\n“wink”: “😉”,<br/>\n\n“relieved”: “😌”,<br/>\n\n“heart_eyes”: “😍”,<br/>\n\n“kissing_heart”: “😘”,<br/>\n\n“kissing”: “😗”,<br/>\n\n“kissing_smiling_eyes”: “😙”,<br/>\n\n“kissing_closed_eyes”: “😚”,<br/>\n\n“yum”: “😋”,<br/>\n\n“stuck_out_tongue_winking_eye”: “😜”,<br/>\n\n“stuck_out_tongue_closed_eyes”: “😝”,<br/>\n\n“stuck_out_tongue”: “😛”,<br/>\n\n“money_mouth_face”: “🤑”,<br/>\n\n“hugs”: “🤗”,<br/>\n\n“nerd_face”: “🤓”,<br/>\n\n“sunglasses”: “😎”,<br/>\n\n“clown_face”: “🤡”,<br/>\n\n“cowboy_hat_face”: “🤠”,<br/>\n\n“smirk”: “😏”,<br/>\n\n“unamused”: “😒”,<br/>\n\n“disappointed”: “😞”,<br/>\n\n“pensive”: “😔”,<br/>\n\n“worried”: “😟”,<br/>\n\n“confused”: “😕”,<br/>\n\n“slightly_frowning_face”: “🙁”,<br/>\n\n“frowning_face”: “☹️”,<br/>\n\n“persevere”: “😣”,<br/>\n\n“confounded”: “😖”,<br/>\n\n“tired_face”: “😫”,<br/>\n\n“weary”: “😩”,<br/>\n\n“triumph”: “😤”,<br/>\n\n“angry”: “😠”,<br/>\n\n“rage”: “😡”,<br/>\n\n“pout”: “😡”,<br/>\n\n“no_mouth”: “😶”,<br/>\n\n“neutral_face”: “😐”,<br/>\n\n“expressionless”: “😑”,<br/>\n\n“hushed”: “😯”,<br/>\n\n“frowning”: “😦”,<br/>\n\n“anguished”: “😧”,<br/>\n\n“open_mouth”: “😮”,<br/>\n\n“astonished”: “😲”,<br/>\n\n“dizzy_face”: “😵”,<br/>\n\n“flushed”: “😳”,<br/>\n\n“scream”: “😱”,<br/>\n\n“fearful”: “😨”,<br/>\n\n“cold_sweat”: “😰”,<br/>\n\n“cry”: “😢”,<br/>\n\n“disappointed_relieved”: “😥”,<br/>\n\n“drooling_face”: “🤤”,<br/>\n\n“sob”: “😭”,<br/>\n\n“sweat”: “😓”,<br/>\n\n“sleepy”: “😪”,<br/>\n\n“sleeping”: “😴”,<br/>\n\n“roll_eyes”: “🙄”,<br/>\n\n“thinking”: “🤔”,<br/>\n\n“lying_face”: “🤥”,<br/>\n\n“grimacing”: “😬”,<br/>\n\n“zipper_mouth_face”: “🤐”,<br/>\n\n“nauseated_face”: “🤢”,<br/>\n\n“sneezing_face”: “🤧”,<br/>\n\n“mask”: “😷”,<br/>\n\n“face_with_thermometer”: “🤒”,<br/>\n\n“face_with_head_bandage”: “🤕”,<br/>\n\n“smiling_imp”: “😈”,<br/>\n\n“imp”: “👿”,<br/>\n\n“japanese_ogre”: “👹”,<br/>\n\n“japanese_goblin”: “👺”,<br/>\n\n“hankey”: “💩”,<br/>\n\n“poop”: “💩”,<br/>\n\n“shit”: “💩”,<br/>\n\n“ghost”: “👻”,<br/>\n\n“skull”: “💀”,<br/>\n\n“skull_and_crossbones”: “☠️”,<br/>\n\n“alien”: “👽”,<br/>\n\n“space_invader”: “👾”,<br/>\n\n“robot”: “🤖”,<br/>\n\n“jack_o_lantern”: “🎃”,<br/>\n\n“smiley_cat”: “😺”,<br/>\n\n“smile_cat”: “😸”,<br/>\n\n“joy_cat”: “😹”,<br/>\n\n“heart_eyes_cat”: “😻”,<br/>\n\n“smirk_cat”: “😼”,<br/>\n\n“kissing_cat”: “😽”,<br/>\n\n“scream_cat”: “🙀”,<br/>\n\n“crying_cat_face”: “😿”,<br/>\n\n“pouting_cat”: “😾”,<br/>\n\n“open_hands”: “👐”,<br/>\n\n“raised_hands”: “🙌”,<br/>\n\n“clap”: “👏”,<br/>\n\n“pray”: “🙏”,<br/>\n\n“handshake”: “🤝”,<br/>\n\n“+1”: “👍”,<br/>\n\n“thumbsup”: “👍”,<br/>\n\n“-1”: “👎”,<br/>\n\n“thumbsdown”: “👎”,<br/>\n\n“fist_oncoming”: “👊”,<br/>\n\n“facepunch”: “👊”,<br/>\n\n“punch”: “👊”,<br/>\n\n“fist_raised”: “✊”,<br/>\n\n“fist”: “✊”,<br/>\n\n“fist_left”: “🤛”,<br/>\n\n“fist_right”: “🤜”,<br/>\n\n“crossed_fingers”: “🤞”,<br/>\n\n“v”: “✌️”,<br/>\n\n“metal”: “🤘”,<br/>\n\n“ok_hand”: “👌”,<br/>\n\n“point_left”: “👈”,<br/>\n\n“point_right”: “👉”,<br/>\n\n“point_up_2”: “👆”,<br/>\n\n“point_down”: “👇”,<br/>\n\n“point_up”: “☝️”,<br/>\n\n“hand”: “✋”,<br/>\n\n“raised_hand”: “✋”,<br/>\n\n“raised_back_of_hand”: “🤚”,<br/>\n\n“raised_hand_with_fingers_splayed”: “🖐”,<br/>\n\n“vulcan_salute”: “🖖”,<br/>\n\n“wave”: “👋”,<br/>\n\n“call_me_hand”: “🤙”,<br/>\n\n“muscle”: “💪”,<br/>\n\n“middle_finger”: “🖕”,<br/>\n\n“fu”: “🖕”,<br/>\n\n“writing_hand”: “✍️”,<br/>\n\n“selfie”: “🤳”,<br/>\n\n“nail_care”: “💅”,<br/>\n\n“ring”: “💍”,<br/>\n\n“lipstick”: “💄”,<br/>\n\n“kiss”: “💋”,<br/>\n\n“lips”: “👄”,<br/>\n\n“tongue”: “👅”,<br/>\n\n“ear”: “👂”,<br/>\n\n“nose”: “👃”,<br/>\n\n“footprints”: “👣”,<br/>\n\n“eye”: “👁”,<br/>\n\n“eyes”: “👀”,<br/>\n\n“speaking_head”: “🗣”,<br/>\n\n“bust_in_silhouette”: “👤”,<br/>\n\n“busts_in_silhouette”: “👥”,<br/>\n\n“baby”: “👶”,<br/>\n\n“boy”: “👦”,<br/>\n\n“girl”: “👧”,<br/>\n\n“man”: “👨”,<br/>\n\n“woman”: “👩”,<br/>\n\n“blonde_woman”: “👱‍♀”,<br/>\n\n“blonde_man”: “👱”,<br/>\n\n“person_with_blond_hair”: “👱”,<br/>\n\n“older_man”: “👴”,<br/>\n\n“older_woman”: “👵”,<br/>\n\n“man_with_gua_pi_mao”: “👲”,<br/>\n\n“woman_with_turban”: “👳‍♀”,<br/>\n\n“man_with_turban”: “👳”,<br/>\n\n“policewoman”: “👮‍♀”,<br/>\n\n“policeman”: “👮”,<br/>\n\n“cop”: “👮”,<br/>\n\n“construction_worker_woman”: “👷‍♀”,<br/>\n\n“construction_worker_man”: “👷”,<br/>\n\n“construction_worker”: “👷”,<br/>\n\n“guardswoman”: “💂‍♀”,<br/>\n\n“guardsman”: “💂”,<br/>\n\n“female_detective”: “🕵️‍♀️”,<br/>\n\n“male_detective”: “🕵”,<br/>\n\n“detective”: “🕵”,<br/>\n\n“woman_health_worker”: “👩‍⚕”,<br/>\n\n“man_health_worker”: “👨‍⚕”,<br/>\n\n“woman_farmer”: “👩‍🌾”,<br/>\n\n“man_farmer”: “👨‍🌾”,<br/>\n\n“woman_cook”: “👩‍🍳”,<br/>\n\n“man_cook”: “👨‍🍳”,<br/>\n\n“woman_student”: “👩‍🎓”,<br/>\n\n“man_student”: “👨‍🎓”,<br/>\n\n“woman_singer”: “👩‍🎤”,<br/>\n\n“man_singer”: “👨‍🎤”,<br/>\n\n“woman_teacher”: “👩‍🏫”,<br/>\n\n“man_teacher”: “👨‍🏫”,<br/>\n\n“woman_factory_worker”: “👩‍🏭”,<br/>\n\n“man_factory_worker”: “👨‍🏭”,<br/>\n\n\n“woman_technologist”: “👩‍💻”,<br/>\n\n“man_technologist”: “👨‍💻”,<br/>\n\n“woman_office_worker”: “👩‍💼”,<br/>\n\n“man_office_worker”: “👨‍💼”,<br/>\n\n\n“woman_mechanic”: “👩‍🔧”,<br/>\n\n“man_mechanic”: “👨‍🔧”,<br/>\n\n“woman_scientist”: “👩‍🔬”,<br/>\n\n“man_scientist”: “👨‍🔬”,<br/>\n\n“woman_artist”: “👩‍🎨”,<br/>\n\n“man_artist”: “👨‍🎨”,<br/>\n\n“woman_firefighter”: “👩‍🚒”,<br/>\n\n“man_firefighter”: “👨‍🚒”,<br/>\n\n“woman_pilot”: “👩‍✈”,<br/>\n\n“man_pilot”: “👨‍✈”,<br/>\n\n“woman_astronaut”: “👩‍🚀”,<br/>\n\n“man_astronaut”: “👨‍🚀”,<br/>\n\n“woman_judge”: “👩‍⚖”,<br/>\n\n“man_judge”: “👨‍⚖”,<br/>\n\n“mrs_claus”: “🤶”,<br/>\n\n“santa”: “🎅”,<br/>\n\n“princess”: “👸”,<br/>\n\n“prince”: “🤴”,<br/>\n\n“bride_with_veil”: “👰”,<br/>\n\n“man_in_tuxedo”: “🤵”,<br/>\n\n“angel”: “👼”,<br/>\n\n“pregnant_woman”: “🤰”,<br/>\n\n“bowing_woman”: “🙇‍♀”,<br/>\n\n“bowing_man”: “🙇”,<br/>\n\n“bow”: “🙇”,<br/>\n\n“tipping_hand_woman”: “💁”,<br/>\n\n“information_desk_person”: “💁”,<br/>\n\n“sassy_woman”: “💁”,<br/>\n\n“tipping_hand_man”: “💁‍♂”,<br/>\n\n“sassy_man”: “💁‍♂”,<br/>\n\n“no_good_woman”: “🙅”,<br/>\n\n“no_good”: “🙅”,<br/>\n\n“ng_woman”: “🙅”,<br/>\n\n“no_good_man”: “🙅‍♂”,<br/>\n\n“ng_man”: “🙅‍♂”,<br/>\n\n“ok_woman”: “🙆”,<br/>\n\n“ok_man”: “🙆‍♂”,<br/>\n\n“raising_hand_woman”: “🙋”,<br/>\n\n“raising_hand”: “🙋”,<br/>\n\n“raising_hand_man”: “🙋‍♂”,<br/>\n\n“woman_facepalming”: “🤦‍♀”,<br/>\n\n“man_facepalming”: “🤦‍♂”,<br/>\n\n“woman_shrugging”: “🤷‍♀”,<br/>\n\n“man_shrugging”: “🤷‍♂”,<br/>\n\n“pouting_woman”: “🙎”,<br/>\n\n“person_with_pouting_face”: “🙎”,<br/>\n\n“pouting_man”: “🙎‍♂”,<br/>\n\n“frowning_woman”: “🙍”,<br/>\n\n“person_frowning”: “🙍”,<br/>\n\n“frowning_man”: “🙍‍♂”,<br/>\n\n“haircut_woman”: “💇”,<br/>\n\n“haircut”: “💇”,<br/>\n\n“haircut_man”: “💇‍♂”,<br/>\n\n“massage_woman”: “💆”,<br/>\n\n“massage”: “💆”,<br/>\n\n“massage_man”: “💆‍♂”,<br/>\n\n“business_suit_levitating”: “🕴”,<br/>\n\n“dancer”: “💃”,<br/>\n\n“man_dancing”: “🕺”,<br/>\n\n“dancing_women”: “👯”,<br/>\n\n“dancers”: “👯”,<br/>\n\n“dancing_men”: “👯‍♂”,<br/>\n\n“walking_woman”: “🚶‍♀”,<br/>\n\n“walking_man”: “🚶”,<br/>\n\n“walking”: “🚶”,<br/>\n\n“running_woman”: “🏃‍♀”,<br/>\n\n“running_man”: “🏃”,<br/>\n\n“runner”: “🏃”,<br/>\n\n“running”: “🏃”,<br/>\n\n“couple”: “👫”,<br/>\n\n“two_women_holding_hands”: “👭”,<br/>\n\n“two_men_holding_hands”: “👬”,<br/>\n\n“couple_with_heart_woman_man”: “💑”,<br/>\n\n“couple_with_heart”: “💑”,<br/>\n\n“couple_with_heart_woman_woman”: “👩‍❤️‍👩”,<br/>\n\n“couple_with_heart_man_man”: “👨‍❤️‍👨”,<br/>\n\n“couplekiss_man_woman”: “💏”,<br/>\n\n“couplekiss_woman_woman”: “👩‍❤️‍💋‍👩”,<br/>\n\n“couplekiss_man_man”: “👨‍❤️‍💋‍👨”,<br/>\n\n“family_man_woman_boy”: “👪”,<br/>\n\n“family”: “👪”,<br/>\n\n“family_man_woman_girl”: “👨‍👩‍👧”,<br/>\n\n“family_man_woman_girl_boy”: “👨‍👩‍👧‍👦”,<br/>\n\n“family_man_woman_boy_boy”: “👨‍👩‍👦‍👦”,<br/>\n\n“family_man_woman_girl_girl”: “👨‍👩‍👧‍👧”,<br/>\n\n“family_woman_woman_boy”: “👩‍👩‍👦”,<br/>\n\n“family_woman_woman_girl”: “👩‍👩‍👧”,<br/>\n\n“family_woman_woman_girl_boy”: “👩‍👩‍👧‍👦”,<br/>\n\n“family_woman_woman_boy_boy”: “👩‍👩‍👦‍👦”,<br/>\n\n“family_woman_woman_girl_girl”: “👩‍👩‍👧‍👧”,<br/>\n\n“family_man_man_boy”: “👨‍👨‍👦”,<br/>\n\n“family_man_man_girl”: “👨‍👨‍👧”,<br/>\n\n“family_man_man_girl_boy”: “👨‍👨‍👧‍👦”,<br/>\n\n“family_man_man_boy_boy”: “👨‍👨‍👦‍👦”,<br/>\n\n“family_man_man_girl_girl”: “👨‍👨‍👧‍👧”,<br/>\n\n“family_woman_boy”: “👩‍👦”,<br/>\n\n\n“family_woman_girl”: “👩‍👧”,<br/>\n\n“family_woman_girl_boy”: “👩‍👧‍👦”,<br/>\n\n“family_woman_boy_boy”: “👩‍👦‍👦”,<br/>\n\n\n“family_woman_girl_girl”: “👩‍👧‍👧”,<br/>\n\n“family_man_boy”: “👨‍👦”,<br/>\n\n“family_man_girl”: “👨‍👧”,<br/>\n\n“family_man_girl_boy”: “👨‍👧‍👦”,<br/>\n\n“family_man_boy_boy”: “👨‍👦‍👦”,<br/>\n\n“family_man_girl_girl”: “👨‍👧‍👧”,<br/>\n\n“womans_clothes”: “👚”,<br/>\n\n“shirt”: “👕”,<br/>\n\n“tshirt”: “👕”,<br/>\n\n“jeans”: “👖”,<br/>\n\n“necktie”: “👔”,<br/>\n\n“dress”: “👗”,<br/>\n\n“bikini”: “👙”,<br/>\n\n“kimono”: “👘”,<br/>\n\n“high_heel”: “👠”,<br/>\n\n“sandal”: “👡”,<br/>\n\n“boot”: “👢”,<br/>\n\n“mans_shoe”: “👞”,<br/>\n\n“shoe”: “👞”,<br/>\n\n“athletic_shoe”: “👟”,<br/>\n\n“womans_hat”: “👒”,<br/>\n\n“tophat”: “🎩”,<br/>\n\n“mortar_board”: “🎓”,<br/>\n\n“crown”: “👑”,<br/>\n\n“rescue_worker_helmet”: “⛑”,<br/>\n\n“school_satchel”: “🎒”,<br/>\n\n“pouch”: “👝”,<br/>\n\n“purse”: “👛”,<br/>\n\n“handbag”: “👜”,<br/>\n\n“briefcase”: “💼”,<br/>\n\n\n“eyeglasses”: “👓”,<br/>\n\n“dark_sunglasses”: “🕶”,<br/>\n\n“closed_umbrella”: “🌂”,<br/>\n\n“open_umbrella”: “☂️”,<br/>\n\n“dog”: “🐶”,<br/>\n\n“cat”: “🐱”,<br/>\n\n\n“mouse”: “🐭”,<br/>\n\n“hamster”: “🐹”,<br/>\n\n“rabbit”: “🐰”,<br/>\n\n“fox_face”: “🦊”,<br/>\n\n“bear”: “🐻”,<br/>\n\n“panda_face”: “🐼”,<br/>\n\n“koala”: “🐨”,<br/>\n\n“tiger”: “🐯”,<br/>\n\n“lion”: “🦁”,<br/>\n\n“cow”: “🐮”,<br/>\n\n“pig”: “🐷”,<br/>\n\n“pig_nose”: “🐽”,<br/>\n\n“frog”: “🐸”,<br/>\n\n“monkey_face”: “🐵”,<br/>\n\n“see_no_evil”: “🙈”,<br/>\n\n“hear_no_evil”: “🙉”,<br/>\n\n“speak_no_evil”: “🙊”,<br/>\n\n“monkey”: “🐒”,<br/>\n\n“chicken”: “🐔”,<br/>\n\n“penguin”: “🐧”,<br/>\n\n“bird”: “🐦”,<br/>\n\n“baby_chick”: “🐤”,<br/>\n\n“hatching_chick”: “🐣”,<br/>\n\n“hatched_chick”: “🐥”,<br/>\n\n“duck”: “🦆”,<br/>\n\n“eagle”: “🦅”,<br/>\n\n“owl”: “🦉”,<br/>\n\n“bat”: “🦇”,<br/>\n\n“wolf”: “🐺”,<br/>\n\n“boar”: “🐗”,<br/>\n\n“horse”: “🐴”,<br/>\n\n“unicorn”: “🦄”,<br/>\n\n“bee”: “🐝”,<br/>\n\n“honeybee”: “🐝”,<br/>\n\n“bug”: “🐛”,<br/>\n\n“butterfly”: “🦋”,<br/>\n\n“snail”: “🐌”,<br/>\n\n“shell”: “🐚”,<br/>\n\n“beetle”: “🐞”,<br/>\n\n“ant”: “🐜”,<br/>\n\n“spider”: “🕷”,<br/>\n\n“spider_web”: “🕸”,<br/>\n\n“turtle”: “🐢”,<br/>\n\n“snake”: “🐍”,<br/>\n\n“lizard”: “🦎”,<br/>\n\n“scorpion”: “🦂”,<br/>\n\n“crab”: “🦀”,<br/>\n\n“squid”: “🦑”,<br/>\n\n“octopus”: “🐙”,<br/>\n\n“shrimp”: “🦐”,<br/>\n\n“tropical_fish”: “🐠”,<br/>\n\n“fish”: “🐟”,<br/>\n\n“blowfish”: “🐡”,<br/>\n\n“dolphin”: “🐬”,<br/>\n\n“flipper”: “🐬”,<br/>\n\n“shark”: “🦈”,<br/>\n\n“whale”: “🐳”,<br/>\n\n“whale2”: “🐋”,<br/>\n\n“crocodile”: “🐊”,<br/>\n\n“leopard”: “🐆”,<br/>\n\n“tiger2”: “🐅”,<br/>\n\n“water_buffalo”: “🐃”,<br/>\n\n“ox”: “🐂”,<br/>\n\n“cow2”: “🐄”,<br/>\n\n“deer”: “🦌”,<br/>\n\n\n“dromedary_camel”: “🐪”,<br/>\n\n“camel”: “🐫”,<br/>\n\n“elephant”: “🐘”,<br/>\n\n“rhinoceros”: “🦏”,<br/>\n\n“gorilla”: “🦍”,<br/>\n\n“racehorse”: “🐎”,<br/>\n\n“pig2”: “🐖”,<br/>\n\n“goat”: “🐐”,<br/>\n\n“ram”: “🐏”,<br/>\n\n“sheep”: “🐑”,<br/>\n\n“dog2”: “🐕”,<br/>\n\n“poodle”: “🐩”,<br/>\n\n“cat2”: “🐈”,<br/>\n\n“rooster”: “🐓”,<br/>\n\n“turkey”: “🦃”,<br/>\n\n“dove”: “🕊”,<br/>\n\n“rabbit2”: “🐇”,<br/>\n\n“mouse2”: “🐁”,<br/>\n\n“rat”: “🐀”,<br/>\n\n\n“chipmunk”: “🐿”,<br/>\n\n“feet”: “🐾”,<br/>\n\n“paw_prints”: “🐾”,<br/>\n\n“dragon”: “🐉”,<br/>\n\n“dragon_face”: “🐲”,<br/>\n\n“cactus”: “🌵”,<br/>\n\n“christmas_tree”: “🎄”,<br/>\n\n“evergreen_tree”: “🌲”,<br/>\n\n“deciduous_tree”: “🌳”,<br/>\n\n“palm_tree”: “🌴”,<br/>\n\n“seedling”: “🌱”,<br/>\n\n“herb”: “🌿”,<br/>\n\n“shamrock”: “☘️”,<br/>\n\n“four_leaf_clover”: “🍀”,<br/>\n\n“bamboo”: “🎍”,<br/>\n\n“tanabata_tree”: “🎋”,<br/>\n\n“leaves”: “🍃”,<br/>\n\n“fallen_leaf”: “🍂”,<br/>\n\n“maple_leaf”: “🍁”,<br/>\n\n“mushroom”: “🍄”,<br/>\n\n“ear_of_rice”: “🌾”,<br/>\n\n“bouquet”: “💐”,<br/>\n\n“tulip”: “🌷”,<br/>\n\n“rose”: “🌹”,<br/>\n\n“wilted_flower”: “🥀”,<br/>\n\n“sunflower”: “🌻”,<br/>\n\n“blossom”: “🌼”,<br/>\n\n“cherry_blossom”: “🌸”,<br/>\n\n“hibiscus”: “🌺”,<br/>\n\n“earth_americas”: “🌎”,<br/>\n\n“earth_africa”: “🌍”,<br/>\n\n“earth_asia”: “🌏”,<br/>\n\n“full_moon”: “🌕”,<br/>\n\n“waning_gibbous_moon”: “🌖”,<br/>\n\n“last_quarter_moon”: “🌗”,<br/>\n\n“waning_crescent_moon”: “🌘”,<br/>\n\n“new_moon”: “🌑”,<br/>\n\n“waxing_crescent_moon”: “🌒”,<br/>\n\n“first_quarter_moon”: “🌓”,<br/>\n\n“moon”: “🌔”,<br/>\n\n“waxing_gibbous_moon”: “🌔”,<br/>\n\n“new_moon_with_face”: “🌚”,<br/>\n\n\n“full_moon_with_face”: “🌝”,<br/>\n\n“sun_with_face”: “🌞”,<br/>\n\n“first_quarter_moon_with_face”: “🌛”,<br/>\n\n“last_quarter_moon_with_face”: “🌜”,<br/>\n\n“crescent_moon”: “🌙”,<br/>\n\n“dizzy”: “💫”,<br/>\n\n“star”: “⭐️”,<br/>\n\n“star2”: “🌟”,<br/>\n\n“sparkles”: “✨”,<br/>\n\n“zap”: “⚡️”,<br/>\n\n“fire”: “🔥”,<br/>\n\n“boom”: “💥”,<br/>\n\n“collision”: “💥”,<br/>\n\n“comet”: “☄”,<br/>\n\n“sunny”: “☀️”,<br/>\n\n“sun_behind_small_cloud”: “🌤”,<br/>\n\n“partly_sunny”: “⛅️”,<br/>\n\n“sun_behind_large_cloud”: “🌥”,<br/>\n\n“sun_behind_rain_cloud”: “🌦”,<br/>\n\n“rainbow”: “🌈”,<br/>\n\n“cloud”: “☁️”,<br/>\n\n“cloud_with_rain”: “🌧”,<br/>\n\n“cloud_with_lightning_and_rain”: “⛈”,<br/>\n\n“cloud_with_lightning”: “🌩”,<br/>\n\n“cloud_with_snow”: “🌨”,<br/>\n\n“snowman_with_snow”: “☃️”,<br/>\n\n“snowman”: “⛄️”,<br/>\n\n“snowflake”: “❄️”,<br/>\n\n“wind_face”: “🌬”,<br/>\n\n“dash”: “💨”,<br/>\n\n“tornado”: “🌪”,<br/>\n\n“fog”: “🌫”,<br/>\n\n“ocean”: “🌊”,<br/>\n\n“droplet”: “💧”,<br/>\n\n“sweat_drops”: “💦”,<br/>\n\n“umbrella”: “☔️”,<br/>\n\n“green_apple”: “🍏”,<br/>\n\n“apple”: “🍎”,<br/>\n\n“pear”: “🍐”,<br/>\n\n“tangerine”: “🍊”,<br/>\n\n“orange”: “🍊”,<br/>\n\n“mandarin”: “🍊”,<br/>\n\n\n“lemon”: “🍋”,<br/>\n\n“banana”: “🍌”,<br/>\n\n“watermelon”: “🍉”,<br/>\n\n\n“grapes”: “🍇”,<br/>\n\n“strawberry”: “🍓”,<br/>\n\n“melon”: “🍈”,<br/>\n\n“cherries”: “🍒”,<br/>\n\n“peach”: “🍑”,<br/>\n\n“pineapple”: “🍍”,<br/>\n\n\n“kiwi_fruit”: “🥝”,<br/>\n\n“avocado”: “🥑”,<br/>\n\n“tomato”: “🍅”,<br/>\n\n“eggplant”: “🍆”,<br/>\n\n“cucumber”: “🥒”,<br/>\n\n“carrot”: “🥕”,<br/>\n\n“corn”: “🌽”,<br/>\n\n“hot_pepper”: “🌶”,<br/>\n\n“potato”: “🥔”,<br/>\n\n“sweet_potato”: “🍠”,<br/>\n\n“chestnut”: “🌰”,<br/>\n\n“peanuts”: “🥜”,<br/>\n\n“honey_pot”: “🍯”,<br/>\n\n“croissant”: “🥐”,<br/>\n\n“bread”: “🍞”,<br/>\n\n“baguette_bread”: “🥖”,<br/>\n\n“cheese”: “🧀”,<br/>\n\n“egg”: “🥚”,<br/>\n\n“fried_egg”: “🍳”,<br/>\n\n“bacon”: “🥓”,<br/>\n\n“pancakes”: “🥞”,<br/>\n\n“fried_shrimp”: “🍤”,<br/>\n\n“poultry_leg”: “🍗”,<br/>\n\n“meat_on_bone”: “🍖”,<br/>\n\n“pizza”: “🍕”,<br/>\n\n“hotdog”: “🌭”,<br/>\n\n“hamburger”: “🍔”,<br/>\n\n“fries”: “🍟”,<br/>\n\n“stuffed_flatbread”: “🥙”,<br/>\n\n“taco”: “🌮”,<br/>\n\n“burrito”: “🌯”,<br/>\n\n“green_salad”: “🥗”,<br/>\n\n“shallow_pan_of_food”: “🥘”,<br/>\n\n“spaghetti”: “🍝”,<br/>\n\n“ramen”: “🍜”,<br/>\n\n“stew”: “🍲”,<br/>\n\n“fish_cake”: “🍥”,<br/>\n\n“sushi”: “🍣”,<br/>\n\n“bento”: “🍱”,<br/>\n\n“curry”: “🍛”,<br/>\n\n“rice”: “🍚”,<br/>\n\n\n“rice_ball”: “🍙”,<br/>\n\n“rice_cracker”: “🍘”,<br/>\n\n“oden”: “🍢”,<br/>\n\n“dango”: “🍡”,<br/>\n\n“shaved_ice”: “🍧”,<br/>\n\n“ice_cream”: “🍨”,<br/>\n\n“icecream”: “🍦”,<br/>\n\n“cake”: “🍰”,<br/>\n\n“birthday”: “🎂”,<br/>\n\n“custard”: “🍮”,<br/>\n\n“lollipop”: “🍭”,<br/>\n\n“candy”: “🍬”,<br/>\n\n“chocolate_bar”: “🍫”,<br/>\n\n“popcorn”: “🍿”,<br/>\n\n“doughnut”: “🍩”,<br/>\n\n“cookie”: “🍪”,<br/>\n\n“milk_glass”: “🥛”,<br/>\n\n“baby_bottle”: “🍼”,<br/>\n\n“coffee”: “☕️”,<br/>\n\n“tea”: “🍵”,<br/>\n\n\n“sake”: “🍶”,<br/>\n\n“beer”: “🍺”,<br/>\n\n“beers”: “🍻”,<br/>\n\n“clinking_glasses”: “🥂”,<br/>\n\n“wine_glass”: “🍷”,<br/>\n\n“tumbler_glass”: “🥃”,<br/>\n\n“cocktail”: “🍸”,<br/>\n\n“tropical_drink”: “🍹”,<br/>\n\n“champagne”: “🍾”,<br/>\n\n“spoon”: “🥄”,<br/>\n\n“fork_and_knife”: “🍴”,<br/>\n\n“plate_with_cutlery”: “🍽”,<br/>\n\n“soccer”: “⚽️”,<br/>\n\n“basketball”: “🏀”,<br/>\n\n“football”: “🏈”,<br/>\n\n“baseball”: “⚾️”,<br/>\n\n“tennis”: “🎾”,<br/>\n\n“volleyball”: “🏐”,<br/>\n\n“rugby_football”: “🏉”,<br/>\n\n“8ball”: “🎱”,<br/>\n\n“ping_pong”: “🏓”,<br/>\n\n“badminton”: “🏸”,<br/>\n\n“goal_net”: “🥅”,<br/>\n\n“ice_hockey”: “🏒”,<br/>\n\n“field_hockey”: “🏑”,<br/>\n\n“cricket”: “🏏”,<br/>\n\n“golf”: “⛳️”,<br/>\n\n“bow_and_arrow”: “🏹”,<br/>\n\n“fishing_pole_and_fish”: “🎣”,<br/>\n\n“boxing_glove”: “🥊”,<br/>\n\n“martial_arts_uniform”: “🥋”,<br/>\n\n“ice_skate”: “⛸”,<br/>\n\n“ski”: “🎿”,<br/>\n\n“skier”: “⛷”,<br/>\n\n“snowboarder”: “🏂”,<br/>\n\n“weight_lifting_woman”: “🏋️‍♀️”,<br/>\n\n“weight_lifting_man”: “🏋”,<br/>\n\n“person_fencing”: “🤺”,<br/>\n\n“women_wrestling”: “🤼‍♀”,<br/>\n\n“men_wrestling”: “🤼‍♂”,<br/>\n\n“woman_cartwheeling”: “🤸‍♀”,<br/>\n\n“man_cartwheeling”: “🤸‍♂”,<br/>\n\n“basketball_woman”: “⛹️‍♀️”,<br/>\n\n\n“basketball_man”: “⛹”,<br/>\n\n“woman_playing_handball”: “🤾‍♀”,<br/>\n\n“man_playing_handball”: “🤾‍♂”,<br/>\n\n“golfing_woman”: “🏌️‍♀️”,<br/>\n\n“golfing_man”: “🏌”,<br/>\n\n“surfing_woman”: “🏄‍♀”,<br/>\n\n“surfing_man”: “🏄”,<br/>\n\n“surfer”: “🏄”,<br/>\n\n“swimming_woman”: “🏊‍♀”,<br/>\n\n“swimming_man”: “🏊”,<br/>\n\n“swimmer”: “🏊”,<br/>\n“woman_playing_water_polo”: “🤽‍♀”,<br/>\n“man_playing_water_polo”: “🤽‍♂”,<br/>\n“rowing_woman”: “🚣‍♀”,<br/>\n“rowing_man”: “🚣”,<br/>\n“rowboat”: “🚣”,<br/>\n“horse_racing”: “🏇”,<br/>\n“biking_woman”: “🚴‍♀”,<br/>\n“biking_man”: “🚴”,<br/>\n“bicyclist”: “🚴”,<br/>\n“mountain_biking_woman”: “🚵‍♀”,<br/>\n“mountain_biking_man”: “🚵”,<br/>\n“mountain_bicyclist”: “🚵”,<br/>\n“running_shirt_with_sash”: “🎽”,<br/>\n“medal_sports”: “🏅”,<br/>\n“medal_military”: “🎖”,<br/>\n“1st_place_medal”: “🥇”,<br/>\n“2nd_place_medal”: “🥈”,<br/>\n“3rd_place_medal”: “🥉”,<br/>\n“trophy”: “🏆”,<br/>\n“rosette”: “🏵”,<br/>\n“reminder_ribbon”: “🎗”,<br/>\n“ticket”: “🎫”,<br/>\n“tickets”: “🎟”,<br/>\n“circus_tent”: “🎪”,<br/>\n“woman_juggling”: “🤹‍♀”,<br/>\n“man_juggling”: “🤹‍♂”,<br/>\n“performing_arts”: “🎭”,<br/>\n“art”: “🎨”,<br/>\n“clapper”: “🎬”,<br/>\n“microphone”: “🎤”,<br/>\n“headphones”: “🎧”,<br/>\n“musical_score”: “🎼”,<br/>\n“musical_keyboard”: “🎹”,<br/>\n“drum”: “🥁”,<br/>\n“saxophone”: “🎷”,<br/>\n“trumpet”: “🎺”,<br/>\n“guitar”: “🎸”,<br/>\n“violin”: “🎻”,<br/>\n“game_die”: “🎲”,<br/>\n“dart”: “🎯”,<br/>\n“bowling”: “🎳”,<br/>\n“video_game”: “🎮”,<br/>\n“slot_machine”: “🎰”,<br/>\n“car”: “🚗”,<br/>\n“red_car”: “🚗”,<br/>\n“taxi”: “🚕”,<br/>\n“blue_car”: “🚙”,<br/>\n“bus”: “🚌”,<br/>\n“trolleybus”: “🚎”,<br/>\n“racing_car”: “🏎”,<br/>\n“police_car”: “🚓”,<br/>\n“ambulance”: “🚑”,<br/>\n“fire_engine”: “🚒”,<br/>\n“minibus”: “🚐”,<br/>\n“truck”: “🚚”,<br/>\n“articulated_lorry”: “🚛”,<br/>\n“tractor”: “🚜”,<br/>\n“kick_scooter”: “🛴”,<br/>\n“bike”: “🚲”,<br/>\n“motor_scooter”: “🛵”,<br/>\n“motorcycle”: “🏍”,<br/>\n“rotating_light”: “🚨”,<br/>\n“oncoming_police_car”: “🚔”,<br/>\n“oncoming_bus”: “🚍”,<br/>\n“oncoming_automobile”: “🚘”,<br/>\n“oncoming_taxi”: “🚖”,<br/>\n“aerial_tramway”: “🚡”,<br/>\n“mountain_cableway”: “🚠”,<br/>\n“suspension_railway”: “🚟”,<br/>\n“railway_car”: “🚃”,<br/>\n“train”: “🚋”,<br/>\n“mountain_railway”: “🚞”,<br/>\n“monorail”: “🚝”,<br/>\n“bullettrain_side”: “🚄”,<br/>\n“bullettrain_front”: “🚅”,<br/>\n“light_rail”: “🚈”,<br/>\n“steam_locomotive”: “🚂”,<br/>\n“train2”: “🚆”,<br/>\n“metro”: “🚇”,<br/>\n“tram”: “🚊”,<br/>\n“station”: “🚉”,<br/>\n“helicopter”: “🚁”,<br/>\n“small_airplane”: “🛩”,<br/>\n“airplane”: “✈️”,<br/>\n“flight_departure”: “🛫”,<br/>\n“flight_arrival”: “🛬”,<br/>\n“rocket”: “🚀”,<br/>\n“artificial_satellite”: “🛰”,<br/>\n“seat”: “💺”,<br/>\n“canoe”: “🛶”,<br/>\n“boat”: “⛵️”,<br/>\n“sailboat”: “⛵️”,<br/>\n“motor_boat”: “🛥”,<br/>\n“speedboat”: “🚤”,<br/>\n“passenger_ship”: “🛳”,<br/>\n“ferry”: “⛴”,<br/>\n“ship”: “🚢”,<br/>\n“anchor”: “⚓️”,<br/>\n“construction”: “🚧”,<br/>\n“fuelpump”: “⛽️”,<br/>\n“busstop”: “🚏”,<br/>\n“vertical_traffic_light”: “🚦”,<br/>\n“traffic_light”: “🚥”,<br/>\n“world_map”: “🗺”,<br/>\n“moyai”: “🗿”,<br/>\n“statue_of_liberty”: “🗽”,<br/>\n“fountain”: “⛲️”,<br/>\n“tokyo_tower”: “🗼”,<br/>\n“european_castle”: “🏰”,<br/>\n“japanese_castle”: “🏯”,<br/>\n“stadium”: “🏟”,<br/>\n“ferris_wheel”: “🎡”,<br/>\n“roller_coaster”: “🎢”,<br/>\n“carousel_horse”: “🎠”,<br/>\n“parasol_on_ground”: “⛱”,<br/>\n“beach_umbrella”: “🏖”,<br/>\n“desert_island”: “🏝”,<br/>\n“mountain”: “⛰”,<br/>\n“mountain_snow”: “🏔”,<br/>\n“mount_fuji”: “🗻”,<br/>\n“volcano”: “🌋”,<br/>\n“desert”: “🏜”,<br/>\n“camping”: “🏕”,<br/>\n“tent”: “⛺️”,<br/>\n“railway_track”: “🛤”,<br/>\n“motorway”: “🛣”,<br/>\n“building_construction”: “🏗”,<br/>\n“factory”: “🏭”,<br/>\n“house”: “🏠”,<br/>\n“house_with_garden”: “🏡”,<br/>\n“houses”: “🏘”,<br/>\n“derelict_house”: “🏚”,<br/>\n“office”: “🏢”,<br/>\n“department_store”: “🏬”,<br/>\n“post_office”: “🏣”,<br/>\n“european_post_office”: “🏤”,<br/>\n“hospital”: “🏥”,<br/>\n“bank”: “🏦”,<br/>\n“hotel”: “🏨”,<br/>\n“convenience_store”: “🏪”,<br/>\n“school”: “🏫”,<br/>\n“love_hotel”: “🏩”,<br/>\n“wedding”: “💒”,<br/>\n“classical_building”: “🏛”,<br/>\n“church”: “⛪️”,<br/>\n“mosque”: “🕌”,<br/>\n“synagogue”: “🕍”,<br/>\n“kaaba”: “🕋”,<br/>\n“shinto_shrine”: “⛩”,<br/>\n“japan”: “🗾”,<br/>\n“rice_scene”: “🎑”,<br/>\n“national_park”: “🏞”,<br/>\n“sunrise”: “🌅”,<br/>\n“sunrise_over_mountains”: “🌄”,<br/>\n“stars”: “🌠”,<br/>\n“sparkler”: “🎇”,<br/>\n“fireworks”: “🎆”,<br/>\n“city_sunrise”: “🌇”,<br/>\n“city_sunset”: “🌆”,<br/>\n“cityscape”: “🏙”,<br/>\n“night_with_stars”: “🌃”,<br/>\n“milky_way”: “🌌”,<br/>\n“bridge_at_night”: “🌉”,<br/>\n“foggy”: “🌁”,<br/>\n“watch”: “⌚️”,<br/>\n“iphone”: “📱”,<br/>\n“calling”: “📲”,<br/>\n“computer”: “💻”,<br/>\n“keyboard”: “⌨️”,<br/>\n“desktop_computer”: “🖥”,<br/>\n“printer”: “🖨”,<br/>\n“computer_mouse”: “🖱”,<br/>\n“trackball”: “🖲”,<br/>\n“joystick”: “🕹”,<br/>\n“clamp”: “🗜”,<br/>\n“minidisc”: “💽”,<br/>\n“floppy_disk”: “💾”,<br/>\n“cd”: “💿”,<br/>\n“dvd”: “📀”,<br/>\n“vhs”: “📼”,<br/>\n“camera”: “📷”,<br/>\n“camera_flash”: “📸”,<br/>\n“video_camera”: “📹”,<br/>\n“movie_camera”: “🎥”,<br/>\n“film_projector”: “📽”,<br/>\n“film_strip”: “🎞”,<br/>\n“telephone_receiver”: “📞”,<br/>\n“phone”: “☎️”,<br/>\n“telephone”: “☎️”,<br/>\n“pager”: “📟”,<br/>\n“fax”: “📠”,<br/>\n“tv”: “📺”,<br/>\n“radio”: “📻”,<br/>\n“studio_microphone”: “🎙”,<br/>\n“level_slider”: “🎚”,<br/>\n“control_knobs”: “🎛”,<br/>\n“stopwatch”: “⏱”,<br/>\n“timer_clock”: “⏲”,<br/>\n“alarm_clock”: “⏰”,<br/>\n“mantelpiece_clock”: “🕰”,<br/>\n“hourglass”: “⌛️”,<br/>\n“hourglass_flowing_sand”: “⏳”,<br/>\n“satellite”: “📡”,<br/>\n“battery”: “🔋”,<br/>\n“electric_plug”: “🔌”,<br/>\n“bulb”: “💡”,<br/>\n“flashlight”: “🔦”,<br/>\n“candle”: “🕯”,<br/>\n“wastebasket”: “🗑”,<br/>\n“oil_drum”: “🛢”,<br/>\n“money_with_wings”: “💸”,<br/>\n“dollar”: “💵”,<br/>\n“yen”: “💴”,<br/>\n“euro”: “💶”,<br/>\n“pound”: “💷”,<br/>\n“moneybag”: “💰”,<br/>\n“credit_card”: “💳”,<br/>\n“gem”: “💎”,<br/>\n“balance_scale”: “⚖️”,<br/>\n“wrench”: “🔧”,<br/>\n“hammer”: “🔨”,<br/>\n“hammer_and_pick”: “⚒”,<br/>\n“hammer_and_wrench”: “🛠”,<br/>\n“pick”: “⛏”,<br/>\n“nut_and_bolt”: “🔩”,<br/>\n“gear”: “⚙️”,<br/>\n“chains”: “⛓”,<br/>\n“gun”: “🔫”,<br/>\n“bomb”: “💣”,<br/>\n“hocho”: “🔪”,<br/>\n“knife”: “🔪”,<br/>\n“dagger”: “🗡”,<br/>\n“crossed_swords”: “⚔️”,<br/>\n“shield”: “🛡”,<br/>\n“smoking”: “🚬”,<br/>\n“coffin”: “⚰️”,<br/>\n“funeral_urn”: “⚱️”,<br/>\n“amphora”: “🏺”,<br/>\n“crystal_ball”: “🔮”,<br/>\n“prayer_beads”: “📿”,<br/>\n“barber”: “💈”,<br/>\n“alembic”: “⚗️”,<br/>\n“telescope”: “🔭”,<br/>\n“microscope”: “🔬”,<br/>\n“hole”: “🕳”,<br/>\n“pill”: “💊”,<br/>\n“syringe”: “💉”,<br/>\n“thermometer”: “🌡”,<br/>\n“toilet”: “🚽”,<br/>\n“potable_water”: “🚰”,<br/>\n“shower”: “🚿”,<br/>\n“bathtub”: “🛁”,<br/>\n“bath”: “🛀”,<br/>\n“bellhop_bell”: “🛎”,<br/>\n“key”: “🔑”,<br/>\n“old_key”: “🗝”,<br/>\n“door”: “🚪”,<br/>\n“couch_and_lamp”: “🛋”,<br/>\n“bed”: “🛏”,<br/>\n“sleeping_bed”: “🛌”,<br/>\n“framed_picture”: “🖼”,<br/>\n“shopping”: “🛍”,<br/>\n“shopping_cart”: “🛒”,<br/>\n“gift”: “🎁”,<br/>\n“balloon”: “🎈”,<br/>\n“flags”: “🎏”,<br/>\n“ribbon”: “🎀”,<br/>\n“confetti_ball”: “🎊”,<br/>\n“tada”: “🎉”,<br/>\n“dolls”: “🎎”,<br/>\n“izakaya_lantern”: “🏮”,<br/>\n“lantern”: “🏮”,<br/>\n“wind_chime”: “🎐”,<br/>\n“email”: “✉️”,<br/>\n“envelope”: “✉️”,<br/>\n“envelope_with_arrow”: “📩”,<br/>\n“incoming_envelope”: “📨”,<br/>\n“e-mail”: “📧”,<br/>\n“love_letter”: “💌”,<br/>\n“inbox_tray”: “📥”,<br/>\n“outbox_tray”: “📤”,<br/>\n“package”: “📦”,<br/>\n“label”: “🏷”,<br/>\n“mailbox_closed”: “📪”,<br/>\n“mailbox”: “📫”,<br/>\n“mailbox_with_mail”: “📬”,<br/>\n“mailbox_with_no_mail”: “📭”,<br/>\n“postbox”: “📮”,<br/>\n“postal_horn”: “📯”,<br/>\n“scroll”: “📜”,<br/>\n“page_with_curl”: “📃”,<br/>\n“page_facing_up”: “📄”,<br/>\n“bookmark_tabs”: “📑”,<br/>\n“bar_chart”: “📊”,<br/>\n“chart_with_upwards_trend”: “📈”,<br/>\n“chart_with_downwards_trend”: “📉”,<br/>\n“spiral_notepad”: “🗒”,<br/>\n“spiral_calendar”: “🗓”,<br/>\n“calendar”: “📆”,<br/>\n“date”: “📅”,<br/>\n“card_index”: “📇”,<br/>\n“card_file_box”: “🗃”,<br/>\n“ballot_box”: “🗳”,<br/>\n“file_cabinet”: “🗄”,<br/>\n“clipboard”: “📋”,<br/>\n“file_folder”: “📁”,<br/>\n“open_file_folder”: “📂”,<br/>\n“card_index_dividers”: “🗂”,<br/>\n“newspaper_roll”: “🗞”,<br/>\n“newspaper”: “📰”,<br/>\n“notebook”: “📓”,<br/>\n“notebook_with_decorative_cover”: “📔”,<br/>\n“ledger”: “📒”,<br/>\n“closed_book”: “📕”,<br/>\n“green_book”: “📗”,<br/>\n“blue_book”: “📘”,<br/>\n“orange_book”: “📙”,<br/>\n“books”: “📚”,<br/>\n“book”: “📖”,<br/>\n“open_book”: “📖”,<br/>\n“bookmark”: “🔖”,<br/>\n“link”: “🔗”,<br/>\n“paperclip”: “📎”,<br/>\n“paperclips”: “🖇”,<br/>\n“triangular_ruler”: “📐”,<br/>\n“straight_ruler”: “📏”,<br/>\n“pushpin”: “📌”,<br/>\n“round_pushpin”: “📍”,<br/>\n“scissors”: “✂️”,<br/>\n“pen”: “🖊”,<br/>\n“fountain_pen”: “🖋”,<br/>\n“black_nib”: “✒️”,<br/>\n“paintbrush”: “🖌”,<br/>\n“crayon”: “🖍”,<br/>\n“memo”: “📝”,<br/>\n“pencil”: “📝”,<br/>\n“pencil2”: “✏️”,<br/>\n“mag”: “🔍”,<br/>\n“mag_right”: “🔎”,<br/>\n“lock_with_ink_pen”: “🔏”,<br/>\n“closed_lock_with_key”: “🔐”,<br/>\n“lock”: “🔒”,<br/>\n“unlock”: “🔓”,<br/>\n“heart”: “❤️”,<br/>\n“yellow_heart”: “💛”,<br/>\n“green_heart”: “💚”,<br/>\n“blue_heart”: “💙”,<br/>\n“purple_heart”: “💜”,<br/>\n“black_heart”: “🖤”,<br/>\n“broken_heart”: “💔”,<br/>\n“heavy_heart_exclamation”: “❣️”,<br/>\n“two_hearts”: “💕”,<br/>\n“revolving_hearts”: “💞”,<br/>\n“heartbeat”: “💓”,<br/>\n“heartpulse”: “💗”,<br/>\n“sparkling_heart”: “💖”,<br/>\n“cupid”: “💘”,<br/>\n“gift_heart”: “💝”,<br/>\n“heart_decoration”: “💟”,<br/>\n“peace_symbol”: “☮️”,<br/>\n“latin_cross”: “✝️”,<br/>\n“star_and_crescent”: “☪️”,<br/>\n“om”: “🕉”,<br/>\n“wheel_of_dharma”: “☸️”,<br/>\n“star_of_david”: “✡️”,<br/>\n“six_pointed_star”: “🔯”,<br/>\n“menorah”: “🕎”,<br/>\n“yin_yang”: “☯️”,<br/>\n“orthodox_cross”: “☦️”,<br/>\n“place_of_worship”: “🛐”,<br/>\n“ophiuchus”: “⛎”,<br/>\n“aries”: “♈️”,<br/>\n“taurus”: “♉️”,<br/>\n“gemini”: “♊️”,<br/>\n“cancer”: “♋️”,<br/>\n“leo”: “♌️”,<br/>\n“virgo”: “♍️”,<br/>\n“libra”: “♎️”,<br/>\n“scorpius”: “♏️”,<br/>\n“sagittarius”: “♐️”,<br/>\n“capricorn”: “♑️”,<br/>\n“aquarius”: “♒️”,<br/>\n“pisces”: “♓️”,<br/>\n“id”: “🆔”,<br/>\n“atom_symbol”: “⚛️”,<br/>\n“accept”: “🉑”,<br/>\n“radioactive”: “☢️”,<br/>\n“biohazard”: “☣️”,<br/>\n“mobile_phone_off”: “📴”,<br/>\n“vibration_mode”: “📳”,<br/>\n“eight_pointed_black_star”: “✴️”,<br/>\n“vs”: “🆚”,<br/>\n“white_flower”: “💮”,<br/>\n“ideograph_advantage”: “🉐”,<br/>\n“secret”: “㊙️”,<br/>\n“congratulations”: “㊗️”,<br/>\n“u6e80”: “🈵”,<br/>\n“a”: “🅰️”,<br/>\n“b”: “🅱️”,<br/>\n“ab”: “🆎”,<br/>\n“cl”: “🆑”,<br/>\n“o2”: “🅾️”,<br/>\n“sos”: “🆘”,<br/>\n“x”: “❌”,<br/>\n“o”: “⭕️”,<br/>\n“stop_sign”: “🛑”,<br/>\n“no_entry”: “⛔️”,<br/>\n“name_badge”: “📛”,<br/>\n“no_entry_sign”: “🚫”,<br/>\n“anger”: “💢”,<br/>\n“hotsprings”: “♨️”,<br/>\n“no_pedestrians”: “🚷”,<br/>\n“do_not_litter”: “🚯”,<br/>\n“no_bicycles”: “🚳”,<br/>\n“non-potable_water”: “🚱”,<br/>\n“underage”: “🔞”,<br/>\n“no_mobile_phones”: “📵”,<br/>\n“no_smoking”: “🚭”,<br/>\n“exclamation”: “❗️”,<br/>\n“heavy_exclamation_mark”: “❗️”,<br/>\n“grey_exclamation”: “❕”,<br/>\n“question”: “❓”,<br/>\n“grey_question”: “❔”,<br/>\n“bangbang”: “‼️”,<br/>\n“interrobang”: “⁉️”,<br/>\n“low_brightness”: “🔅”,<br/>\n“high_brightness”: “🔆”,<br/>\n“part_alternation_mark”: “〽️”,<br/>\n“warning”: “⚠️”,<br/>\n“children_crossing”: “🚸”,<br/>\n“trident”: “🔱”,<br/>\n“fleur_de_lis”: “⚜️”,<br/>\n“beginner”: “🔰”,<br/>\n“recycle”: “♻️”,<br/>\n“white_check_mark”: “✅”,<br/>\n“chart”: “💹”,<br/>\n“sparkle”: “❇️”,<br/>\n“eight_spoked_asterisk”: “✳️”,<br/>\n“negative_squared_cross_mark”: “❎”,<br/>\n“globe_with_meridians”: “🌐”,<br/>\n“diamond_shape_with_a_dot_inside”: “💠”,<br/>\n“m”: “Ⓜ️”,<br/>\n“cyclone”: “🌀”,<br/>\n“zzz”: “💤”,<br/>\n“atm”: “🏧”,<br/>\n“wc”: “🚾”,<br/>\n“wheelchair”: “♿️”,<br/>\n“parking”: “🅿️”,<br/>\n“sa”: “🈂️”,<br/>\n“passport_control”: “🛂”,<br/>\n“customs”: “🛃”,<br/>\n“baggage_claim”: “🛄”,<br/>\n“left_luggage”: “🛅”,<br/>\n“mens”: “🚹”,<br/>\n“womens”: “🚺”,<br/>\n“baby_symbol”: “🚼”,<br/>\n“restroom”: “🚻”,<br/>\n“put_litter_in_its_place”: “🚮”,<br/>\n“cinema”: “🎦”,<br/>\n“signal_strength”: “📶”,<br/>\n“koko”: “🈁”,<br/>\n“symbols”: “🔣”,<br/>\n“information_source”: “ℹ️”,<br/>\n“abc”: “🔤”,<br/>\n“abcd”: “🔡”,<br/>\n“capital_abcd”: “🔠”,<br/>\n“ng”: “🆖”,<br/>\n“ok”: “🆗”,<br/>\n“up”: “🆙”,<br/>\n“cool”: “🆒”,<br/>\n“new”: “🆕”,<br/>\n“free”: “🆓”,<br/>\n“zero”: “0️⃣”,<br/>\n“one”: “1️⃣”,<br/>\n“two”: “2️⃣”,<br/>\n“three”: “3️⃣”,<br/>\n“four”: “4️⃣”,<br/>\n“five”: “5️⃣”,<br/>\n“six”: “6️⃣”,<br/>\n“seven”: “7️⃣”,<br/>\n“eight”: “8️⃣”,<br/>\n“nine”: “9️⃣”,<br/>\n“keycap_ten”: “🔟”,<br/>\n“hash”: “#️⃣”,<br/>\n“asterisk”: “*️⃣”,<br/>\n“arrow_forward”: “▶️”,<br/>\n“pause_button”: “⏸”,<br/>\n“play_or_pause_button”: “⏯”,<br/>\n“stop_button”: “⏹”,<br/>\n“record_button”: “⏺”,<br/>\n“next_track_button”: “⏭”,<br/>\n“previous_track_button”: “⏮”,<br/>\n“fast_forward”: “⏩”,<br/>\n“rewind”: “⏪”,<br/>\n“arrow_double_up”: “⏫”,<br/>\n“arrow_double_down”: “⏬”,<br/>\n“arrow_backward”: “◀️”,<br/>\n“arrow_up_small”: “🔼”,<br/>\n“arrow_down_small”: “🔽”,<br/>\n“arrow_right”: “➡️”,<br/>\n“arrow_left”: “⬅️”,<br/>\n“arrow_up”: “⬆️”,<br/>\n“arrow_down”: “⬇️”,<br/>\n“arrow_upper_right”: “↗️”,<br/>\n“arrow_lower_right”: “↘️”,<br/>\n“arrow_lower_left”: “↙️”,<br/>\n“arrow_upper_left”: “↖️”,<br/>\n“arrow_up_down”: “↕️”,<br/>\n“left_right_arrow”: “↔️”,<br/>\n“arrow_right_hook”: “↪️”,<br/>\n“leftwards_arrow_with_hook”: “↩️”,<br/>\n“arrow_heading_up”: “⤴️”,<br/>\n“arrow_heading_down”: “⤵️”,<br/>\n“twisted_rightwards_arrows”: “🔀”,<br/>\n“repeat”: “🔁”,<br/>\n“repeat_one”: “🔂”,<br/>\n“arrows_counterclockwise”: “🔄”,<br/>\n“arrows_clockwise”: “🔃”,<br/>\n“musical_note”: “🎵”,<br/>\n“notes”: “🎶”,<br/>\n“heavy_plus_sign”: “➕”,<br/>\n“heavy_minus_sign”: “➖”,<br/>\n“heavy_division_sign”: “➗”,<br/>\n“heavy_multiplication_x”: “✖️”,<br/>\n“heavy_dollar_sign”: “💲”,<br/>\n“currency_exchange”: “💱”,<br/>\n“tm”: “™️”,<br/>\n“copyright”: “©️”,<br/>\n“registered”: “®️”,<br/>\n“wavy_dash”: “〰️”,<br/>\n“curly_loop”: “➰”,<br/>\n“loop”: “➿”,<br/>\n“end”: “🔚”,<br/>\n“back”: “🔙”,<br/>\n“on”: “🔛”,<br/>\n“top”: “🔝”,<br/>\n“soon”: “🔜”,<br/>\n“heavy_check_mark”: “✔️”,<br/>\n“ballot_box_with_check”: “☑️”,<br/>\n“radio_button”: “🔘”,<br/>\n“white_circle”: “⚪️”,<br/>\n“black_circle”: “⚫️”,<br/>\n“red_circle”: “🔴”,<br/>\n“large_blue_circle”: “🔵”,<br/>\n“small_red_triangle”: “🔺”,<br/>\n“small_red_triangle_down”: “🔻”,<br/>\n“small_orange_diamond”: “🔸”,<br/>\n“small_blue_diamond”: “🔹”,<br/>\n“large_orange_diamond”: “🔶”,<br/>\n“large_blue_diamond”: “🔷”,<br/>\n“white_square_button”: “🔳”,<br/>\n“black_square_button”: “🔲”,<br/>\n“black_small_square”: “▪️”,<br/>\n“white_small_square”: “▫️”,<br/>\n“black_medium_small_square”: “◾️”,<br/>\n“white_medium_small_square”: “◽️”,<br/>\n“black_medium_square”: “◼️”,<br/>\n“white_medium_square”: “◻️”,<br/>\n“black_large_square”: “⬛️”,<br/>\n“white_large_square”: “⬜️”,<br/>\n“speaker”: “🔈”,<br/>\n“mute”: “🔇”,<br/>\n“sound”: “🔉”,<br/>\n“loud_sound”: “🔊”,<br/>\n“bell”: “🔔”,<br/>\n“no_bell”: “🔕”,<br/>\n“mega”: “📣”,<br/>\n“loudspeaker”: “📢”,<br/>\n“eye_speech_bubble”: “👁‍🗨”,<br/>\n“speech_balloon”: “💬”,<br/>\n“thought_balloon”: “💭”,<br/>\n“right_anger_bubble”: “🗯”,<br/>\n“spades”: “♠️”,<br/>\n“clubs”: “♣️”,<br/>\n“hearts”: “♥️”,<br/>\n“diamonds”: “♦️”,<br/>\n“black_joker”: “🃏”,<br/>\n“flower_playing_cards”: “🎴”,<br/>\n“mahjong”: “🀄️”,<br/>\n“clock1”: “🕐”,<br/>\n“clock2”: “🕑”,<br/>\n“clock3”: “🕒”,<br/>\n“clock4”: “🕓”,<br/>\n“clock5”: “🕔”,<br/>\n“clock6”: “🕕”,<br/>\n“clock7”: “🕖”,<br/>\n“clock8”: “🕗”,<br/>\n“clock9”: “🕘”,<br/>\n“clock10”: “🕙”,<br/>\n“clock11”: “🕚”,<br/>\n“clock12”: “🕛”,<br/>\n“clock130”: “🕜”,<br/>\n“clock230”: “🕝”,<br/>\n“clock330”: “🕞”,<br/>\n“clock430”: “🕟”,<br/>\n“clock530”: “🕠”,<br/>\n“clock630”: “🕡”,<br/>\n“clock730”: “🕢”,<br/>\n“clock830”: “🕣”,<br/>\n“clock930”: “🕤”,<br/>\n“clock1030”: “🕥”,<br/>\n“clock1130”: “🕦”,<br/>\n“clock1230”: “🕧”,<br/>\n“white_flag”: “🏳️”,<br/>\n“black_flag”: “🏴”,<br/>\n“checkered_flag”: “🏁”,<br/>\n“triangular_flag_on_post”: “🚩”,<br/>\n“rainbow_flag”: “🏳️‍🌈”,<br/>\n“afghanistan”: “🇦🇫”,<br/>\n“aland_islands”: “🇦🇽”,<br/>\n“albania”: “🇦🇱”,<br/>\n“algeria”: “🇩🇿”,<br/>\n“american_samoa”: “🇦🇸”,<br/>\n“andorra”: “🇦🇩”,<br/>\n“angola”: “🇦🇴”,<br/>\n“anguilla”: “🇦🇮”,<br/>\n“antarctica”: “🇦🇶”,<br/>\n“antigua_barbuda”: “🇦🇬”,<br/>\n“argentina”: “🇦🇷”,<br/>\n“armenia”: “🇦🇲”,<br/>\n“aruba”: “🇦🇼”,<br/>\n“australia”: “🇦🇺”,<br/>\n“austria”: “🇦🇹”,<br/>\n“azerbaijan”: “🇦🇿”,<br/>\n“bahamas”: “🇧🇸”,<br/>\n“bahrain”: “🇧🇭”,<br/>\n“bangladesh”: “🇧🇩”,<br/>\n“barbados”: “🇧🇧”,<br/>\n“belarus”: “🇧🇾”,<br/>\n“belgium”: “🇧🇪”,<br/>\n“belize”: “🇧🇿”,<br/>\n“benin”: “🇧🇯”,<br/>\n“bermuda”: “🇧🇲”,<br/>\n“bhutan”: “🇧🇹”,<br/>\n“bolivia”: “🇧🇴”,<br/>\n“caribbean_netherlands”: “🇧🇶”,<br/>\n“bosnia_herzegovina”: “🇧🇦”,<br/>\n“botswana”: “🇧🇼”,<br/>\n“brazil”: “🇧🇷”,<br/>\n“british_indian_ocean_territory”: “🇮🇴”,<br/>\n“british_virgin_islands”: “🇻🇬”,<br/>\n“brunei”: “🇧🇳”,<br/>\n“bulgaria”: “🇧🇬”,<br/>\n“burkina_faso”: “🇧🇫”,<br/>\n“burundi”: “🇧🇮”,<br/>\n“cape_verde”: “🇨🇻”,<br/>\n“cambodia”: “🇰🇭”,<br/>\n“cameroon”: “🇨🇲”,<br/>\n“canada”: “🇨🇦”,<br/>\n“canary_islands”: “🇮🇨”,<br/>\n“cayman_islands”: “🇰🇾”,<br/>\n“central_african_republic”: “🇨🇫”,<br/>\n“chad”: “🇹🇩”,<br/>\n“chile”: “🇨🇱”,<br/>\n“cn”: “🇨🇳”,<br/>\n“christmas_island”: “🇨🇽”,<br/>\n“cocos_islands”: “🇨🇨”,<br/>\n“colombia”: “🇨🇴”,<br/>\n“comoros”: “🇰🇲”,<br/>\n“congo_brazzaville”: “🇨🇬”,<br/>\n“congo_kinshasa”: “🇨🇩”,<br/>\n“cook_islands”: “🇨🇰”,<br/>\n“costa_rica”: “🇨🇷”,<br/>\n“cote_divoire”: “🇨🇮”,<br/>\n“croatia”: “🇭🇷”,<br/>\n“cuba”: “🇨🇺”,<br/>\n“curacao”: “🇨🇼”,<br/>\n“cyprus”: “🇨🇾”,<br/>\n“czech_republic”: “🇨🇿”,<br/>\n“denmark”: “🇩🇰”,<br/>\n“djibouti”: “🇩🇯”,<br/>\n“dominica”: “🇩🇲”,<br/>\n“dominican_republic”: “🇩🇴”,<br/>\n“ecuador”: “🇪🇨”,<br/>\n“egypt”: “🇪🇬”,<br/>\n“el_salvador”: “🇸🇻”,<br/>\n“equatorial_guinea”: “🇬🇶”,<br/>\n“eritrea”: “🇪🇷”,<br/>\n“estonia”: “🇪🇪”,<br/>\n“ethiopia”: “🇪🇹”,<br/>\n“eu”: “🇪🇺”,<br/>\n“european_union”: “🇪🇺”,<br/>\n“falkland_islands”: “🇫🇰”,<br/>\n“faroe_islands”: “🇫🇴”,<br/>\n“fiji”: “🇫🇯”,<br/>\n“finland”: “🇫🇮”,<br/>\n“fr”: “🇫🇷”,<br/>\n“french_guiana”: “🇬🇫”,<br/>\n“french_polynesia”: “🇵🇫”,<br/>\n“french_southern_territories”: “🇹🇫”,<br/>\n“gabon”: “🇬🇦”,<br/>\n“gambia”: “🇬🇲”,<br/>\n“georgia”: “🇬🇪”,<br/>\n“de”: “🇩🇪”,<br/>\n“ghana”: “🇬🇭”,<br/>\n“gibraltar”: “🇬🇮”,<br/>\n“greece”: “🇬🇷”,<br/>\n“greenland”: “🇬🇱”,<br/>\n“grenada”: “🇬🇩”,<br/>\n“guadeloupe”: “🇬🇵”,<br/>\n“guam”: “🇬🇺”,<br/>\n“guatemala”: “🇬🇹”,<br/>\n“guernsey”: “🇬🇬”,<br/>\n“guinea”: “🇬🇳”,<br/>\n“guinea_bissau”: “🇬🇼”,<br/>\n“guyana”: “🇬🇾”,<br/>\n“haiti”: “🇭🇹”,<br/>\n“honduras”: “🇭🇳”,<br/>\n“hong_kong”: “🇭🇰”,<br/>\n“hungary”: “🇭🇺”,<br/>\n“iceland”: “🇮🇸”,<br/>\n“india”: “🇮🇳”,<br/>\n“indonesia”: “🇮🇩”,<br/>\n“iran”: “🇮🇷”,<br/>\n“iraq”: “🇮🇶”,<br/>\n“ireland”: “🇮🇪”,<br/>\n“isle_of_man”: “🇮🇲”,<br/>\n“israel”: “🇮🇱”,<br/>\n“it”: “🇮🇹”,<br/>\n“jamaica”: “🇯🇲”,<br/>\n“jp”: “🇯🇵”,<br/>\n“crossed_flags”: “🎌”,<br/>\n“jersey”: “🇯🇪”,<br/>\n“jordan”: “🇯🇴”,<br/>\n“kazakhstan”: “🇰🇿”,<br/>\n“kenya”: “🇰🇪”,<br/>\n“kiribati”: “🇰🇮”,<br/>\n“kosovo”: “🇽🇰”,<br/>\n“kuwait”: “🇰🇼”,<br/>\n“kyrgyzstan”: “🇰🇬”,<br/>\n“laos”: “🇱🇦”,<br/>\n“latvia”: “🇱🇻”,<br/>\n“lebanon”: “🇱🇧”,<br/>\n“lesotho”: “🇱🇸”,<br/>\n“liberia”: “🇱🇷”,<br/>\n“libya”: “🇱🇾”,<br/>\n“liechtenstein”: “🇱🇮”,<br/>\n“lithuania”: “🇱🇹”,<br/>\n“luxembourg”: “🇱🇺”,<br/>\n“macau”: “🇲🇴”,<br/>\n“macedonia”: “🇲🇰”,<br/>\n“madagascar”: “🇲🇬”,<br/>\n“malawi”: “🇲🇼”,<br/>\n“malaysia”: “🇲🇾”,<br/>\n“maldives”: “🇲🇻”,<br/>\n“mali”: “🇲🇱”,<br/>\n“malta”: “🇲🇹”,<br/>\n“marshall_islands”: “🇲🇭”,<br/>\n“martinique”: “🇲🇶”,<br/>\n“mauritania”: “🇲🇷”,<br/>\n“mauritius”: “🇲🇺”,<br/>\n“mayotte”: “🇾🇹”,<br/>\n“mexico”: “🇲🇽”,<br/>\n“micronesia”: “🇫🇲”,<br/>\n“moldova”: “🇲🇩”,<br/>\n“monaco”: “🇲🇨”,<br/>\n“mongolia”: “🇲🇳”,<br/>\n“montenegro”: “🇲🇪”,<br/>\n“montserrat”: “🇲🇸”,<br/>\n“morocco”: “🇲🇦”,<br/>\n“mozambique”: “🇲🇿”,<br/>\n“myanmar”: “🇲🇲”,<br/>\n“namibia”: “🇳🇦”,<br/>\n“nauru”: “🇳🇷”,<br/>\n“nepal”: “🇳🇵”,<br/>\n“netherlands”: “🇳🇱”,<br/>\n“new_caledonia”: “🇳🇨”,<br/>\n“new_zealand”: “🇳🇿”,<br/>\n“nicaragua”: “🇳🇮”,<br/>\n“niger”: “🇳🇪”,<br/>\n“nigeria”: “🇳🇬”,<br/>\n“niue”: “🇳🇺”,<br/>\n“norfolk_island”: “🇳🇫”,<br/>\n“northern_mariana_islands”: “🇲🇵”,<br/>\n“north_korea”: “🇰🇵”,<br/>\n“norway”: “🇳🇴”,<br/>\n“oman”: “🇴🇲”,<br/>\n“pakistan”: “🇵🇰”,<br/>\n“palau”: “🇵🇼”,<br/>\n“palestinian_territories”: “🇵🇸”,<br/>\n“panama”: “🇵🇦”,<br/>\n“papua_new_guinea”: “🇵🇬”,<br/>\n“paraguay”: “🇵🇾”,<br/>\n“peru”: “🇵🇪”,<br/>\n“philippines”: “🇵🇭”,<br/>\n“pitcairn_islands”: “🇵🇳”,<br/>\n“poland”: “🇵🇱”,<br/>\n“portugal”: “🇵🇹”,<br/>\n“puerto_rico”: “🇵🇷”,<br/>\n“qatar”: “🇶🇦”,<br/>\n“reunion”: “🇷🇪”,<br/>\n“romania”: “🇷🇴”,<br/>\n“ru”: “🇷🇺”,<br/>\n“rwanda”: “🇷🇼”,<br/>\n“st_barthelemy”: “🇧🇱”,<br/>\n“st_helena”: “🇸🇭”,<br/>\n“st_kitts_nevis”: “🇰🇳”,<br/>\n“st_lucia”: “🇱🇨”,<br/>\n“st_pierre_miquelon”: “🇵🇲”,<br/>\n“st_vincent_grenadines”: “🇻🇨”,<br/>\n“samoa”: “🇼🇸”,<br/>\n“san_marino”: “🇸🇲”,<br/>\n“sao_tome_principe”: “🇸🇹”,<br/>\n“saudi_arabia”: “🇸🇦”,<br/>\n“senegal”: “🇸🇳”,<br/>\n“serbia”: “🇷🇸”,<br/>\n“seychelles”: “🇸🇨”,<br/>\n“sierra_leone”: “🇸🇱”,<br/>\n“singapore”: “🇸🇬”,<br/>\n“sint_maarten”: “🇸🇽”,<br/>\n“slovakia”: “🇸🇰”,<br/>\n“slovenia”: “🇸🇮”,<br/>\n“solomon_islands”: “🇸🇧”,<br/>\n“somalia”: “🇸🇴”,<br/>\n“south_africa”: “🇿🇦”,<br/>\n“south_georgia_south_sandwich_islands”: “🇬🇸”,<br/>\n“kr”: “🇰🇷”,<br/>\n“south_sudan”: “🇸🇸”,<br/>\n“es”: “🇪🇸”,<br/>\n“sri_lanka”: “🇱🇰”,<br/>\n“sudan”: “🇸🇩”,<br/>\n“suriname”: “🇸🇷”,<br/>\n“swaziland”: “🇸🇿”,<br/>\n“sweden”: “🇸🇪”,<br/>\n“switzerland”: “🇨🇭”,<br/>\n“syria”: “🇸🇾”,<br/>\n“taiwan”: “🇹🇼”,<br/>\n“tajikistan”: “🇹🇯”,<br/>\n“tanzania”: “🇹🇿”,<br/>\n“thailand”: “🇹🇭”,<br/>\n“timor_leste”: “🇹🇱”,<br/>\n“togo”: “🇹🇬”,<br/>\n“tokelau”: “🇹🇰”,<br/>\n“tonga”: “🇹🇴”,<br/>\n“trinidad_tobago”: “🇹🇹”,<br/>\n“tunisia”: “🇹🇳”,<br/>\n“tr”: “🇹🇷”,<br/>\n“turkmenistan”: “🇹🇲”,<br/>\n“turks_caicos_islands”: “🇹🇨”,<br/>\n“tuvalu”: “🇹🇻”,<br/>\n“uganda”: “🇺🇬”,<br/>\n“ukraine”: “🇺🇦”,<br/>\n“united_arab_emirates”: “🇦🇪”,<br/>\n“gb”: “🇬🇧”,<br/>\n“uk”: “🇬🇧”,<br/>\n“us”: “🇺🇸”,<br/>\n“us_virgin_islands”: “🇻🇮”,<br/>\n“uruguay”: “🇺🇾”,<br/>\n“uzbekistan”: “🇺🇿”,<br/>\n“vanuatu”: “🇻🇺”,<br/>\n“vatican_city”: “🇻🇦”,<br/>\n“venezuela”: “🇻🇪”,<br/>\n“vietnam”: “🇻🇳”,<br/>\n“wallis_futuna”: “🇼🇫”,<br/>\n“western_sahara”: “🇪🇭”,<br/>\n“yemen”: “🇾🇪”,<br/>\n“zambia”: “🇿🇲”,<br/>\n“zimbabwe”: “🇿🇼”\n","slug":"MD编辑器就是不告诉你之表情","published":1,"updated":"2019-05-07T07:20:13.378Z","_id":"cjvdgnrpq000n7wumyljbvj27","comments":1,"layout":"post","photos":[],"link":"","content":"<p>angry: [ ‘😠’, ‘😠’ ],</p>\n<p>blush: [ ‘😊’, ‘😊’ ],</p>\n<p>broken_heart: [ ‘💔’, ‘💔’ ],</p>\n<p>confused: [ ‘😕’, ‘😕’ ], </p>\n<p>cry: [ “:’(”, “:’-(”, ‘😢’, ‘😢’ ],</p>\n<p>frowning: [ ‘😦’, ‘😦’ ],</p>\n<p>heart: [ ‘❤️’ ],</p>\n<p>imp: [ ‘👿’, ‘👿’ ],</p>\n<p>innocent: [ ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’ ],</p>\n<p>joy: [ “:’)”, “:’-)”, ‘😂’, ‘😂’, “😂”, “:’-D”, ‘😂’, ‘😂’ ],</p>\n<p>kissing: [ ‘:’, ‘:-’ ],</p>\n<p>laughing: [ ‘😆’, ‘😆’ ],</p>\n<p>neutral_face: [ ‘😐’, ‘😐’ ],</p>\n<p>open_mouth: [ ‘😮’, ‘😮’, ‘😮’, ‘😮’ ],</p>\n<p>rage: [ ‘😡’, ‘😡’ ],</p>\n<p>smile: [ ‘😄’, ‘😄’ ],</p>\n<p>smiley: [ ‘😃’, ‘😃’ ],</p>\n<p>smiling_imp: [ ‘😈’, ‘😈’ ],</p>\n<p>sob: [ “:,’(”, “:,’-(”, ‘😭’, ‘😭’ ],</p>\n<p>stuck_out_tongue: [ ‘😛’, ‘😛’ ],</p>\n<p>sunglasses: [ ‘😎’, ‘😎’ ],</p>\n<p>sweat: [ ‘😓’, ‘😓’ ],</p>\n<p>sweat_smile: [ ‘😅’, ‘😅’ ],</p>\n<p>unamused: [ ‘😒’, ‘😒’, ‘😒’, ‘😒’, ‘:′,′:− &#x27;, &#x27;:-<br>′<br> ,<br>′<br> :−’ ],</p>\n<p>wink: [ ‘😉’, ‘😉’ ]</p>\n<p>“grinning”: “😀”,<br></p>\n<p>“smiley”: “😃”,<br></p>\n<p>“smile”: “😄”,<br></p>\n<p>“grin”: “😁”,<br></p>\n<p>“laughing”: “😆”,<br></p>\n<p>“satisfied”: “😆”,<br></p>\n<p>“sweat_smile”: “😅”,<br></p>\n<p>“joy”: “😂”,<br></p>\n<p>“blush”: “😊”,<br></p>\n<p>“innocent”: “😇”,<br></p>\n<p>“wink”: “😉”,<br></p>\n<p>“relieved”: “😌”,<br></p>\n<p>“heart_eyes”: “😍”,<br></p>\n<p>“kissing_heart”: “😘”,<br></p>\n<p>“kissing”: “😗”,<br></p>\n<p>“kissing_smiling_eyes”: “😙”,<br></p>\n<p>“kissing_closed_eyes”: “😚”,<br></p>\n<p>“yum”: “😋”,<br></p>\n<p>“stuck_out_tongue_winking_eye”: “😜”,<br></p>\n<p>“stuck_out_tongue_closed_eyes”: “😝”,<br></p>\n<p>“stuck_out_tongue”: “😛”,<br></p>\n<p>“sunglasses”: “😎”,<br></p>\n<p>“smirk”: “😏”,<br></p>\n<p>“unamused”: “😒”,<br></p>\n<p>“disappointed”: “😞”,<br></p>\n<p>“pensive”: “😔”,<br></p>\n<p>“worried”: “😟”,<br></p>\n<p>“confused”: “😕”,<br></p>\n<p>“persevere”: “😣”,<br></p>\n<p>“confounded”: “😖”,<br></p>\n<p>“tired_face”: “😫”,<br></p>\n<p>“weary”: “😩”,<br></p>\n<p>“angry”: “😠”,<br></p>\n<p>“rage”: “😡”,<br></p>\n<p>“pout”: “😡”,<br></p>\n<p>“no_mouth”: “😶”,<br></p>\n<p>“neutral_face”: “😐”,<br></p>\n<p>“expressionless”: “😑”,<br></p>\n<p>“hushed”: “😯”,<br></p>\n<p>“frowning”: “😦”,<br></p>\n<p>“anguished”: “😧”,<br></p>\n<p>“open_mouth”: “😮”,<br></p>\n<p>“astonished”: “😲”,<br></p>\n<p>“dizzy_face”: “😵”,<br></p>\n<p>“flushed”: “😳”,<br></p>\n<p>“scream”: “😱”,<br></p>\n<p>“fearful”: “😨”,<br></p>\n<p>“cold_sweat”: “😰”,<br></p>\n<p>“cry”: “😢”,<br></p>\n<p>“disappointed_relieved”: “😥”,<br></p>\n<p>“sob”: “😭”,<br></p>\n<p>“sweat”: “😓”,<br></p>\n<p>“sleepy”: “😪”,<br></p>\n<p>“sleeping”: “😴”,<br></p>\n<p>“mask”: “😷”,<br></p>\n<p>“smiling_imp”: “😈”,<br></p>\n<p>“smiley_cat”: “😺”,<br></p>\n<p>“smile_cat”: “😸”,<br></p>\n<p>“joy_cat”: “😹”,<br></p>\n<p>“heart_eyes_cat”: “😻”,<br></p>\n<p>“smirk_cat”: “😼”,<br></p>\n<p>“kissing_cat”: “😽”,<br></p>\n<p>“scream_cat”: “🙀”,<br></p>\n<p>“crying_cat_face”: “😿”,<br></p>\n<p>“pouting_cat”: “😾”,<br></p>\n<p>“fist_raised”: “✊”,<br></p>\n<p>“fist”: “✊”,<br></p>\n<p>“v”: “✌️”,<br></p>\n<p>“point_up”: “☝️”,<br></p>\n<p>“hand”: “✋”,<br></p>\n<p>“raised_hand”: “✋”,<br></p>\n<p>“cat”: “🐱”,<br></p>\n<p>“mouse”: “🐭”,<br></p>\n<p>“cow”: “🐮”,<br></p>\n<p>“monkey_face”: “🐵”,<br></p>\n<p>“star”: “⭐️”,<br></p>\n<p>“sparkles”: “✨”,<br></p>\n<p>“zap”: “⚡️”,<br></p>\n<p>“sunny”: “☀️”,<br></p>\n<p>“cloud”: “☁️”,<br></p>\n<p>“snowflake”: “❄️”,<br></p>\n<p>“umbrella”: “☔️”,<br></p>\n<p>“coffee”: “☕️”,<br></p>\n<p>“airplane”: “✈️”,<br></p>\n<p>“anchor”: “⚓️”,<br></p>\n<p>“watch”: “⌚️”,<br></p>\n<p>“phone”: “☎️”,<br></p>\n<p>“telephone”: “☎️”,<br></p>\n<p>“hourglass”: “⌛️”,<br></p>\n<p>“email”: “✉️”,<br></p>\n<p>“envelope”: “✉️”,<br></p>\n<p>“scissors”: “✂️”,<br></p>\n<p>“black_nib”: “✒️”,<br></p>\n<p>“pencil2”: “✏️”,<br></p>\n<p>“heart”: “❤️”,<br></p>\n<p>“aries”: “♈️”,<br></p>\n<p>“taurus”: “♉️”,<br></p>\n<p>“gemini”: “♊️”,<br></p>\n<p>“cancer”: “♋️”,<br></p>\n<p>“leo”: “♌️”,<br></p>\n<p>“virgo”: “♍️”,<br></p>\n<p>“libra”: “♎️”,<br></p>\n<p>“scorpius”: “♏️”,<br></p>\n<p>“sagittarius”: “♐️”,<br></p>\n<p>“capricorn”: “♑️”,<br></p>\n<p>“aquarius”: “♒️”,<br></p>\n<p>“pisces”: “♓️”,<br></p>\n<p>“eight_pointed_black_star”: “✴️”,<br></p>\n<p>“x”: “❌”,<br></p>\n<p>“hotsprings”: “♨️”,<br></p>\n<p>“exclamation”: “❗️”,<br></p>\n<p>“heavy_exclamation_mark”: “❗️”,<br></p>\n<p>“grey_exclamation”: “❕”,<br></p>\n<p>“question”: “❓”,<br></p>\n<p>“grey_question”: “❔”,<br></p>\n<p>“bangbang”: “‼️”,<br></p>\n<p>“interrobang”: “⁉️”,<br></p>\n<p>“part_alternation_mark”: “〽️”,<br></p>\n<p>“warning”: “⚠️”,<br></p>\n<p>“recycle”: “♻️”,<br></p>\n<p>“white_check_mark”: “✅”,<br></p>\n<p>“sparkle”: “❇️”,<br></p>\n<p>“eight_spoked_asterisk”: “✳️”,<br></p>\n<p>“negative_squared_cross_mark”: “❎”,<br></p>\n<p>“m”: “Ⓜ️”,<br></p>\n<p>“wheelchair”: “♿️”,<br></p>\n<p>“information_source”: “ℹ️”,<br></p>\n<p>“heavy_plus_sign”: “➕”,<br></p>\n<p>“heavy_minus_sign”: “➖”,<br></p>\n<p>“heavy_division_sign”: “➗”,<br></p>\n<p>“heavy_multiplication_x”: “✖️”,<br></p>\n<p>“tm”: “™️”,<br></p>\n<p>“copyright”: “©️”,<br></p>\n<p>“registered”: “®️”,<br></p>\n<p>“wavy_dash”: “〰️”,<br></p>\n<p>“curly_loop”: “➰”,<br></p>\n<p>“loop”: “➿”,<br></p>\n<p>“heavy_check_mark”: “✔️”,<br></p>\n<p>“ballot_box_with_check”: “☑️”,<br></p>\n<p>“white_circle”: “⚪️”,<br></p>\n<p>“black_circle”: “⚫️”,<br></p>\n<p>“black_small_square”: “▪️”,<br></p>\n<p>“white_small_square”: “▫️”,<br></p>\n<p>“black_medium_small_square”: “◾️”,<br></p>\n<p>“white_medium_small_square”: “◽️”,<br></p>\n<p>“black_medium_square”: “◼️”,<br></p>\n<p>“white_medium_square”: “◻️”,<br></p>\n<p>“black_large_square”: “⬛️”,<br></p>\n<p>“white_large_square”: “⬜️”,<br></p>\n<p>“black_joker”: “🃏”,<br></p>\n<p>“mahjong”: “🀄️”</p>\n<p>“100”: “💯”,<br></p>\n<p>“1234”: “🔢”,<br></p>\n<p>“grinning”: “😀”,<br></p>\n<p>“smiley”: “😃”,<br></p>\n<p>“smile”: “😄”,<br></p>\n<p>“grin”: “😁”,<br></p>\n<p>“laughing”: “😆”,<br></p>\n<p>“satisfied”: “😆”,<br></p>\n<p>“sweat_smile”: “😅”,<br></p>\n<p>“joy”: “😂”,<br></p>\n<p>“rofl”: “🤣”,<br></p>\n<p>“relaxed”: “☺️”,<br></p>\n<p>“blush”: “😊”,<br></p>\n<p>“innocent”: “😇”,<br></p>\n<p>“slightly_smiling_face”: “🙂”,<br></p>\n<p>“upside_down_face”: “🙃”,<br></p>\n<p>“wink”: “😉”,<br></p>\n<p>“relieved”: “😌”,<br></p>\n<p>“heart_eyes”: “😍”,<br></p>\n<p>“kissing_heart”: “😘”,<br></p>\n<p>“kissing”: “😗”,<br></p>\n<p>“kissing_smiling_eyes”: “😙”,<br></p>\n<p>“kissing_closed_eyes”: “😚”,<br></p>\n<p>“yum”: “😋”,<br></p>\n<p>“stuck_out_tongue_winking_eye”: “😜”,<br></p>\n<p>“stuck_out_tongue_closed_eyes”: “😝”,<br></p>\n<p>“stuck_out_tongue”: “😛”,<br></p>\n<p>“money_mouth_face”: “🤑”,<br></p>\n<p>“hugs”: “🤗”,<br></p>\n<p>“nerd_face”: “🤓”,<br></p>\n<p>“sunglasses”: “😎”,<br></p>\n<p>“clown_face”: “🤡”,<br></p>\n<p>“cowboy_hat_face”: “🤠”,<br></p>\n<p>“smirk”: “😏”,<br></p>\n<p>“unamused”: “😒”,<br></p>\n<p>“disappointed”: “😞”,<br></p>\n<p>“pensive”: “😔”,<br></p>\n<p>“worried”: “😟”,<br></p>\n<p>“confused”: “😕”,<br></p>\n<p>“slightly_frowning_face”: “🙁”,<br></p>\n<p>“frowning_face”: “☹️”,<br></p>\n<p>“persevere”: “😣”,<br></p>\n<p>“confounded”: “😖”,<br></p>\n<p>“tired_face”: “😫”,<br></p>\n<p>“weary”: “😩”,<br></p>\n<p>“triumph”: “😤”,<br></p>\n<p>“angry”: “😠”,<br></p>\n<p>“rage”: “😡”,<br></p>\n<p>“pout”: “😡”,<br></p>\n<p>“no_mouth”: “😶”,<br></p>\n<p>“neutral_face”: “😐”,<br></p>\n<p>“expressionless”: “😑”,<br></p>\n<p>“hushed”: “😯”,<br></p>\n<p>“frowning”: “😦”,<br></p>\n<p>“anguished”: “😧”,<br></p>\n<p>“open_mouth”: “😮”,<br></p>\n<p>“astonished”: “😲”,<br></p>\n<p>“dizzy_face”: “😵”,<br></p>\n<p>“flushed”: “😳”,<br></p>\n<p>“scream”: “😱”,<br></p>\n<p>“fearful”: “😨”,<br></p>\n<p>“cold_sweat”: “😰”,<br></p>\n<p>“cry”: “😢”,<br></p>\n<p>“disappointed_relieved”: “😥”,<br></p>\n<p>“drooling_face”: “🤤”,<br></p>\n<p>“sob”: “😭”,<br></p>\n<p>“sweat”: “😓”,<br></p>\n<p>“sleepy”: “😪”,<br></p>\n<p>“sleeping”: “😴”,<br></p>\n<p>“roll_eyes”: “🙄”,<br></p>\n<p>“thinking”: “🤔”,<br></p>\n<p>“lying_face”: “🤥”,<br></p>\n<p>“grimacing”: “😬”,<br></p>\n<p>“zipper_mouth_face”: “🤐”,<br></p>\n<p>“nauseated_face”: “🤢”,<br></p>\n<p>“sneezing_face”: “🤧”,<br></p>\n<p>“mask”: “😷”,<br></p>\n<p>“face_with_thermometer”: “🤒”,<br></p>\n<p>“face_with_head_bandage”: “🤕”,<br></p>\n<p>“smiling_imp”: “😈”,<br></p>\n<p>“imp”: “👿”,<br></p>\n<p>“japanese_ogre”: “👹”,<br></p>\n<p>“japanese_goblin”: “👺”,<br></p>\n<p>“hankey”: “💩”,<br></p>\n<p>“poop”: “💩”,<br></p>\n<p>“shit”: “💩”,<br></p>\n<p>“ghost”: “👻”,<br></p>\n<p>“skull”: “💀”,<br></p>\n<p>“skull_and_crossbones”: “☠️”,<br></p>\n<p>“alien”: “👽”,<br></p>\n<p>“space_invader”: “👾”,<br></p>\n<p>“robot”: “🤖”,<br></p>\n<p>“jack_o_lantern”: “🎃”,<br></p>\n<p>“smiley_cat”: “😺”,<br></p>\n<p>“smile_cat”: “😸”,<br></p>\n<p>“joy_cat”: “😹”,<br></p>\n<p>“heart_eyes_cat”: “😻”,<br></p>\n<p>“smirk_cat”: “😼”,<br></p>\n<p>“kissing_cat”: “😽”,<br></p>\n<p>“scream_cat”: “🙀”,<br></p>\n<p>“crying_cat_face”: “😿”,<br></p>\n<p>“pouting_cat”: “😾”,<br></p>\n<p>“open_hands”: “👐”,<br></p>\n<p>“raised_hands”: “🙌”,<br></p>\n<p>“clap”: “👏”,<br></p>\n<p>“pray”: “🙏”,<br></p>\n<p>“handshake”: “🤝”,<br></p>\n<p>“+1”: “👍”,<br></p>\n<p>“thumbsup”: “👍”,<br></p>\n<p>“-1”: “👎”,<br></p>\n<p>“thumbsdown”: “👎”,<br></p>\n<p>“fist_oncoming”: “👊”,<br></p>\n<p>“facepunch”: “👊”,<br></p>\n<p>“punch”: “👊”,<br></p>\n<p>“fist_raised”: “✊”,<br></p>\n<p>“fist”: “✊”,<br></p>\n<p>“fist_left”: “🤛”,<br></p>\n<p>“fist_right”: “🤜”,<br></p>\n<p>“crossed_fingers”: “🤞”,<br></p>\n<p>“v”: “✌️”,<br></p>\n<p>“metal”: “🤘”,<br></p>\n<p>“ok_hand”: “👌”,<br></p>\n<p>“point_left”: “👈”,<br></p>\n<p>“point_right”: “👉”,<br></p>\n<p>“point_up_2”: “👆”,<br></p>\n<p>“point_down”: “👇”,<br></p>\n<p>“point_up”: “☝️”,<br></p>\n<p>“hand”: “✋”,<br></p>\n<p>“raised_hand”: “✋”,<br></p>\n<p>“raised_back_of_hand”: “🤚”,<br></p>\n<p>“raised_hand_with_fingers_splayed”: “🖐”,<br></p>\n<p>“vulcan_salute”: “🖖”,<br></p>\n<p>“wave”: “👋”,<br></p>\n<p>“call_me_hand”: “🤙”,<br></p>\n<p>“muscle”: “💪”,<br></p>\n<p>“middle_finger”: “🖕”,<br></p>\n<p>“fu”: “🖕”,<br></p>\n<p>“writing_hand”: “✍️”,<br></p>\n<p>“selfie”: “🤳”,<br></p>\n<p>“nail_care”: “💅”,<br></p>\n<p>“ring”: “💍”,<br></p>\n<p>“lipstick”: “💄”,<br></p>\n<p>“kiss”: “💋”,<br></p>\n<p>“lips”: “👄”,<br></p>\n<p>“tongue”: “👅”,<br></p>\n<p>“ear”: “👂”,<br></p>\n<p>“nose”: “👃”,<br></p>\n<p>“footprints”: “👣”,<br></p>\n<p>“eye”: “👁”,<br></p>\n<p>“eyes”: “👀”,<br></p>\n<p>“speaking_head”: “🗣”,<br></p>\n<p>“bust_in_silhouette”: “👤”,<br></p>\n<p>“busts_in_silhouette”: “👥”,<br></p>\n<p>“baby”: “👶”,<br></p>\n<p>“boy”: “👦”,<br></p>\n<p>“girl”: “👧”,<br></p>\n<p>“man”: “👨”,<br></p>\n<p>“woman”: “👩”,<br></p>\n<p>“blonde_woman”: “👱‍♀”,<br></p>\n<p>“blonde_man”: “👱”,<br></p>\n<p>“person_with_blond_hair”: “👱”,<br></p>\n<p>“older_man”: “👴”,<br></p>\n<p>“older_woman”: “👵”,<br></p>\n<p>“man_with_gua_pi_mao”: “👲”,<br></p>\n<p>“woman_with_turban”: “👳‍♀”,<br></p>\n<p>“man_with_turban”: “👳”,<br></p>\n<p>“policewoman”: “👮‍♀”,<br></p>\n<p>“policeman”: “👮”,<br></p>\n<p>“cop”: “👮”,<br></p>\n<p>“construction_worker_woman”: “👷‍♀”,<br></p>\n<p>“construction_worker_man”: “👷”,<br></p>\n<p>“construction_worker”: “👷”,<br></p>\n<p>“guardswoman”: “💂‍♀”,<br></p>\n<p>“guardsman”: “💂”,<br></p>\n<p>“female_detective”: “🕵️‍♀️”,<br></p>\n<p>“male_detective”: “🕵”,<br></p>\n<p>“detective”: “🕵”,<br></p>\n<p>“woman_health_worker”: “👩‍⚕”,<br></p>\n<p>“man_health_worker”: “👨‍⚕”,<br></p>\n<p>“woman_farmer”: “👩‍🌾”,<br></p>\n<p>“man_farmer”: “👨‍🌾”,<br></p>\n<p>“woman_cook”: “👩‍🍳”,<br></p>\n<p>“man_cook”: “👨‍🍳”,<br></p>\n<p>“woman_student”: “👩‍🎓”,<br></p>\n<p>“man_student”: “👨‍🎓”,<br></p>\n<p>“woman_singer”: “👩‍🎤”,<br></p>\n<p>“man_singer”: “👨‍🎤”,<br></p>\n<p>“woman_teacher”: “👩‍🏫”,<br></p>\n<p>“man_teacher”: “👨‍🏫”,<br></p>\n<p>“woman_factory_worker”: “👩‍🏭”,<br></p>\n<p>“man_factory_worker”: “👨‍🏭”,<br></p>\n<p>“woman_technologist”: “👩‍💻”,<br></p>\n<p>“man_technologist”: “👨‍💻”,<br></p>\n<p>“woman_office_worker”: “👩‍💼”,<br></p>\n<p>“man_office_worker”: “👨‍💼”,<br></p>\n<p>“woman_mechanic”: “👩‍🔧”,<br></p>\n<p>“man_mechanic”: “👨‍🔧”,<br></p>\n<p>“woman_scientist”: “👩‍🔬”,<br></p>\n<p>“man_scientist”: “👨‍🔬”,<br></p>\n<p>“woman_artist”: “👩‍🎨”,<br></p>\n<p>“man_artist”: “👨‍🎨”,<br></p>\n<p>“woman_firefighter”: “👩‍🚒”,<br></p>\n<p>“man_firefighter”: “👨‍🚒”,<br></p>\n<p>“woman_pilot”: “👩‍✈”,<br></p>\n<p>“man_pilot”: “👨‍✈”,<br></p>\n<p>“woman_astronaut”: “👩‍🚀”,<br></p>\n<p>“man_astronaut”: “👨‍🚀”,<br></p>\n<p>“woman_judge”: “👩‍⚖”,<br></p>\n<p>“man_judge”: “👨‍⚖”,<br></p>\n<p>“mrs_claus”: “🤶”,<br></p>\n<p>“santa”: “🎅”,<br></p>\n<p>“princess”: “👸”,<br></p>\n<p>“prince”: “🤴”,<br></p>\n<p>“bride_with_veil”: “👰”,<br></p>\n<p>“man_in_tuxedo”: “🤵”,<br></p>\n<p>“angel”: “👼”,<br></p>\n<p>“pregnant_woman”: “🤰”,<br></p>\n<p>“bowing_woman”: “🙇‍♀”,<br></p>\n<p>“bowing_man”: “🙇”,<br></p>\n<p>“bow”: “🙇”,<br></p>\n<p>“tipping_hand_woman”: “💁”,<br></p>\n<p>“information_desk_person”: “💁”,<br></p>\n<p>“sassy_woman”: “💁”,<br></p>\n<p>“tipping_hand_man”: “💁‍♂”,<br></p>\n<p>“sassy_man”: “💁‍♂”,<br></p>\n<p>“no_good_woman”: “🙅”,<br></p>\n<p>“no_good”: “🙅”,<br></p>\n<p>“ng_woman”: “🙅”,<br></p>\n<p>“no_good_man”: “🙅‍♂”,<br></p>\n<p>“ng_man”: “🙅‍♂”,<br></p>\n<p>“ok_woman”: “🙆”,<br></p>\n<p>“ok_man”: “🙆‍♂”,<br></p>\n<p>“raising_hand_woman”: “🙋”,<br></p>\n<p>“raising_hand”: “🙋”,<br></p>\n<p>“raising_hand_man”: “🙋‍♂”,<br></p>\n<p>“woman_facepalming”: “🤦‍♀”,<br></p>\n<p>“man_facepalming”: “🤦‍♂”,<br></p>\n<p>“woman_shrugging”: “🤷‍♀”,<br></p>\n<p>“man_shrugging”: “🤷‍♂”,<br></p>\n<p>“pouting_woman”: “🙎”,<br></p>\n<p>“person_with_pouting_face”: “🙎”,<br></p>\n<p>“pouting_man”: “🙎‍♂”,<br></p>\n<p>“frowning_woman”: “🙍”,<br></p>\n<p>“person_frowning”: “🙍”,<br></p>\n<p>“frowning_man”: “🙍‍♂”,<br></p>\n<p>“haircut_woman”: “💇”,<br></p>\n<p>“haircut”: “💇”,<br></p>\n<p>“haircut_man”: “💇‍♂”,<br></p>\n<p>“massage_woman”: “💆”,<br></p>\n<p>“massage”: “💆”,<br></p>\n<p>“massage_man”: “💆‍♂”,<br></p>\n<p>“business_suit_levitating”: “🕴”,<br></p>\n<p>“dancer”: “💃”,<br></p>\n<p>“man_dancing”: “🕺”,<br></p>\n<p>“dancing_women”: “👯”,<br></p>\n<p>“dancers”: “👯”,<br></p>\n<p>“dancing_men”: “👯‍♂”,<br></p>\n<p>“walking_woman”: “🚶‍♀”,<br></p>\n<p>“walking_man”: “🚶”,<br></p>\n<p>“walking”: “🚶”,<br></p>\n<p>“running_woman”: “🏃‍♀”,<br></p>\n<p>“running_man”: “🏃”,<br></p>\n<p>“runner”: “🏃”,<br></p>\n<p>“running”: “🏃”,<br></p>\n<p>“couple”: “👫”,<br></p>\n<p>“two_women_holding_hands”: “👭”,<br></p>\n<p>“two_men_holding_hands”: “👬”,<br></p>\n<p>“couple_with_heart_woman_man”: “💑”,<br></p>\n<p>“couple_with_heart”: “💑”,<br></p>\n<p>“couple_with_heart_woman_woman”: “👩‍❤️‍👩”,<br></p>\n<p>“couple_with_heart_man_man”: “👨‍❤️‍👨”,<br></p>\n<p>“couplekiss_man_woman”: “💏”,<br></p>\n<p>“couplekiss_woman_woman”: “👩‍❤️‍💋‍👩”,<br></p>\n<p>“couplekiss_man_man”: “👨‍❤️‍💋‍👨”,<br></p>\n<p>“family_man_woman_boy”: “👪”,<br></p>\n<p>“family”: “👪”,<br></p>\n<p>“family_man_woman_girl”: “👨‍👩‍👧”,<br></p>\n<p>“family_man_woman_girl_boy”: “👨‍👩‍👧‍👦”,<br></p>\n<p>“family_man_woman_boy_boy”: “👨‍👩‍👦‍👦”,<br></p>\n<p>“family_man_woman_girl_girl”: “👨‍👩‍👧‍👧”,<br></p>\n<p>“family_woman_woman_boy”: “👩‍👩‍👦”,<br></p>\n<p>“family_woman_woman_girl”: “👩‍👩‍👧”,<br></p>\n<p>“family_woman_woman_girl_boy”: “👩‍👩‍👧‍👦”,<br></p>\n<p>“family_woman_woman_boy_boy”: “👩‍👩‍👦‍👦”,<br></p>\n<p>“family_woman_woman_girl_girl”: “👩‍👩‍👧‍👧”,<br></p>\n<p>“family_man_man_boy”: “👨‍👨‍👦”,<br></p>\n<p>“family_man_man_girl”: “👨‍👨‍👧”,<br></p>\n<p>“family_man_man_girl_boy”: “👨‍👨‍👧‍👦”,<br></p>\n<p>“family_man_man_boy_boy”: “👨‍👨‍👦‍👦”,<br></p>\n<p>“family_man_man_girl_girl”: “👨‍👨‍👧‍👧”,<br></p>\n<p>“family_woman_boy”: “👩‍👦”,<br></p>\n<p>“family_woman_girl”: “👩‍👧”,<br></p>\n<p>“family_woman_girl_boy”: “👩‍👧‍👦”,<br></p>\n<p>“family_woman_boy_boy”: “👩‍👦‍👦”,<br></p>\n<p>“family_woman_girl_girl”: “👩‍👧‍👧”,<br></p>\n<p>“family_man_boy”: “👨‍👦”,<br></p>\n<p>“family_man_girl”: “👨‍👧”,<br></p>\n<p>“family_man_girl_boy”: “👨‍👧‍👦”,<br></p>\n<p>“family_man_boy_boy”: “👨‍👦‍👦”,<br></p>\n<p>“family_man_girl_girl”: “👨‍👧‍👧”,<br></p>\n<p>“womans_clothes”: “👚”,<br></p>\n<p>“shirt”: “👕”,<br></p>\n<p>“tshirt”: “👕”,<br></p>\n<p>“jeans”: “👖”,<br></p>\n<p>“necktie”: “👔”,<br></p>\n<p>“dress”: “👗”,<br></p>\n<p>“bikini”: “👙”,<br></p>\n<p>“kimono”: “👘”,<br></p>\n<p>“high_heel”: “👠”,<br></p>\n<p>“sandal”: “👡”,<br></p>\n<p>“boot”: “👢”,<br></p>\n<p>“mans_shoe”: “👞”,<br></p>\n<p>“shoe”: “👞”,<br></p>\n<p>“athletic_shoe”: “👟”,<br></p>\n<p>“womans_hat”: “👒”,<br></p>\n<p>“tophat”: “🎩”,<br></p>\n<p>“mortar_board”: “🎓”,<br></p>\n<p>“crown”: “👑”,<br></p>\n<p>“rescue_worker_helmet”: “⛑”,<br></p>\n<p>“school_satchel”: “🎒”,<br></p>\n<p>“pouch”: “👝”,<br></p>\n<p>“purse”: “👛”,<br></p>\n<p>“handbag”: “👜”,<br></p>\n<p>“briefcase”: “💼”,<br></p>\n<p>“eyeglasses”: “👓”,<br></p>\n<p>“dark_sunglasses”: “🕶”,<br></p>\n<p>“closed_umbrella”: “🌂”,<br></p>\n<p>“open_umbrella”: “☂️”,<br></p>\n<p>“dog”: “🐶”,<br></p>\n<p>“cat”: “🐱”,<br></p>\n<p>“mouse”: “🐭”,<br></p>\n<p>“hamster”: “🐹”,<br></p>\n<p>“rabbit”: “🐰”,<br></p>\n<p>“fox_face”: “🦊”,<br></p>\n<p>“bear”: “🐻”,<br></p>\n<p>“panda_face”: “🐼”,<br></p>\n<p>“koala”: “🐨”,<br></p>\n<p>“tiger”: “🐯”,<br></p>\n<p>“lion”: “🦁”,<br></p>\n<p>“cow”: “🐮”,<br></p>\n<p>“pig”: “🐷”,<br></p>\n<p>“pig_nose”: “🐽”,<br></p>\n<p>“frog”: “🐸”,<br></p>\n<p>“monkey_face”: “🐵”,<br></p>\n<p>“see_no_evil”: “🙈”,<br></p>\n<p>“hear_no_evil”: “🙉”,<br></p>\n<p>“speak_no_evil”: “🙊”,<br></p>\n<p>“monkey”: “🐒”,<br></p>\n<p>“chicken”: “🐔”,<br></p>\n<p>“penguin”: “🐧”,<br></p>\n<p>“bird”: “🐦”,<br></p>\n<p>“baby_chick”: “🐤”,<br></p>\n<p>“hatching_chick”: “🐣”,<br></p>\n<p>“hatched_chick”: “🐥”,<br></p>\n<p>“duck”: “🦆”,<br></p>\n<p>“eagle”: “🦅”,<br></p>\n<p>“owl”: “🦉”,<br></p>\n<p>“bat”: “🦇”,<br></p>\n<p>“wolf”: “🐺”,<br></p>\n<p>“boar”: “🐗”,<br></p>\n<p>“horse”: “🐴”,<br></p>\n<p>“unicorn”: “🦄”,<br></p>\n<p>“bee”: “🐝”,<br></p>\n<p>“honeybee”: “🐝”,<br></p>\n<p>“bug”: “🐛”,<br></p>\n<p>“butterfly”: “🦋”,<br></p>\n<p>“snail”: “🐌”,<br></p>\n<p>“shell”: “🐚”,<br></p>\n<p>“beetle”: “🐞”,<br></p>\n<p>“ant”: “🐜”,<br></p>\n<p>“spider”: “🕷”,<br></p>\n<p>“spider_web”: “🕸”,<br></p>\n<p>“turtle”: “🐢”,<br></p>\n<p>“snake”: “🐍”,<br></p>\n<p>“lizard”: “🦎”,<br></p>\n<p>“scorpion”: “🦂”,<br></p>\n<p>“crab”: “🦀”,<br></p>\n<p>“squid”: “🦑”,<br></p>\n<p>“octopus”: “🐙”,<br></p>\n<p>“shrimp”: “🦐”,<br></p>\n<p>“tropical_fish”: “🐠”,<br></p>\n<p>“fish”: “🐟”,<br></p>\n<p>“blowfish”: “🐡”,<br></p>\n<p>“dolphin”: “🐬”,<br></p>\n<p>“flipper”: “🐬”,<br></p>\n<p>“shark”: “🦈”,<br></p>\n<p>“whale”: “🐳”,<br></p>\n<p>“whale2”: “🐋”,<br></p>\n<p>“crocodile”: “🐊”,<br></p>\n<p>“leopard”: “🐆”,<br></p>\n<p>“tiger2”: “🐅”,<br></p>\n<p>“water_buffalo”: “🐃”,<br></p>\n<p>“ox”: “🐂”,<br></p>\n<p>“cow2”: “🐄”,<br></p>\n<p>“deer”: “🦌”,<br></p>\n<p>“dromedary_camel”: “🐪”,<br></p>\n<p>“camel”: “🐫”,<br></p>\n<p>“elephant”: “🐘”,<br></p>\n<p>“rhinoceros”: “🦏”,<br></p>\n<p>“gorilla”: “🦍”,<br></p>\n<p>“racehorse”: “🐎”,<br></p>\n<p>“pig2”: “🐖”,<br></p>\n<p>“goat”: “🐐”,<br></p>\n<p>“ram”: “🐏”,<br></p>\n<p>“sheep”: “🐑”,<br></p>\n<p>“dog2”: “🐕”,<br></p>\n<p>“poodle”: “🐩”,<br></p>\n<p>“cat2”: “🐈”,<br></p>\n<p>“rooster”: “🐓”,<br></p>\n<p>“turkey”: “🦃”,<br></p>\n<p>“dove”: “🕊”,<br></p>\n<p>“rabbit2”: “🐇”,<br></p>\n<p>“mouse2”: “🐁”,<br></p>\n<p>“rat”: “🐀”,<br></p>\n<p>“chipmunk”: “🐿”,<br></p>\n<p>“feet”: “🐾”,<br></p>\n<p>“paw_prints”: “🐾”,<br></p>\n<p>“dragon”: “🐉”,<br></p>\n<p>“dragon_face”: “🐲”,<br></p>\n<p>“cactus”: “🌵”,<br></p>\n<p>“christmas_tree”: “🎄”,<br></p>\n<p>“evergreen_tree”: “🌲”,<br></p>\n<p>“deciduous_tree”: “🌳”,<br></p>\n<p>“palm_tree”: “🌴”,<br></p>\n<p>“seedling”: “🌱”,<br></p>\n<p>“herb”: “🌿”,<br></p>\n<p>“shamrock”: “☘️”,<br></p>\n<p>“four_leaf_clover”: “🍀”,<br></p>\n<p>“bamboo”: “🎍”,<br></p>\n<p>“tanabata_tree”: “🎋”,<br></p>\n<p>“leaves”: “🍃”,<br></p>\n<p>“fallen_leaf”: “🍂”,<br></p>\n<p>“maple_leaf”: “🍁”,<br></p>\n<p>“mushroom”: “🍄”,<br></p>\n<p>“ear_of_rice”: “🌾”,<br></p>\n<p>“bouquet”: “💐”,<br></p>\n<p>“tulip”: “🌷”,<br></p>\n<p>“rose”: “🌹”,<br></p>\n<p>“wilted_flower”: “🥀”,<br></p>\n<p>“sunflower”: “🌻”,<br></p>\n<p>“blossom”: “🌼”,<br></p>\n<p>“cherry_blossom”: “🌸”,<br></p>\n<p>“hibiscus”: “🌺”,<br></p>\n<p>“earth_americas”: “🌎”,<br></p>\n<p>“earth_africa”: “🌍”,<br></p>\n<p>“earth_asia”: “🌏”,<br></p>\n<p>“full_moon”: “🌕”,<br></p>\n<p>“waning_gibbous_moon”: “🌖”,<br></p>\n<p>“last_quarter_moon”: “🌗”,<br></p>\n<p>“waning_crescent_moon”: “🌘”,<br></p>\n<p>“new_moon”: “🌑”,<br></p>\n<p>“waxing_crescent_moon”: “🌒”,<br></p>\n<p>“first_quarter_moon”: “🌓”,<br></p>\n<p>“moon”: “🌔”,<br></p>\n<p>“waxing_gibbous_moon”: “🌔”,<br></p>\n<p>“new_moon_with_face”: “🌚”,<br></p>\n<p>“full_moon_with_face”: “🌝”,<br></p>\n<p>“sun_with_face”: “🌞”,<br></p>\n<p>“first_quarter_moon_with_face”: “🌛”,<br></p>\n<p>“last_quarter_moon_with_face”: “🌜”,<br></p>\n<p>“crescent_moon”: “🌙”,<br></p>\n<p>“dizzy”: “💫”,<br></p>\n<p>“star”: “⭐️”,<br></p>\n<p>“star2”: “🌟”,<br></p>\n<p>“sparkles”: “✨”,<br></p>\n<p>“zap”: “⚡️”,<br></p>\n<p>“fire”: “🔥”,<br></p>\n<p>“boom”: “💥”,<br></p>\n<p>“collision”: “💥”,<br></p>\n<p>“comet”: “☄”,<br></p>\n<p>“sunny”: “☀️”,<br></p>\n<p>“sun_behind_small_cloud”: “🌤”,<br></p>\n<p>“partly_sunny”: “⛅️”,<br></p>\n<p>“sun_behind_large_cloud”: “🌥”,<br></p>\n<p>“sun_behind_rain_cloud”: “🌦”,<br></p>\n<p>“rainbow”: “🌈”,<br></p>\n<p>“cloud”: “☁️”,<br></p>\n<p>“cloud_with_rain”: “🌧”,<br></p>\n<p>“cloud_with_lightning_and_rain”: “⛈”,<br></p>\n<p>“cloud_with_lightning”: “🌩”,<br></p>\n<p>“cloud_with_snow”: “🌨”,<br></p>\n<p>“snowman_with_snow”: “☃️”,<br></p>\n<p>“snowman”: “⛄️”,<br></p>\n<p>“snowflake”: “❄️”,<br></p>\n<p>“wind_face”: “🌬”,<br></p>\n<p>“dash”: “💨”,<br></p>\n<p>“tornado”: “🌪”,<br></p>\n<p>“fog”: “🌫”,<br></p>\n<p>“ocean”: “🌊”,<br></p>\n<p>“droplet”: “💧”,<br></p>\n<p>“sweat_drops”: “💦”,<br></p>\n<p>“umbrella”: “☔️”,<br></p>\n<p>“green_apple”: “🍏”,<br></p>\n<p>“apple”: “🍎”,<br></p>\n<p>“pear”: “🍐”,<br></p>\n<p>“tangerine”: “🍊”,<br></p>\n<p>“orange”: “🍊”,<br></p>\n<p>“mandarin”: “🍊”,<br></p>\n<p>“lemon”: “🍋”,<br></p>\n<p>“banana”: “🍌”,<br></p>\n<p>“watermelon”: “🍉”,<br></p>\n<p>“grapes”: “🍇”,<br></p>\n<p>“strawberry”: “🍓”,<br></p>\n<p>“melon”: “🍈”,<br></p>\n<p>“cherries”: “🍒”,<br></p>\n<p>“peach”: “🍑”,<br></p>\n<p>“pineapple”: “🍍”,<br></p>\n<p>“kiwi_fruit”: “🥝”,<br></p>\n<p>“avocado”: “🥑”,<br></p>\n<p>“tomato”: “🍅”,<br></p>\n<p>“eggplant”: “🍆”,<br></p>\n<p>“cucumber”: “🥒”,<br></p>\n<p>“carrot”: “🥕”,<br></p>\n<p>“corn”: “🌽”,<br></p>\n<p>“hot_pepper”: “🌶”,<br></p>\n<p>“potato”: “🥔”,<br></p>\n<p>“sweet_potato”: “🍠”,<br></p>\n<p>“chestnut”: “🌰”,<br></p>\n<p>“peanuts”: “🥜”,<br></p>\n<p>“honey_pot”: “🍯”,<br></p>\n<p>“croissant”: “🥐”,<br></p>\n<p>“bread”: “🍞”,<br></p>\n<p>“baguette_bread”: “🥖”,<br></p>\n<p>“cheese”: “🧀”,<br></p>\n<p>“egg”: “🥚”,<br></p>\n<p>“fried_egg”: “🍳”,<br></p>\n<p>“bacon”: “🥓”,<br></p>\n<p>“pancakes”: “🥞”,<br></p>\n<p>“fried_shrimp”: “🍤”,<br></p>\n<p>“poultry_leg”: “🍗”,<br></p>\n<p>“meat_on_bone”: “🍖”,<br></p>\n<p>“pizza”: “🍕”,<br></p>\n<p>“hotdog”: “🌭”,<br></p>\n<p>“hamburger”: “🍔”,<br></p>\n<p>“fries”: “🍟”,<br></p>\n<p>“stuffed_flatbread”: “🥙”,<br></p>\n<p>“taco”: “🌮”,<br></p>\n<p>“burrito”: “🌯”,<br></p>\n<p>“green_salad”: “🥗”,<br></p>\n<p>“shallow_pan_of_food”: “🥘”,<br></p>\n<p>“spaghetti”: “🍝”,<br></p>\n<p>“ramen”: “🍜”,<br></p>\n<p>“stew”: “🍲”,<br></p>\n<p>“fish_cake”: “🍥”,<br></p>\n<p>“sushi”: “🍣”,<br></p>\n<p>“bento”: “🍱”,<br></p>\n<p>“curry”: “🍛”,<br></p>\n<p>“rice”: “🍚”,<br></p>\n<p>“rice_ball”: “🍙”,<br></p>\n<p>“rice_cracker”: “🍘”,<br></p>\n<p>“oden”: “🍢”,<br></p>\n<p>“dango”: “🍡”,<br></p>\n<p>“shaved_ice”: “🍧”,<br></p>\n<p>“ice_cream”: “🍨”,<br></p>\n<p>“icecream”: “🍦”,<br></p>\n<p>“cake”: “🍰”,<br></p>\n<p>“birthday”: “🎂”,<br></p>\n<p>“custard”: “🍮”,<br></p>\n<p>“lollipop”: “🍭”,<br></p>\n<p>“candy”: “🍬”,<br></p>\n<p>“chocolate_bar”: “🍫”,<br></p>\n<p>“popcorn”: “🍿”,<br></p>\n<p>“doughnut”: “🍩”,<br></p>\n<p>“cookie”: “🍪”,<br></p>\n<p>“milk_glass”: “🥛”,<br></p>\n<p>“baby_bottle”: “🍼”,<br></p>\n<p>“coffee”: “☕️”,<br></p>\n<p>“tea”: “🍵”,<br></p>\n<p>“sake”: “🍶”,<br></p>\n<p>“beer”: “🍺”,<br></p>\n<p>“beers”: “🍻”,<br></p>\n<p>“clinking_glasses”: “🥂”,<br></p>\n<p>“wine_glass”: “🍷”,<br></p>\n<p>“tumbler_glass”: “🥃”,<br></p>\n<p>“cocktail”: “🍸”,<br></p>\n<p>“tropical_drink”: “🍹”,<br></p>\n<p>“champagne”: “🍾”,<br></p>\n<p>“spoon”: “🥄”,<br></p>\n<p>“fork_and_knife”: “🍴”,<br></p>\n<p>“plate_with_cutlery”: “🍽”,<br></p>\n<p>“soccer”: “⚽️”,<br></p>\n<p>“basketball”: “🏀”,<br></p>\n<p>“football”: “🏈”,<br></p>\n<p>“baseball”: “⚾️”,<br></p>\n<p>“tennis”: “🎾”,<br></p>\n<p>“volleyball”: “🏐”,<br></p>\n<p>“rugby_football”: “🏉”,<br></p>\n<p>“8ball”: “🎱”,<br></p>\n<p>“ping_pong”: “🏓”,<br></p>\n<p>“badminton”: “🏸”,<br></p>\n<p>“goal_net”: “🥅”,<br></p>\n<p>“ice_hockey”: “🏒”,<br></p>\n<p>“field_hockey”: “🏑”,<br></p>\n<p>“cricket”: “🏏”,<br></p>\n<p>“golf”: “⛳️”,<br></p>\n<p>“bow_and_arrow”: “🏹”,<br></p>\n<p>“fishing_pole_and_fish”: “🎣”,<br></p>\n<p>“boxing_glove”: “🥊”,<br></p>\n<p>“martial_arts_uniform”: “🥋”,<br></p>\n<p>“ice_skate”: “⛸”,<br></p>\n<p>“ski”: “🎿”,<br></p>\n<p>“skier”: “⛷”,<br></p>\n<p>“snowboarder”: “🏂”,<br></p>\n<p>“weight_lifting_woman”: “🏋️‍♀️”,<br></p>\n<p>“weight_lifting_man”: “🏋”,<br></p>\n<p>“person_fencing”: “🤺”,<br></p>\n<p>“women_wrestling”: “🤼‍♀”,<br></p>\n<p>“men_wrestling”: “🤼‍♂”,<br></p>\n<p>“woman_cartwheeling”: “🤸‍♀”,<br></p>\n<p>“man_cartwheeling”: “🤸‍♂”,<br></p>\n<p>“basketball_woman”: “⛹️‍♀️”,<br></p>\n<p>“basketball_man”: “⛹”,<br></p>\n<p>“woman_playing_handball”: “🤾‍♀”,<br></p>\n<p>“man_playing_handball”: “🤾‍♂”,<br></p>\n<p>“golfing_woman”: “🏌️‍♀️”,<br></p>\n<p>“golfing_man”: “🏌”,<br></p>\n<p>“surfing_woman”: “🏄‍♀”,<br></p>\n<p>“surfing_man”: “🏄”,<br></p>\n<p>“surfer”: “🏄”,<br></p>\n<p>“swimming_woman”: “🏊‍♀”,<br></p>\n<p>“swimming_man”: “🏊”,<br></p>\n<p>“swimmer”: “🏊”,<br><br>“woman_playing_water_polo”: “🤽‍♀”,<br><br>“man_playing_water_polo”: “🤽‍♂”,<br><br>“rowing_woman”: “🚣‍♀”,<br><br>“rowing_man”: “🚣”,<br><br>“rowboat”: “🚣”,<br><br>“horse_racing”: “🏇”,<br><br>“biking_woman”: “🚴‍♀”,<br><br>“biking_man”: “🚴”,<br><br>“bicyclist”: “🚴”,<br><br>“mountain_biking_woman”: “🚵‍♀”,<br><br>“mountain_biking_man”: “🚵”,<br><br>“mountain_bicyclist”: “🚵”,<br><br>“running_shirt_with_sash”: “🎽”,<br><br>“medal_sports”: “🏅”,<br><br>“medal_military”: “🎖”,<br><br>“1st_place_medal”: “🥇”,<br><br>“2nd_place_medal”: “🥈”,<br><br>“3rd_place_medal”: “🥉”,<br><br>“trophy”: “🏆”,<br><br>“rosette”: “🏵”,<br><br>“reminder_ribbon”: “🎗”,<br><br>“ticket”: “🎫”,<br><br>“tickets”: “🎟”,<br><br>“circus_tent”: “🎪”,<br><br>“woman_juggling”: “🤹‍♀”,<br><br>“man_juggling”: “🤹‍♂”,<br><br>“performing_arts”: “🎭”,<br><br>“art”: “🎨”,<br><br>“clapper”: “🎬”,<br><br>“microphone”: “🎤”,<br><br>“headphones”: “🎧”,<br><br>“musical_score”: “🎼”,<br><br>“musical_keyboard”: “🎹”,<br><br>“drum”: “🥁”,<br><br>“saxophone”: “🎷”,<br><br>“trumpet”: “🎺”,<br><br>“guitar”: “🎸”,<br><br>“violin”: “🎻”,<br><br>“game_die”: “🎲”,<br><br>“dart”: “🎯”,<br><br>“bowling”: “🎳”,<br><br>“video_game”: “🎮”,<br><br>“slot_machine”: “🎰”,<br><br>“car”: “🚗”,<br><br>“red_car”: “🚗”,<br><br>“taxi”: “🚕”,<br><br>“blue_car”: “🚙”,<br><br>“bus”: “🚌”,<br><br>“trolleybus”: “🚎”,<br><br>“racing_car”: “🏎”,<br><br>“police_car”: “🚓”,<br><br>“ambulance”: “🚑”,<br><br>“fire_engine”: “🚒”,<br><br>“minibus”: “🚐”,<br><br>“truck”: “🚚”,<br><br>“articulated_lorry”: “🚛”,<br><br>“tractor”: “🚜”,<br><br>“kick_scooter”: “🛴”,<br><br>“bike”: “🚲”,<br><br>“motor_scooter”: “🛵”,<br><br>“motorcycle”: “🏍”,<br><br>“rotating_light”: “🚨”,<br><br>“oncoming_police_car”: “🚔”,<br><br>“oncoming_bus”: “🚍”,<br><br>“oncoming_automobile”: “🚘”,<br><br>“oncoming_taxi”: “🚖”,<br><br>“aerial_tramway”: “🚡”,<br><br>“mountain_cableway”: “🚠”,<br><br>“suspension_railway”: “🚟”,<br><br>“railway_car”: “🚃”,<br><br>“train”: “🚋”,<br><br>“mountain_railway”: “🚞”,<br><br>“monorail”: “🚝”,<br><br>“bullettrain_side”: “🚄”,<br><br>“bullettrain_front”: “🚅”,<br><br>“light_rail”: “🚈”,<br><br>“steam_locomotive”: “🚂”,<br><br>“train2”: “🚆”,<br><br>“metro”: “🚇”,<br><br>“tram”: “🚊”,<br><br>“station”: “🚉”,<br><br>“helicopter”: “🚁”,<br><br>“small_airplane”: “🛩”,<br><br>“airplane”: “✈️”,<br><br>“flight_departure”: “🛫”,<br><br>“flight_arrival”: “🛬”,<br><br>“rocket”: “🚀”,<br><br>“artificial_satellite”: “🛰”,<br><br>“seat”: “💺”,<br><br>“canoe”: “🛶”,<br><br>“boat”: “⛵️”,<br><br>“sailboat”: “⛵️”,<br><br>“motor_boat”: “🛥”,<br><br>“speedboat”: “🚤”,<br><br>“passenger_ship”: “🛳”,<br><br>“ferry”: “⛴”,<br><br>“ship”: “🚢”,<br><br>“anchor”: “⚓️”,<br><br>“construction”: “🚧”,<br><br>“fuelpump”: “⛽️”,<br><br>“busstop”: “🚏”,<br><br>“vertical_traffic_light”: “🚦”,<br><br>“traffic_light”: “🚥”,<br><br>“world_map”: “🗺”,<br><br>“moyai”: “🗿”,<br><br>“statue_of_liberty”: “🗽”,<br><br>“fountain”: “⛲️”,<br><br>“tokyo_tower”: “🗼”,<br><br>“european_castle”: “🏰”,<br><br>“japanese_castle”: “🏯”,<br><br>“stadium”: “🏟”,<br><br>“ferris_wheel”: “🎡”,<br><br>“roller_coaster”: “🎢”,<br><br>“carousel_horse”: “🎠”,<br><br>“parasol_on_ground”: “⛱”,<br><br>“beach_umbrella”: “🏖”,<br><br>“desert_island”: “🏝”,<br><br>“mountain”: “⛰”,<br><br>“mountain_snow”: “🏔”,<br><br>“mount_fuji”: “🗻”,<br><br>“volcano”: “🌋”,<br><br>“desert”: “🏜”,<br><br>“camping”: “🏕”,<br><br>“tent”: “⛺️”,<br><br>“railway_track”: “🛤”,<br><br>“motorway”: “🛣”,<br><br>“building_construction”: “🏗”,<br><br>“factory”: “🏭”,<br><br>“house”: “🏠”,<br><br>“house_with_garden”: “🏡”,<br><br>“houses”: “🏘”,<br><br>“derelict_house”: “🏚”,<br><br>“office”: “🏢”,<br><br>“department_store”: “🏬”,<br><br>“post_office”: “🏣”,<br><br>“european_post_office”: “🏤”,<br><br>“hospital”: “🏥”,<br><br>“bank”: “🏦”,<br><br>“hotel”: “🏨”,<br><br>“convenience_store”: “🏪”,<br><br>“school”: “🏫”,<br><br>“love_hotel”: “🏩”,<br><br>“wedding”: “💒”,<br><br>“classical_building”: “🏛”,<br><br>“church”: “⛪️”,<br><br>“mosque”: “🕌”,<br><br>“synagogue”: “🕍”,<br><br>“kaaba”: “🕋”,<br><br>“shinto_shrine”: “⛩”,<br><br>“japan”: “🗾”,<br><br>“rice_scene”: “🎑”,<br><br>“national_park”: “🏞”,<br><br>“sunrise”: “🌅”,<br><br>“sunrise_over_mountains”: “🌄”,<br><br>“stars”: “🌠”,<br><br>“sparkler”: “🎇”,<br><br>“fireworks”: “🎆”,<br><br>“city_sunrise”: “🌇”,<br><br>“city_sunset”: “🌆”,<br><br>“cityscape”: “🏙”,<br><br>“night_with_stars”: “🌃”,<br><br>“milky_way”: “🌌”,<br><br>“bridge_at_night”: “🌉”,<br><br>“foggy”: “🌁”,<br><br>“watch”: “⌚️”,<br><br>“iphone”: “📱”,<br><br>“calling”: “📲”,<br><br>“computer”: “💻”,<br><br>“keyboard”: “⌨️”,<br><br>“desktop_computer”: “🖥”,<br><br>“printer”: “🖨”,<br><br>“computer_mouse”: “🖱”,<br><br>“trackball”: “🖲”,<br><br>“joystick”: “🕹”,<br><br>“clamp”: “🗜”,<br><br>“minidisc”: “💽”,<br><br>“floppy_disk”: “💾”,<br><br>“cd”: “💿”,<br><br>“dvd”: “📀”,<br><br>“vhs”: “📼”,<br><br>“camera”: “📷”,<br><br>“camera_flash”: “📸”,<br><br>“video_camera”: “📹”,<br><br>“movie_camera”: “🎥”,<br><br>“film_projector”: “📽”,<br><br>“film_strip”: “🎞”,<br><br>“telephone_receiver”: “📞”,<br><br>“phone”: “☎️”,<br><br>“telephone”: “☎️”,<br><br>“pager”: “📟”,<br><br>“fax”: “📠”,<br><br>“tv”: “📺”,<br><br>“radio”: “📻”,<br><br>“studio_microphone”: “🎙”,<br><br>“level_slider”: “🎚”,<br><br>“control_knobs”: “🎛”,<br><br>“stopwatch”: “⏱”,<br><br>“timer_clock”: “⏲”,<br><br>“alarm_clock”: “⏰”,<br><br>“mantelpiece_clock”: “🕰”,<br><br>“hourglass”: “⌛️”,<br><br>“hourglass_flowing_sand”: “⏳”,<br><br>“satellite”: “📡”,<br><br>“battery”: “🔋”,<br><br>“electric_plug”: “🔌”,<br><br>“bulb”: “💡”,<br><br>“flashlight”: “🔦”,<br><br>“candle”: “🕯”,<br><br>“wastebasket”: “🗑”,<br><br>“oil_drum”: “🛢”,<br><br>“money_with_wings”: “💸”,<br><br>“dollar”: “💵”,<br><br>“yen”: “💴”,<br><br>“euro”: “💶”,<br><br>“pound”: “💷”,<br><br>“moneybag”: “💰”,<br><br>“credit_card”: “💳”,<br><br>“gem”: “💎”,<br><br>“balance_scale”: “⚖️”,<br><br>“wrench”: “🔧”,<br><br>“hammer”: “🔨”,<br><br>“hammer_and_pick”: “⚒”,<br><br>“hammer_and_wrench”: “🛠”,<br><br>“pick”: “⛏”,<br><br>“nut_and_bolt”: “🔩”,<br><br>“gear”: “⚙️”,<br><br>“chains”: “⛓”,<br><br>“gun”: “🔫”,<br><br>“bomb”: “💣”,<br><br>“hocho”: “🔪”,<br><br>“knife”: “🔪”,<br><br>“dagger”: “🗡”,<br><br>“crossed_swords”: “⚔️”,<br><br>“shield”: “🛡”,<br><br>“smoking”: “🚬”,<br><br>“coffin”: “⚰️”,<br><br>“funeral_urn”: “⚱️”,<br><br>“amphora”: “🏺”,<br><br>“crystal_ball”: “🔮”,<br><br>“prayer_beads”: “📿”,<br><br>“barber”: “💈”,<br><br>“alembic”: “⚗️”,<br><br>“telescope”: “🔭”,<br><br>“microscope”: “🔬”,<br><br>“hole”: “🕳”,<br><br>“pill”: “💊”,<br><br>“syringe”: “💉”,<br><br>“thermometer”: “🌡”,<br><br>“toilet”: “🚽”,<br><br>“potable_water”: “🚰”,<br><br>“shower”: “🚿”,<br><br>“bathtub”: “🛁”,<br><br>“bath”: “🛀”,<br><br>“bellhop_bell”: “🛎”,<br><br>“key”: “🔑”,<br><br>“old_key”: “🗝”,<br><br>“door”: “🚪”,<br><br>“couch_and_lamp”: “🛋”,<br><br>“bed”: “🛏”,<br><br>“sleeping_bed”: “🛌”,<br><br>“framed_picture”: “🖼”,<br><br>“shopping”: “🛍”,<br><br>“shopping_cart”: “🛒”,<br><br>“gift”: “🎁”,<br><br>“balloon”: “🎈”,<br><br>“flags”: “🎏”,<br><br>“ribbon”: “🎀”,<br><br>“confetti_ball”: “🎊”,<br><br>“tada”: “🎉”,<br><br>“dolls”: “🎎”,<br><br>“izakaya_lantern”: “🏮”,<br><br>“lantern”: “🏮”,<br><br>“wind_chime”: “🎐”,<br><br>“email”: “✉️”,<br><br>“envelope”: “✉️”,<br><br>“envelope_with_arrow”: “📩”,<br><br>“incoming_envelope”: “📨”,<br><br>“e-mail”: “📧”,<br><br>“love_letter”: “💌”,<br><br>“inbox_tray”: “📥”,<br><br>“outbox_tray”: “📤”,<br><br>“package”: “📦”,<br><br>“label”: “🏷”,<br><br>“mailbox_closed”: “📪”,<br><br>“mailbox”: “📫”,<br><br>“mailbox_with_mail”: “📬”,<br><br>“mailbox_with_no_mail”: “📭”,<br><br>“postbox”: “📮”,<br><br>“postal_horn”: “📯”,<br><br>“scroll”: “📜”,<br><br>“page_with_curl”: “📃”,<br><br>“page_facing_up”: “📄”,<br><br>“bookmark_tabs”: “📑”,<br><br>“bar_chart”: “📊”,<br><br>“chart_with_upwards_trend”: “📈”,<br><br>“chart_with_downwards_trend”: “📉”,<br><br>“spiral_notepad”: “🗒”,<br><br>“spiral_calendar”: “🗓”,<br><br>“calendar”: “📆”,<br><br>“date”: “📅”,<br><br>“card_index”: “📇”,<br><br>“card_file_box”: “🗃”,<br><br>“ballot_box”: “🗳”,<br><br>“file_cabinet”: “🗄”,<br><br>“clipboard”: “📋”,<br><br>“file_folder”: “📁”,<br><br>“open_file_folder”: “📂”,<br><br>“card_index_dividers”: “🗂”,<br><br>“newspaper_roll”: “🗞”,<br><br>“newspaper”: “📰”,<br><br>“notebook”: “📓”,<br><br>“notebook_with_decorative_cover”: “📔”,<br><br>“ledger”: “📒”,<br><br>“closed_book”: “📕”,<br><br>“green_book”: “📗”,<br><br>“blue_book”: “📘”,<br><br>“orange_book”: “📙”,<br><br>“books”: “📚”,<br><br>“book”: “📖”,<br><br>“open_book”: “📖”,<br><br>“bookmark”: “🔖”,<br><br>“link”: “🔗”,<br><br>“paperclip”: “📎”,<br><br>“paperclips”: “🖇”,<br><br>“triangular_ruler”: “📐”,<br><br>“straight_ruler”: “📏”,<br><br>“pushpin”: “📌”,<br><br>“round_pushpin”: “📍”,<br><br>“scissors”: “✂️”,<br><br>“pen”: “🖊”,<br><br>“fountain_pen”: “🖋”,<br><br>“black_nib”: “✒️”,<br><br>“paintbrush”: “🖌”,<br><br>“crayon”: “🖍”,<br><br>“memo”: “📝”,<br><br>“pencil”: “📝”,<br><br>“pencil2”: “✏️”,<br><br>“mag”: “🔍”,<br><br>“mag_right”: “🔎”,<br><br>“lock_with_ink_pen”: “🔏”,<br><br>“closed_lock_with_key”: “🔐”,<br><br>“lock”: “🔒”,<br><br>“unlock”: “🔓”,<br><br>“heart”: “❤️”,<br><br>“yellow_heart”: “💛”,<br><br>“green_heart”: “💚”,<br><br>“blue_heart”: “💙”,<br><br>“purple_heart”: “💜”,<br><br>“black_heart”: “🖤”,<br><br>“broken_heart”: “💔”,<br><br>“heavy_heart_exclamation”: “❣️”,<br><br>“two_hearts”: “💕”,<br><br>“revolving_hearts”: “💞”,<br><br>“heartbeat”: “💓”,<br><br>“heartpulse”: “💗”,<br><br>“sparkling_heart”: “💖”,<br><br>“cupid”: “💘”,<br><br>“gift_heart”: “💝”,<br><br>“heart_decoration”: “💟”,<br><br>“peace_symbol”: “☮️”,<br><br>“latin_cross”: “✝️”,<br><br>“star_and_crescent”: “☪️”,<br><br>“om”: “🕉”,<br><br>“wheel_of_dharma”: “☸️”,<br><br>“star_of_david”: “✡️”,<br><br>“six_pointed_star”: “🔯”,<br><br>“menorah”: “🕎”,<br><br>“yin_yang”: “☯️”,<br><br>“orthodox_cross”: “☦️”,<br><br>“place_of_worship”: “🛐”,<br><br>“ophiuchus”: “⛎”,<br><br>“aries”: “♈️”,<br><br>“taurus”: “♉️”,<br><br>“gemini”: “♊️”,<br><br>“cancer”: “♋️”,<br><br>“leo”: “♌️”,<br><br>“virgo”: “♍️”,<br><br>“libra”: “♎️”,<br><br>“scorpius”: “♏️”,<br><br>“sagittarius”: “♐️”,<br><br>“capricorn”: “♑️”,<br><br>“aquarius”: “♒️”,<br><br>“pisces”: “♓️”,<br><br>“id”: “🆔”,<br><br>“atom_symbol”: “⚛️”,<br><br>“accept”: “🉑”,<br><br>“radioactive”: “☢️”,<br><br>“biohazard”: “☣️”,<br><br>“mobile_phone_off”: “📴”,<br><br>“vibration_mode”: “📳”,<br><br>“eight_pointed_black_star”: “✴️”,<br><br>“vs”: “🆚”,<br><br>“white_flower”: “💮”,<br><br>“ideograph_advantage”: “🉐”,<br><br>“secret”: “㊙️”,<br><br>“congratulations”: “㊗️”,<br><br>“u6e80”: “🈵”,<br><br>“a”: “🅰️”,<br><br>“b”: “🅱️”,<br><br>“ab”: “🆎”,<br><br>“cl”: “🆑”,<br><br>“o2”: “🅾️”,<br><br>“sos”: “🆘”,<br><br>“x”: “❌”,<br><br>“o”: “⭕️”,<br><br>“stop_sign”: “🛑”,<br><br>“no_entry”: “⛔️”,<br><br>“name_badge”: “📛”,<br><br>“no_entry_sign”: “🚫”,<br><br>“anger”: “💢”,<br><br>“hotsprings”: “♨️”,<br><br>“no_pedestrians”: “🚷”,<br><br>“do_not_litter”: “🚯”,<br><br>“no_bicycles”: “🚳”,<br><br>“non-potable_water”: “🚱”,<br><br>“underage”: “🔞”,<br><br>“no_mobile_phones”: “📵”,<br><br>“no_smoking”: “🚭”,<br><br>“exclamation”: “❗️”,<br><br>“heavy_exclamation_mark”: “❗️”,<br><br>“grey_exclamation”: “❕”,<br><br>“question”: “❓”,<br><br>“grey_question”: “❔”,<br><br>“bangbang”: “‼️”,<br><br>“interrobang”: “⁉️”,<br><br>“low_brightness”: “🔅”,<br><br>“high_brightness”: “🔆”,<br><br>“part_alternation_mark”: “〽️”,<br><br>“warning”: “⚠️”,<br><br>“children_crossing”: “🚸”,<br><br>“trident”: “🔱”,<br><br>“fleur_de_lis”: “⚜️”,<br><br>“beginner”: “🔰”,<br><br>“recycle”: “♻️”,<br><br>“white_check_mark”: “✅”,<br><br>“chart”: “💹”,<br><br>“sparkle”: “❇️”,<br><br>“eight_spoked_asterisk”: “✳️”,<br><br>“negative_squared_cross_mark”: “❎”,<br><br>“globe_with_meridians”: “🌐”,<br><br>“diamond_shape_with_a_dot_inside”: “💠”,<br><br>“m”: “Ⓜ️”,<br><br>“cyclone”: “🌀”,<br><br>“zzz”: “💤”,<br><br>“atm”: “🏧”,<br><br>“wc”: “🚾”,<br><br>“wheelchair”: “♿️”,<br><br>“parking”: “🅿️”,<br><br>“sa”: “🈂️”,<br><br>“passport_control”: “🛂”,<br><br>“customs”: “🛃”,<br><br>“baggage_claim”: “🛄”,<br><br>“left_luggage”: “🛅”,<br><br>“mens”: “🚹”,<br><br>“womens”: “🚺”,<br><br>“baby_symbol”: “🚼”,<br><br>“restroom”: “🚻”,<br><br>“put_litter_in_its_place”: “🚮”,<br><br>“cinema”: “🎦”,<br><br>“signal_strength”: “📶”,<br><br>“koko”: “🈁”,<br><br>“symbols”: “🔣”,<br><br>“information_source”: “ℹ️”,<br><br>“abc”: “🔤”,<br><br>“abcd”: “🔡”,<br><br>“capital_abcd”: “🔠”,<br><br>“ng”: “🆖”,<br><br>“ok”: “🆗”,<br><br>“up”: “🆙”,<br><br>“cool”: “🆒”,<br><br>“new”: “🆕”,<br><br>“free”: “🆓”,<br><br>“zero”: “0️⃣”,<br><br>“one”: “1️⃣”,<br><br>“two”: “2️⃣”,<br><br>“three”: “3️⃣”,<br><br>“four”: “4️⃣”,<br><br>“five”: “5️⃣”,<br><br>“six”: “6️⃣”,<br><br>“seven”: “7️⃣”,<br><br>“eight”: “8️⃣”,<br><br>“nine”: “9️⃣”,<br><br>“keycap_ten”: “🔟”,<br><br>“hash”: “#️⃣”,<br><br>“asterisk”: “*️⃣”,<br><br>“arrow_forward”: “▶️”,<br><br>“pause_button”: “⏸”,<br><br>“play_or_pause_button”: “⏯”,<br><br>“stop_button”: “⏹”,<br><br>“record_button”: “⏺”,<br><br>“next_track_button”: “⏭”,<br><br>“previous_track_button”: “⏮”,<br><br>“fast_forward”: “⏩”,<br><br>“rewind”: “⏪”,<br><br>“arrow_double_up”: “⏫”,<br><br>“arrow_double_down”: “⏬”,<br><br>“arrow_backward”: “◀️”,<br><br>“arrow_up_small”: “🔼”,<br><br>“arrow_down_small”: “🔽”,<br><br>“arrow_right”: “➡️”,<br><br>“arrow_left”: “⬅️”,<br><br>“arrow_up”: “⬆️”,<br><br>“arrow_down”: “⬇️”,<br><br>“arrow_upper_right”: “↗️”,<br><br>“arrow_lower_right”: “↘️”,<br><br>“arrow_lower_left”: “↙️”,<br><br>“arrow_upper_left”: “↖️”,<br><br>“arrow_up_down”: “↕️”,<br><br>“left_right_arrow”: “↔️”,<br><br>“arrow_right_hook”: “↪️”,<br><br>“leftwards_arrow_with_hook”: “↩️”,<br><br>“arrow_heading_up”: “⤴️”,<br><br>“arrow_heading_down”: “⤵️”,<br><br>“twisted_rightwards_arrows”: “🔀”,<br><br>“repeat”: “🔁”,<br><br>“repeat_one”: “🔂”,<br><br>“arrows_counterclockwise”: “🔄”,<br><br>“arrows_clockwise”: “🔃”,<br><br>“musical_note”: “🎵”,<br><br>“notes”: “🎶”,<br><br>“heavy_plus_sign”: “➕”,<br><br>“heavy_minus_sign”: “➖”,<br><br>“heavy_division_sign”: “➗”,<br><br>“heavy_multiplication_x”: “✖️”,<br><br>“heavy_dollar_sign”: “💲”,<br><br>“currency_exchange”: “💱”,<br><br>“tm”: “™️”,<br><br>“copyright”: “©️”,<br><br>“registered”: “®️”,<br><br>“wavy_dash”: “〰️”,<br><br>“curly_loop”: “➰”,<br><br>“loop”: “➿”,<br><br>“end”: “🔚”,<br><br>“back”: “🔙”,<br><br>“on”: “🔛”,<br><br>“top”: “🔝”,<br><br>“soon”: “🔜”,<br><br>“heavy_check_mark”: “✔️”,<br><br>“ballot_box_with_check”: “☑️”,<br><br>“radio_button”: “🔘”,<br><br>“white_circle”: “⚪️”,<br><br>“black_circle”: “⚫️”,<br><br>“red_circle”: “🔴”,<br><br>“large_blue_circle”: “🔵”,<br><br>“small_red_triangle”: “🔺”,<br><br>“small_red_triangle_down”: “🔻”,<br><br>“small_orange_diamond”: “🔸”,<br><br>“small_blue_diamond”: “🔹”,<br><br>“large_orange_diamond”: “🔶”,<br><br>“large_blue_diamond”: “🔷”,<br><br>“white_square_button”: “🔳”,<br><br>“black_square_button”: “🔲”,<br><br>“black_small_square”: “▪️”,<br><br>“white_small_square”: “▫️”,<br><br>“black_medium_small_square”: “◾️”,<br><br>“white_medium_small_square”: “◽️”,<br><br>“black_medium_square”: “◼️”,<br><br>“white_medium_square”: “◻️”,<br><br>“black_large_square”: “⬛️”,<br><br>“white_large_square”: “⬜️”,<br><br>“speaker”: “🔈”,<br><br>“mute”: “🔇”,<br><br>“sound”: “🔉”,<br><br>“loud_sound”: “🔊”,<br><br>“bell”: “🔔”,<br><br>“no_bell”: “🔕”,<br><br>“mega”: “📣”,<br><br>“loudspeaker”: “📢”,<br><br>“eye_speech_bubble”: “👁‍🗨”,<br><br>“speech_balloon”: “💬”,<br><br>“thought_balloon”: “💭”,<br><br>“right_anger_bubble”: “🗯”,<br><br>“spades”: “♠️”,<br><br>“clubs”: “♣️”,<br><br>“hearts”: “♥️”,<br><br>“diamonds”: “♦️”,<br><br>“black_joker”: “🃏”,<br><br>“flower_playing_cards”: “🎴”,<br><br>“mahjong”: “🀄️”,<br><br>“clock1”: “🕐”,<br><br>“clock2”: “🕑”,<br><br>“clock3”: “🕒”,<br><br>“clock4”: “🕓”,<br><br>“clock5”: “🕔”,<br><br>“clock6”: “🕕”,<br><br>“clock7”: “🕖”,<br><br>“clock8”: “🕗”,<br><br>“clock9”: “🕘”,<br><br>“clock10”: “🕙”,<br><br>“clock11”: “🕚”,<br><br>“clock12”: “🕛”,<br><br>“clock130”: “🕜”,<br><br>“clock230”: “🕝”,<br><br>“clock330”: “🕞”,<br><br>“clock430”: “🕟”,<br><br>“clock530”: “🕠”,<br><br>“clock630”: “🕡”,<br><br>“clock730”: “🕢”,<br><br>“clock830”: “🕣”,<br><br>“clock930”: “🕤”,<br><br>“clock1030”: “🕥”,<br><br>“clock1130”: “🕦”,<br><br>“clock1230”: “🕧”,<br><br>“white_flag”: “🏳️”,<br><br>“black_flag”: “🏴”,<br><br>“checkered_flag”: “🏁”,<br><br>“triangular_flag_on_post”: “🚩”,<br><br>“rainbow_flag”: “🏳️‍🌈”,<br><br>“afghanistan”: “🇦🇫”,<br><br>“aland_islands”: “🇦🇽”,<br><br>“albania”: “🇦🇱”,<br><br>“algeria”: “🇩🇿”,<br><br>“american_samoa”: “🇦🇸”,<br><br>“andorra”: “🇦🇩”,<br><br>“angola”: “🇦🇴”,<br><br>“anguilla”: “🇦🇮”,<br><br>“antarctica”: “🇦🇶”,<br><br>“antigua_barbuda”: “🇦🇬”,<br><br>“argentina”: “🇦🇷”,<br><br>“armenia”: “🇦🇲”,<br><br>“aruba”: “🇦🇼”,<br><br>“australia”: “🇦🇺”,<br><br>“austria”: “🇦🇹”,<br><br>“azerbaijan”: “🇦🇿”,<br><br>“bahamas”: “🇧🇸”,<br><br>“bahrain”: “🇧🇭”,<br><br>“bangladesh”: “🇧🇩”,<br><br>“barbados”: “🇧🇧”,<br><br>“belarus”: “🇧🇾”,<br><br>“belgium”: “🇧🇪”,<br><br>“belize”: “🇧🇿”,<br><br>“benin”: “🇧🇯”,<br><br>“bermuda”: “🇧🇲”,<br><br>“bhutan”: “🇧🇹”,<br><br>“bolivia”: “🇧🇴”,<br><br>“caribbean_netherlands”: “🇧🇶”,<br><br>“bosnia_herzegovina”: “🇧🇦”,<br><br>“botswana”: “🇧🇼”,<br><br>“brazil”: “🇧🇷”,<br><br>“british_indian_ocean_territory”: “🇮🇴”,<br><br>“british_virgin_islands”: “🇻🇬”,<br><br>“brunei”: “🇧🇳”,<br><br>“bulgaria”: “🇧🇬”,<br><br>“burkina_faso”: “🇧🇫”,<br><br>“burundi”: “🇧🇮”,<br><br>“cape_verde”: “🇨🇻”,<br><br>“cambodia”: “🇰🇭”,<br><br>“cameroon”: “🇨🇲”,<br><br>“canada”: “🇨🇦”,<br><br>“canary_islands”: “🇮🇨”,<br><br>“cayman_islands”: “🇰🇾”,<br><br>“central_african_republic”: “🇨🇫”,<br><br>“chad”: “🇹🇩”,<br><br>“chile”: “🇨🇱”,<br><br>“cn”: “🇨🇳”,<br><br>“christmas_island”: “🇨🇽”,<br><br>“cocos_islands”: “🇨🇨”,<br><br>“colombia”: “🇨🇴”,<br><br>“comoros”: “🇰🇲”,<br><br>“congo_brazzaville”: “🇨🇬”,<br><br>“congo_kinshasa”: “🇨🇩”,<br><br>“cook_islands”: “🇨🇰”,<br><br>“costa_rica”: “🇨🇷”,<br><br>“cote_divoire”: “🇨🇮”,<br><br>“croatia”: “🇭🇷”,<br><br>“cuba”: “🇨🇺”,<br><br>“curacao”: “🇨🇼”,<br><br>“cyprus”: “🇨🇾”,<br><br>“czech_republic”: “🇨🇿”,<br><br>“denmark”: “🇩🇰”,<br><br>“djibouti”: “🇩🇯”,<br><br>“dominica”: “🇩🇲”,<br><br>“dominican_republic”: “🇩🇴”,<br><br>“ecuador”: “🇪🇨”,<br><br>“egypt”: “🇪🇬”,<br><br>“el_salvador”: “🇸🇻”,<br><br>“equatorial_guinea”: “🇬🇶”,<br><br>“eritrea”: “🇪🇷”,<br><br>“estonia”: “🇪🇪”,<br><br>“ethiopia”: “🇪🇹”,<br><br>“eu”: “🇪🇺”,<br><br>“european_union”: “🇪🇺”,<br><br>“falkland_islands”: “🇫🇰”,<br><br>“faroe_islands”: “🇫🇴”,<br><br>“fiji”: “🇫🇯”,<br><br>“finland”: “🇫🇮”,<br><br>“fr”: “🇫🇷”,<br><br>“french_guiana”: “🇬🇫”,<br><br>“french_polynesia”: “🇵🇫”,<br><br>“french_southern_territories”: “🇹🇫”,<br><br>“gabon”: “🇬🇦”,<br><br>“gambia”: “🇬🇲”,<br><br>“georgia”: “🇬🇪”,<br><br>“de”: “🇩🇪”,<br><br>“ghana”: “🇬🇭”,<br><br>“gibraltar”: “🇬🇮”,<br><br>“greece”: “🇬🇷”,<br><br>“greenland”: “🇬🇱”,<br><br>“grenada”: “🇬🇩”,<br><br>“guadeloupe”: “🇬🇵”,<br><br>“guam”: “🇬🇺”,<br><br>“guatemala”: “🇬🇹”,<br><br>“guernsey”: “🇬🇬”,<br><br>“guinea”: “🇬🇳”,<br><br>“guinea_bissau”: “🇬🇼”,<br><br>“guyana”: “🇬🇾”,<br><br>“haiti”: “🇭🇹”,<br><br>“honduras”: “🇭🇳”,<br><br>“hong_kong”: “🇭🇰”,<br><br>“hungary”: “🇭🇺”,<br><br>“iceland”: “🇮🇸”,<br><br>“india”: “🇮🇳”,<br><br>“indonesia”: “🇮🇩”,<br><br>“iran”: “🇮🇷”,<br><br>“iraq”: “🇮🇶”,<br><br>“ireland”: “🇮🇪”,<br><br>“isle_of_man”: “🇮🇲”,<br><br>“israel”: “🇮🇱”,<br><br>“it”: “🇮🇹”,<br><br>“jamaica”: “🇯🇲”,<br><br>“jp”: “🇯🇵”,<br><br>“crossed_flags”: “🎌”,<br><br>“jersey”: “🇯🇪”,<br><br>“jordan”: “🇯🇴”,<br><br>“kazakhstan”: “🇰🇿”,<br><br>“kenya”: “🇰🇪”,<br><br>“kiribati”: “🇰🇮”,<br><br>“kosovo”: “🇽🇰”,<br><br>“kuwait”: “🇰🇼”,<br><br>“kyrgyzstan”: “🇰🇬”,<br><br>“laos”: “🇱🇦”,<br><br>“latvia”: “🇱🇻”,<br><br>“lebanon”: “🇱🇧”,<br><br>“lesotho”: “🇱🇸”,<br><br>“liberia”: “🇱🇷”,<br><br>“libya”: “🇱🇾”,<br><br>“liechtenstein”: “🇱🇮”,<br><br>“lithuania”: “🇱🇹”,<br><br>“luxembourg”: “🇱🇺”,<br><br>“macau”: “🇲🇴”,<br><br>“macedonia”: “🇲🇰”,<br><br>“madagascar”: “🇲🇬”,<br><br>“malawi”: “🇲🇼”,<br><br>“malaysia”: “🇲🇾”,<br><br>“maldives”: “🇲🇻”,<br><br>“mali”: “🇲🇱”,<br><br>“malta”: “🇲🇹”,<br><br>“marshall_islands”: “🇲🇭”,<br><br>“martinique”: “🇲🇶”,<br><br>“mauritania”: “🇲🇷”,<br><br>“mauritius”: “🇲🇺”,<br><br>“mayotte”: “🇾🇹”,<br><br>“mexico”: “🇲🇽”,<br><br>“micronesia”: “🇫🇲”,<br><br>“moldova”: “🇲🇩”,<br><br>“monaco”: “🇲🇨”,<br><br>“mongolia”: “🇲🇳”,<br><br>“montenegro”: “🇲🇪”,<br><br>“montserrat”: “🇲🇸”,<br><br>“morocco”: “🇲🇦”,<br><br>“mozambique”: “🇲🇿”,<br><br>“myanmar”: “🇲🇲”,<br><br>“namibia”: “🇳🇦”,<br><br>“nauru”: “🇳🇷”,<br><br>“nepal”: “🇳🇵”,<br><br>“netherlands”: “🇳🇱”,<br><br>“new_caledonia”: “🇳🇨”,<br><br>“new_zealand”: “🇳🇿”,<br><br>“nicaragua”: “🇳🇮”,<br><br>“niger”: “🇳🇪”,<br><br>“nigeria”: “🇳🇬”,<br><br>“niue”: “🇳🇺”,<br><br>“norfolk_island”: “🇳🇫”,<br><br>“northern_mariana_islands”: “🇲🇵”,<br><br>“north_korea”: “🇰🇵”,<br><br>“norway”: “🇳🇴”,<br><br>“oman”: “🇴🇲”,<br><br>“pakistan”: “🇵🇰”,<br><br>“palau”: “🇵🇼”,<br><br>“palestinian_territories”: “🇵🇸”,<br><br>“panama”: “🇵🇦”,<br><br>“papua_new_guinea”: “🇵🇬”,<br><br>“paraguay”: “🇵🇾”,<br><br>“peru”: “🇵🇪”,<br><br>“philippines”: “🇵🇭”,<br><br>“pitcairn_islands”: “🇵🇳”,<br><br>“poland”: “🇵🇱”,<br><br>“portugal”: “🇵🇹”,<br><br>“puerto_rico”: “🇵🇷”,<br><br>“qatar”: “🇶🇦”,<br><br>“reunion”: “🇷🇪”,<br><br>“romania”: “🇷🇴”,<br><br>“ru”: “🇷🇺”,<br><br>“rwanda”: “🇷🇼”,<br><br>“st_barthelemy”: “🇧🇱”,<br><br>“st_helena”: “🇸🇭”,<br><br>“st_kitts_nevis”: “🇰🇳”,<br><br>“st_lucia”: “🇱🇨”,<br><br>“st_pierre_miquelon”: “🇵🇲”,<br><br>“st_vincent_grenadines”: “🇻🇨”,<br><br>“samoa”: “🇼🇸”,<br><br>“san_marino”: “🇸🇲”,<br><br>“sao_tome_principe”: “🇸🇹”,<br><br>“saudi_arabia”: “🇸🇦”,<br><br>“senegal”: “🇸🇳”,<br><br>“serbia”: “🇷🇸”,<br><br>“seychelles”: “🇸🇨”,<br><br>“sierra_leone”: “🇸🇱”,<br><br>“singapore”: “🇸🇬”,<br><br>“sint_maarten”: “🇸🇽”,<br><br>“slovakia”: “🇸🇰”,<br><br>“slovenia”: “🇸🇮”,<br><br>“solomon_islands”: “🇸🇧”,<br><br>“somalia”: “🇸🇴”,<br><br>“south_africa”: “🇿🇦”,<br><br>“south_georgia_south_sandwich_islands”: “🇬🇸”,<br><br>“kr”: “🇰🇷”,<br><br>“south_sudan”: “🇸🇸”,<br><br>“es”: “🇪🇸”,<br><br>“sri_lanka”: “🇱🇰”,<br><br>“sudan”: “🇸🇩”,<br><br>“suriname”: “🇸🇷”,<br><br>“swaziland”: “🇸🇿”,<br><br>“sweden”: “🇸🇪”,<br><br>“switzerland”: “🇨🇭”,<br><br>“syria”: “🇸🇾”,<br><br>“taiwan”: “🇹🇼”,<br><br>“tajikistan”: “🇹🇯”,<br><br>“tanzania”: “🇹🇿”,<br><br>“thailand”: “🇹🇭”,<br><br>“timor_leste”: “🇹🇱”,<br><br>“togo”: “🇹🇬”,<br><br>“tokelau”: “🇹🇰”,<br><br>“tonga”: “🇹🇴”,<br><br>“trinidad_tobago”: “🇹🇹”,<br><br>“tunisia”: “🇹🇳”,<br><br>“tr”: “🇹🇷”,<br><br>“turkmenistan”: “🇹🇲”,<br><br>“turks_caicos_islands”: “🇹🇨”,<br><br>“tuvalu”: “🇹🇻”,<br><br>“uganda”: “🇺🇬”,<br><br>“ukraine”: “🇺🇦”,<br><br>“united_arab_emirates”: “🇦🇪”,<br><br>“gb”: “🇬🇧”,<br><br>“uk”: “🇬🇧”,<br><br>“us”: “🇺🇸”,<br><br>“us_virgin_islands”: “🇻🇮”,<br><br>“uruguay”: “🇺🇾”,<br><br>“uzbekistan”: “🇺🇿”,<br><br>“vanuatu”: “🇻🇺”,<br><br>“vatican_city”: “🇻🇦”,<br><br>“venezuela”: “🇻🇪”,<br><br>“vietnam”: “🇻🇳”,<br><br>“wallis_futuna”: “🇼🇫”,<br><br>“western_sahara”: “🇪🇭”,<br><br>“yemen”: “🇾🇪”,<br><br>“zambia”: “🇿🇲”,<br><br>“zimbabwe”: “🇿🇼”</p>\n","site":{"data":{}},"excerpt":"","more":"<p>angry: [ ‘😠’, ‘😠’ ],</p>\n<p>blush: [ ‘😊’, ‘😊’ ],</p>\n<p>broken_heart: [ ‘💔’, ‘💔’ ],</p>\n<p>confused: [ ‘😕’, ‘😕’ ], </p>\n<p>cry: [ “:’(”, “:’-(”, ‘😢’, ‘😢’ ],</p>\n<p>frowning: [ ‘😦’, ‘😦’ ],</p>\n<p>heart: [ ‘❤️’ ],</p>\n<p>imp: [ ‘👿’, ‘👿’ ],</p>\n<p>innocent: [ ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’, ‘😇’ ],</p>\n<p>joy: [ “:’)”, “:’-)”, ‘😂’, ‘😂’, “😂”, “:’-D”, ‘😂’, ‘😂’ ],</p>\n<p>kissing: [ ‘:’, ‘:-’ ],</p>\n<p>laughing: [ ‘😆’, ‘😆’ ],</p>\n<p>neutral_face: [ ‘😐’, ‘😐’ ],</p>\n<p>open_mouth: [ ‘😮’, ‘😮’, ‘😮’, ‘😮’ ],</p>\n<p>rage: [ ‘😡’, ‘😡’ ],</p>\n<p>smile: [ ‘😄’, ‘😄’ ],</p>\n<p>smiley: [ ‘😃’, ‘😃’ ],</p>\n<p>smiling_imp: [ ‘😈’, ‘😈’ ],</p>\n<p>sob: [ “:,’(”, “:,’-(”, ‘😭’, ‘😭’ ],</p>\n<p>stuck_out_tongue: [ ‘😛’, ‘😛’ ],</p>\n<p>sunglasses: [ ‘😎’, ‘😎’ ],</p>\n<p>sweat: [ ‘😓’, ‘😓’ ],</p>\n<p>sweat_smile: [ ‘😅’, ‘😅’ ],</p>\n<p>unamused: [ ‘😒’, ‘😒’, ‘😒’, ‘😒’, ‘:′,′:− &#x27;, &#x27;:-<br>′<br> ,<br>′<br> :−’ ],</p>\n<p>wink: [ ‘😉’, ‘😉’ ]</p>\n<p>“grinning”: “😀”,<br></p>\n<p>“smiley”: “😃”,<br></p>\n<p>“smile”: “😄”,<br></p>\n<p>“grin”: “😁”,<br></p>\n<p>“laughing”: “😆”,<br></p>\n<p>“satisfied”: “😆”,<br></p>\n<p>“sweat_smile”: “😅”,<br></p>\n<p>“joy”: “😂”,<br></p>\n<p>“blush”: “😊”,<br></p>\n<p>“innocent”: “😇”,<br></p>\n<p>“wink”: “😉”,<br></p>\n<p>“relieved”: “😌”,<br></p>\n<p>“heart_eyes”: “😍”,<br></p>\n<p>“kissing_heart”: “😘”,<br></p>\n<p>“kissing”: “😗”,<br></p>\n<p>“kissing_smiling_eyes”: “😙”,<br></p>\n<p>“kissing_closed_eyes”: “😚”,<br></p>\n<p>“yum”: “😋”,<br></p>\n<p>“stuck_out_tongue_winking_eye”: “😜”,<br></p>\n<p>“stuck_out_tongue_closed_eyes”: “😝”,<br></p>\n<p>“stuck_out_tongue”: “😛”,<br></p>\n<p>“sunglasses”: “😎”,<br></p>\n<p>“smirk”: “😏”,<br></p>\n<p>“unamused”: “😒”,<br></p>\n<p>“disappointed”: “😞”,<br></p>\n<p>“pensive”: “😔”,<br></p>\n<p>“worried”: “😟”,<br></p>\n<p>“confused”: “😕”,<br></p>\n<p>“persevere”: “😣”,<br></p>\n<p>“confounded”: “😖”,<br></p>\n<p>“tired_face”: “😫”,<br></p>\n<p>“weary”: “😩”,<br></p>\n<p>“angry”: “😠”,<br></p>\n<p>“rage”: “😡”,<br></p>\n<p>“pout”: “😡”,<br></p>\n<p>“no_mouth”: “😶”,<br></p>\n<p>“neutral_face”: “😐”,<br></p>\n<p>“expressionless”: “😑”,<br></p>\n<p>“hushed”: “😯”,<br></p>\n<p>“frowning”: “😦”,<br></p>\n<p>“anguished”: “😧”,<br></p>\n<p>“open_mouth”: “😮”,<br></p>\n<p>“astonished”: “😲”,<br></p>\n<p>“dizzy_face”: “😵”,<br></p>\n<p>“flushed”: “😳”,<br></p>\n<p>“scream”: “😱”,<br></p>\n<p>“fearful”: “😨”,<br></p>\n<p>“cold_sweat”: “😰”,<br></p>\n<p>“cry”: “😢”,<br></p>\n<p>“disappointed_relieved”: “😥”,<br></p>\n<p>“sob”: “😭”,<br></p>\n<p>“sweat”: “😓”,<br></p>\n<p>“sleepy”: “😪”,<br></p>\n<p>“sleeping”: “😴”,<br></p>\n<p>“mask”: “😷”,<br></p>\n<p>“smiling_imp”: “😈”,<br></p>\n<p>“smiley_cat”: “😺”,<br></p>\n<p>“smile_cat”: “😸”,<br></p>\n<p>“joy_cat”: “😹”,<br></p>\n<p>“heart_eyes_cat”: “😻”,<br></p>\n<p>“smirk_cat”: “😼”,<br></p>\n<p>“kissing_cat”: “😽”,<br></p>\n<p>“scream_cat”: “🙀”,<br></p>\n<p>“crying_cat_face”: “😿”,<br></p>\n<p>“pouting_cat”: “😾”,<br></p>\n<p>“fist_raised”: “✊”,<br></p>\n<p>“fist”: “✊”,<br></p>\n<p>“v”: “✌️”,<br></p>\n<p>“point_up”: “☝️”,<br></p>\n<p>“hand”: “✋”,<br></p>\n<p>“raised_hand”: “✋”,<br></p>\n<p>“cat”: “🐱”,<br></p>\n<p>“mouse”: “🐭”,<br></p>\n<p>“cow”: “🐮”,<br></p>\n<p>“monkey_face”: “🐵”,<br></p>\n<p>“star”: “⭐️”,<br></p>\n<p>“sparkles”: “✨”,<br></p>\n<p>“zap”: “⚡️”,<br></p>\n<p>“sunny”: “☀️”,<br></p>\n<p>“cloud”: “☁️”,<br></p>\n<p>“snowflake”: “❄️”,<br></p>\n<p>“umbrella”: “☔️”,<br></p>\n<p>“coffee”: “☕️”,<br></p>\n<p>“airplane”: “✈️”,<br></p>\n<p>“anchor”: “⚓️”,<br></p>\n<p>“watch”: “⌚️”,<br></p>\n<p>“phone”: “☎️”,<br></p>\n<p>“telephone”: “☎️”,<br></p>\n<p>“hourglass”: “⌛️”,<br></p>\n<p>“email”: “✉️”,<br></p>\n<p>“envelope”: “✉️”,<br></p>\n<p>“scissors”: “✂️”,<br></p>\n<p>“black_nib”: “✒️”,<br></p>\n<p>“pencil2”: “✏️”,<br></p>\n<p>“heart”: “❤️”,<br></p>\n<p>“aries”: “♈️”,<br></p>\n<p>“taurus”: “♉️”,<br></p>\n<p>“gemini”: “♊️”,<br></p>\n<p>“cancer”: “♋️”,<br></p>\n<p>“leo”: “♌️”,<br></p>\n<p>“virgo”: “♍️”,<br></p>\n<p>“libra”: “♎️”,<br></p>\n<p>“scorpius”: “♏️”,<br></p>\n<p>“sagittarius”: “♐️”,<br></p>\n<p>“capricorn”: “♑️”,<br></p>\n<p>“aquarius”: “♒️”,<br></p>\n<p>“pisces”: “♓️”,<br></p>\n<p>“eight_pointed_black_star”: “✴️”,<br></p>\n<p>“x”: “❌”,<br></p>\n<p>“hotsprings”: “♨️”,<br></p>\n<p>“exclamation”: “❗️”,<br></p>\n<p>“heavy_exclamation_mark”: “❗️”,<br></p>\n<p>“grey_exclamation”: “❕”,<br></p>\n<p>“question”: “❓”,<br></p>\n<p>“grey_question”: “❔”,<br></p>\n<p>“bangbang”: “‼️”,<br></p>\n<p>“interrobang”: “⁉️”,<br></p>\n<p>“part_alternation_mark”: “〽️”,<br></p>\n<p>“warning”: “⚠️”,<br></p>\n<p>“recycle”: “♻️”,<br></p>\n<p>“white_check_mark”: “✅”,<br></p>\n<p>“sparkle”: “❇️”,<br></p>\n<p>“eight_spoked_asterisk”: “✳️”,<br></p>\n<p>“negative_squared_cross_mark”: “❎”,<br></p>\n<p>“m”: “Ⓜ️”,<br></p>\n<p>“wheelchair”: “♿️”,<br></p>\n<p>“information_source”: “ℹ️”,<br></p>\n<p>“heavy_plus_sign”: “➕”,<br></p>\n<p>“heavy_minus_sign”: “➖”,<br></p>\n<p>“heavy_division_sign”: “➗”,<br></p>\n<p>“heavy_multiplication_x”: “✖️”,<br></p>\n<p>“tm”: “™️”,<br></p>\n<p>“copyright”: “©️”,<br></p>\n<p>“registered”: “®️”,<br></p>\n<p>“wavy_dash”: “〰️”,<br></p>\n<p>“curly_loop”: “➰”,<br></p>\n<p>“loop”: “➿”,<br></p>\n<p>“heavy_check_mark”: “✔️”,<br></p>\n<p>“ballot_box_with_check”: “☑️”,<br></p>\n<p>“white_circle”: “⚪️”,<br></p>\n<p>“black_circle”: “⚫️”,<br></p>\n<p>“black_small_square”: “▪️”,<br></p>\n<p>“white_small_square”: “▫️”,<br></p>\n<p>“black_medium_small_square”: “◾️”,<br></p>\n<p>“white_medium_small_square”: “◽️”,<br></p>\n<p>“black_medium_square”: “◼️”,<br></p>\n<p>“white_medium_square”: “◻️”,<br></p>\n<p>“black_large_square”: “⬛️”,<br></p>\n<p>“white_large_square”: “⬜️”,<br></p>\n<p>“black_joker”: “🃏”,<br></p>\n<p>“mahjong”: “🀄️”</p>\n<p>“100”: “💯”,<br></p>\n<p>“1234”: “🔢”,<br></p>\n<p>“grinning”: “😀”,<br></p>\n<p>“smiley”: “😃”,<br></p>\n<p>“smile”: “😄”,<br></p>\n<p>“grin”: “😁”,<br></p>\n<p>“laughing”: “😆”,<br></p>\n<p>“satisfied”: “😆”,<br></p>\n<p>“sweat_smile”: “😅”,<br></p>\n<p>“joy”: “😂”,<br></p>\n<p>“rofl”: “🤣”,<br></p>\n<p>“relaxed”: “☺️”,<br></p>\n<p>“blush”: “😊”,<br></p>\n<p>“innocent”: “😇”,<br></p>\n<p>“slightly_smiling_face”: “🙂”,<br></p>\n<p>“upside_down_face”: “🙃”,<br></p>\n<p>“wink”: “😉”,<br></p>\n<p>“relieved”: “😌”,<br></p>\n<p>“heart_eyes”: “😍”,<br></p>\n<p>“kissing_heart”: “😘”,<br></p>\n<p>“kissing”: “😗”,<br></p>\n<p>“kissing_smiling_eyes”: “😙”,<br></p>\n<p>“kissing_closed_eyes”: “😚”,<br></p>\n<p>“yum”: “😋”,<br></p>\n<p>“stuck_out_tongue_winking_eye”: “😜”,<br></p>\n<p>“stuck_out_tongue_closed_eyes”: “😝”,<br></p>\n<p>“stuck_out_tongue”: “😛”,<br></p>\n<p>“money_mouth_face”: “🤑”,<br></p>\n<p>“hugs”: “🤗”,<br></p>\n<p>“nerd_face”: “🤓”,<br></p>\n<p>“sunglasses”: “😎”,<br></p>\n<p>“clown_face”: “🤡”,<br></p>\n<p>“cowboy_hat_face”: “🤠”,<br></p>\n<p>“smirk”: “😏”,<br></p>\n<p>“unamused”: “😒”,<br></p>\n<p>“disappointed”: “😞”,<br></p>\n<p>“pensive”: “😔”,<br></p>\n<p>“worried”: “😟”,<br></p>\n<p>“confused”: “😕”,<br></p>\n<p>“slightly_frowning_face”: “🙁”,<br></p>\n<p>“frowning_face”: “☹️”,<br></p>\n<p>“persevere”: “😣”,<br></p>\n<p>“confounded”: “😖”,<br></p>\n<p>“tired_face”: “😫”,<br></p>\n<p>“weary”: “😩”,<br></p>\n<p>“triumph”: “😤”,<br></p>\n<p>“angry”: “😠”,<br></p>\n<p>“rage”: “😡”,<br></p>\n<p>“pout”: “😡”,<br></p>\n<p>“no_mouth”: “😶”,<br></p>\n<p>“neutral_face”: “😐”,<br></p>\n<p>“expressionless”: “😑”,<br></p>\n<p>“hushed”: “😯”,<br></p>\n<p>“frowning”: “😦”,<br></p>\n<p>“anguished”: “😧”,<br></p>\n<p>“open_mouth”: “😮”,<br></p>\n<p>“astonished”: “😲”,<br></p>\n<p>“dizzy_face”: “😵”,<br></p>\n<p>“flushed”: “😳”,<br></p>\n<p>“scream”: “😱”,<br></p>\n<p>“fearful”: “😨”,<br></p>\n<p>“cold_sweat”: “😰”,<br></p>\n<p>“cry”: “😢”,<br></p>\n<p>“disappointed_relieved”: “😥”,<br></p>\n<p>“drooling_face”: “🤤”,<br></p>\n<p>“sob”: “😭”,<br></p>\n<p>“sweat”: “😓”,<br></p>\n<p>“sleepy”: “😪”,<br></p>\n<p>“sleeping”: “😴”,<br></p>\n<p>“roll_eyes”: “🙄”,<br></p>\n<p>“thinking”: “🤔”,<br></p>\n<p>“lying_face”: “🤥”,<br></p>\n<p>“grimacing”: “😬”,<br></p>\n<p>“zipper_mouth_face”: “🤐”,<br></p>\n<p>“nauseated_face”: “🤢”,<br></p>\n<p>“sneezing_face”: “🤧”,<br></p>\n<p>“mask”: “😷”,<br></p>\n<p>“face_with_thermometer”: “🤒”,<br></p>\n<p>“face_with_head_bandage”: “🤕”,<br></p>\n<p>“smiling_imp”: “😈”,<br></p>\n<p>“imp”: “👿”,<br></p>\n<p>“japanese_ogre”: “👹”,<br></p>\n<p>“japanese_goblin”: “👺”,<br></p>\n<p>“hankey”: “💩”,<br></p>\n<p>“poop”: “💩”,<br></p>\n<p>“shit”: “💩”,<br></p>\n<p>“ghost”: “👻”,<br></p>\n<p>“skull”: “💀”,<br></p>\n<p>“skull_and_crossbones”: “☠️”,<br></p>\n<p>“alien”: “👽”,<br></p>\n<p>“space_invader”: “👾”,<br></p>\n<p>“robot”: “🤖”,<br></p>\n<p>“jack_o_lantern”: “🎃”,<br></p>\n<p>“smiley_cat”: “😺”,<br></p>\n<p>“smile_cat”: “😸”,<br></p>\n<p>“joy_cat”: “😹”,<br></p>\n<p>“heart_eyes_cat”: “😻”,<br></p>\n<p>“smirk_cat”: “😼”,<br></p>\n<p>“kissing_cat”: “😽”,<br></p>\n<p>“scream_cat”: “🙀”,<br></p>\n<p>“crying_cat_face”: “😿”,<br></p>\n<p>“pouting_cat”: “😾”,<br></p>\n<p>“open_hands”: “👐”,<br></p>\n<p>“raised_hands”: “🙌”,<br></p>\n<p>“clap”: “👏”,<br></p>\n<p>“pray”: “🙏”,<br></p>\n<p>“handshake”: “🤝”,<br></p>\n<p>“+1”: “👍”,<br></p>\n<p>“thumbsup”: “👍”,<br></p>\n<p>“-1”: “👎”,<br></p>\n<p>“thumbsdown”: “👎”,<br></p>\n<p>“fist_oncoming”: “👊”,<br></p>\n<p>“facepunch”: “👊”,<br></p>\n<p>“punch”: “👊”,<br></p>\n<p>“fist_raised”: “✊”,<br></p>\n<p>“fist”: “✊”,<br></p>\n<p>“fist_left”: “🤛”,<br></p>\n<p>“fist_right”: “🤜”,<br></p>\n<p>“crossed_fingers”: “🤞”,<br></p>\n<p>“v”: “✌️”,<br></p>\n<p>“metal”: “🤘”,<br></p>\n<p>“ok_hand”: “👌”,<br></p>\n<p>“point_left”: “👈”,<br></p>\n<p>“point_right”: “👉”,<br></p>\n<p>“point_up_2”: “👆”,<br></p>\n<p>“point_down”: “👇”,<br></p>\n<p>“point_up”: “☝️”,<br></p>\n<p>“hand”: “✋”,<br></p>\n<p>“raised_hand”: “✋”,<br></p>\n<p>“raised_back_of_hand”: “🤚”,<br></p>\n<p>“raised_hand_with_fingers_splayed”: “🖐”,<br></p>\n<p>“vulcan_salute”: “🖖”,<br></p>\n<p>“wave”: “👋”,<br></p>\n<p>“call_me_hand”: “🤙”,<br></p>\n<p>“muscle”: “💪”,<br></p>\n<p>“middle_finger”: “🖕”,<br></p>\n<p>“fu”: “🖕”,<br></p>\n<p>“writing_hand”: “✍️”,<br></p>\n<p>“selfie”: “🤳”,<br></p>\n<p>“nail_care”: “💅”,<br></p>\n<p>“ring”: “💍”,<br></p>\n<p>“lipstick”: “💄”,<br></p>\n<p>“kiss”: “💋”,<br></p>\n<p>“lips”: “👄”,<br></p>\n<p>“tongue”: “👅”,<br></p>\n<p>“ear”: “👂”,<br></p>\n<p>“nose”: “👃”,<br></p>\n<p>“footprints”: “👣”,<br></p>\n<p>“eye”: “👁”,<br></p>\n<p>“eyes”: “👀”,<br></p>\n<p>“speaking_head”: “🗣”,<br></p>\n<p>“bust_in_silhouette”: “👤”,<br></p>\n<p>“busts_in_silhouette”: “👥”,<br></p>\n<p>“baby”: “👶”,<br></p>\n<p>“boy”: “👦”,<br></p>\n<p>“girl”: “👧”,<br></p>\n<p>“man”: “👨”,<br></p>\n<p>“woman”: “👩”,<br></p>\n<p>“blonde_woman”: “👱‍♀”,<br></p>\n<p>“blonde_man”: “👱”,<br></p>\n<p>“person_with_blond_hair”: “👱”,<br></p>\n<p>“older_man”: “👴”,<br></p>\n<p>“older_woman”: “👵”,<br></p>\n<p>“man_with_gua_pi_mao”: “👲”,<br></p>\n<p>“woman_with_turban”: “👳‍♀”,<br></p>\n<p>“man_with_turban”: “👳”,<br></p>\n<p>“policewoman”: “👮‍♀”,<br></p>\n<p>“policeman”: “👮”,<br></p>\n<p>“cop”: “👮”,<br></p>\n<p>“construction_worker_woman”: “👷‍♀”,<br></p>\n<p>“construction_worker_man”: “👷”,<br></p>\n<p>“construction_worker”: “👷”,<br></p>\n<p>“guardswoman”: “💂‍♀”,<br></p>\n<p>“guardsman”: “💂”,<br></p>\n<p>“female_detective”: “🕵️‍♀️”,<br></p>\n<p>“male_detective”: “🕵”,<br></p>\n<p>“detective”: “🕵”,<br></p>\n<p>“woman_health_worker”: “👩‍⚕”,<br></p>\n<p>“man_health_worker”: “👨‍⚕”,<br></p>\n<p>“woman_farmer”: “👩‍🌾”,<br></p>\n<p>“man_farmer”: “👨‍🌾”,<br></p>\n<p>“woman_cook”: “👩‍🍳”,<br></p>\n<p>“man_cook”: “👨‍🍳”,<br></p>\n<p>“woman_student”: “👩‍🎓”,<br></p>\n<p>“man_student”: “👨‍🎓”,<br></p>\n<p>“woman_singer”: “👩‍🎤”,<br></p>\n<p>“man_singer”: “👨‍🎤”,<br></p>\n<p>“woman_teacher”: “👩‍🏫”,<br></p>\n<p>“man_teacher”: “👨‍🏫”,<br></p>\n<p>“woman_factory_worker”: “👩‍🏭”,<br></p>\n<p>“man_factory_worker”: “👨‍🏭”,<br></p>\n<p>“woman_technologist”: “👩‍💻”,<br></p>\n<p>“man_technologist”: “👨‍💻”,<br></p>\n<p>“woman_office_worker”: “👩‍💼”,<br></p>\n<p>“man_office_worker”: “👨‍💼”,<br></p>\n<p>“woman_mechanic”: “👩‍🔧”,<br></p>\n<p>“man_mechanic”: “👨‍🔧”,<br></p>\n<p>“woman_scientist”: “👩‍🔬”,<br></p>\n<p>“man_scientist”: “👨‍🔬”,<br></p>\n<p>“woman_artist”: “👩‍🎨”,<br></p>\n<p>“man_artist”: “👨‍🎨”,<br></p>\n<p>“woman_firefighter”: “👩‍🚒”,<br></p>\n<p>“man_firefighter”: “👨‍🚒”,<br></p>\n<p>“woman_pilot”: “👩‍✈”,<br></p>\n<p>“man_pilot”: “👨‍✈”,<br></p>\n<p>“woman_astronaut”: “👩‍🚀”,<br></p>\n<p>“man_astronaut”: “👨‍🚀”,<br></p>\n<p>“woman_judge”: “👩‍⚖”,<br></p>\n<p>“man_judge”: “👨‍⚖”,<br></p>\n<p>“mrs_claus”: “🤶”,<br></p>\n<p>“santa”: “🎅”,<br></p>\n<p>“princess”: “👸”,<br></p>\n<p>“prince”: “🤴”,<br></p>\n<p>“bride_with_veil”: “👰”,<br></p>\n<p>“man_in_tuxedo”: “🤵”,<br></p>\n<p>“angel”: “👼”,<br></p>\n<p>“pregnant_woman”: “🤰”,<br></p>\n<p>“bowing_woman”: “🙇‍♀”,<br></p>\n<p>“bowing_man”: “🙇”,<br></p>\n<p>“bow”: “🙇”,<br></p>\n<p>“tipping_hand_woman”: “💁”,<br></p>\n<p>“information_desk_person”: “💁”,<br></p>\n<p>“sassy_woman”: “💁”,<br></p>\n<p>“tipping_hand_man”: “💁‍♂”,<br></p>\n<p>“sassy_man”: “💁‍♂”,<br></p>\n<p>“no_good_woman”: “🙅”,<br></p>\n<p>“no_good”: “🙅”,<br></p>\n<p>“ng_woman”: “🙅”,<br></p>\n<p>“no_good_man”: “🙅‍♂”,<br></p>\n<p>“ng_man”: “🙅‍♂”,<br></p>\n<p>“ok_woman”: “🙆”,<br></p>\n<p>“ok_man”: “🙆‍♂”,<br></p>\n<p>“raising_hand_woman”: “🙋”,<br></p>\n<p>“raising_hand”: “🙋”,<br></p>\n<p>“raising_hand_man”: “🙋‍♂”,<br></p>\n<p>“woman_facepalming”: “🤦‍♀”,<br></p>\n<p>“man_facepalming”: “🤦‍♂”,<br></p>\n<p>“woman_shrugging”: “🤷‍♀”,<br></p>\n<p>“man_shrugging”: “🤷‍♂”,<br></p>\n<p>“pouting_woman”: “🙎”,<br></p>\n<p>“person_with_pouting_face”: “🙎”,<br></p>\n<p>“pouting_man”: “🙎‍♂”,<br></p>\n<p>“frowning_woman”: “🙍”,<br></p>\n<p>“person_frowning”: “🙍”,<br></p>\n<p>“frowning_man”: “🙍‍♂”,<br></p>\n<p>“haircut_woman”: “💇”,<br></p>\n<p>“haircut”: “💇”,<br></p>\n<p>“haircut_man”: “💇‍♂”,<br></p>\n<p>“massage_woman”: “💆”,<br></p>\n<p>“massage”: “💆”,<br></p>\n<p>“massage_man”: “💆‍♂”,<br></p>\n<p>“business_suit_levitating”: “🕴”,<br></p>\n<p>“dancer”: “💃”,<br></p>\n<p>“man_dancing”: “🕺”,<br></p>\n<p>“dancing_women”: “👯”,<br></p>\n<p>“dancers”: “👯”,<br></p>\n<p>“dancing_men”: “👯‍♂”,<br></p>\n<p>“walking_woman”: “🚶‍♀”,<br></p>\n<p>“walking_man”: “🚶”,<br></p>\n<p>“walking”: “🚶”,<br></p>\n<p>“running_woman”: “🏃‍♀”,<br></p>\n<p>“running_man”: “🏃”,<br></p>\n<p>“runner”: “🏃”,<br></p>\n<p>“running”: “🏃”,<br></p>\n<p>“couple”: “👫”,<br></p>\n<p>“two_women_holding_hands”: “👭”,<br></p>\n<p>“two_men_holding_hands”: “👬”,<br></p>\n<p>“couple_with_heart_woman_man”: “💑”,<br></p>\n<p>“couple_with_heart”: “💑”,<br></p>\n<p>“couple_with_heart_woman_woman”: “👩‍❤️‍👩”,<br></p>\n<p>“couple_with_heart_man_man”: “👨‍❤️‍👨”,<br></p>\n<p>“couplekiss_man_woman”: “💏”,<br></p>\n<p>“couplekiss_woman_woman”: “👩‍❤️‍💋‍👩”,<br></p>\n<p>“couplekiss_man_man”: “👨‍❤️‍💋‍👨”,<br></p>\n<p>“family_man_woman_boy”: “👪”,<br></p>\n<p>“family”: “👪”,<br></p>\n<p>“family_man_woman_girl”: “👨‍👩‍👧”,<br></p>\n<p>“family_man_woman_girl_boy”: “👨‍👩‍👧‍👦”,<br></p>\n<p>“family_man_woman_boy_boy”: “👨‍👩‍👦‍👦”,<br></p>\n<p>“family_man_woman_girl_girl”: “👨‍👩‍👧‍👧”,<br></p>\n<p>“family_woman_woman_boy”: “👩‍👩‍👦”,<br></p>\n<p>“family_woman_woman_girl”: “👩‍👩‍👧”,<br></p>\n<p>“family_woman_woman_girl_boy”: “👩‍👩‍👧‍👦”,<br></p>\n<p>“family_woman_woman_boy_boy”: “👩‍👩‍👦‍👦”,<br></p>\n<p>“family_woman_woman_girl_girl”: “👩‍👩‍👧‍👧”,<br></p>\n<p>“family_man_man_boy”: “👨‍👨‍👦”,<br></p>\n<p>“family_man_man_girl”: “👨‍👨‍👧”,<br></p>\n<p>“family_man_man_girl_boy”: “👨‍👨‍👧‍👦”,<br></p>\n<p>“family_man_man_boy_boy”: “👨‍👨‍👦‍👦”,<br></p>\n<p>“family_man_man_girl_girl”: “👨‍👨‍👧‍👧”,<br></p>\n<p>“family_woman_boy”: “👩‍👦”,<br></p>\n<p>“family_woman_girl”: “👩‍👧”,<br></p>\n<p>“family_woman_girl_boy”: “👩‍👧‍👦”,<br></p>\n<p>“family_woman_boy_boy”: “👩‍👦‍👦”,<br></p>\n<p>“family_woman_girl_girl”: “👩‍👧‍👧”,<br></p>\n<p>“family_man_boy”: “👨‍👦”,<br></p>\n<p>“family_man_girl”: “👨‍👧”,<br></p>\n<p>“family_man_girl_boy”: “👨‍👧‍👦”,<br></p>\n<p>“family_man_boy_boy”: “👨‍👦‍👦”,<br></p>\n<p>“family_man_girl_girl”: “👨‍👧‍👧”,<br></p>\n<p>“womans_clothes”: “👚”,<br></p>\n<p>“shirt”: “👕”,<br></p>\n<p>“tshirt”: “👕”,<br></p>\n<p>“jeans”: “👖”,<br></p>\n<p>“necktie”: “👔”,<br></p>\n<p>“dress”: “👗”,<br></p>\n<p>“bikini”: “👙”,<br></p>\n<p>“kimono”: “👘”,<br></p>\n<p>“high_heel”: “👠”,<br></p>\n<p>“sandal”: “👡”,<br></p>\n<p>“boot”: “👢”,<br></p>\n<p>“mans_shoe”: “👞”,<br></p>\n<p>“shoe”: “👞”,<br></p>\n<p>“athletic_shoe”: “👟”,<br></p>\n<p>“womans_hat”: “👒”,<br></p>\n<p>“tophat”: “🎩”,<br></p>\n<p>“mortar_board”: “🎓”,<br></p>\n<p>“crown”: “👑”,<br></p>\n<p>“rescue_worker_helmet”: “⛑”,<br></p>\n<p>“school_satchel”: “🎒”,<br></p>\n<p>“pouch”: “👝”,<br></p>\n<p>“purse”: “👛”,<br></p>\n<p>“handbag”: “👜”,<br></p>\n<p>“briefcase”: “💼”,<br></p>\n<p>“eyeglasses”: “👓”,<br></p>\n<p>“dark_sunglasses”: “🕶”,<br></p>\n<p>“closed_umbrella”: “🌂”,<br></p>\n<p>“open_umbrella”: “☂️”,<br></p>\n<p>“dog”: “🐶”,<br></p>\n<p>“cat”: “🐱”,<br></p>\n<p>“mouse”: “🐭”,<br></p>\n<p>“hamster”: “🐹”,<br></p>\n<p>“rabbit”: “🐰”,<br></p>\n<p>“fox_face”: “🦊”,<br></p>\n<p>“bear”: “🐻”,<br></p>\n<p>“panda_face”: “🐼”,<br></p>\n<p>“koala”: “🐨”,<br></p>\n<p>“tiger”: “🐯”,<br></p>\n<p>“lion”: “🦁”,<br></p>\n<p>“cow”: “🐮”,<br></p>\n<p>“pig”: “🐷”,<br></p>\n<p>“pig_nose”: “🐽”,<br></p>\n<p>“frog”: “🐸”,<br></p>\n<p>“monkey_face”: “🐵”,<br></p>\n<p>“see_no_evil”: “🙈”,<br></p>\n<p>“hear_no_evil”: “🙉”,<br></p>\n<p>“speak_no_evil”: “🙊”,<br></p>\n<p>“monkey”: “🐒”,<br></p>\n<p>“chicken”: “🐔”,<br></p>\n<p>“penguin”: “🐧”,<br></p>\n<p>“bird”: “🐦”,<br></p>\n<p>“baby_chick”: “🐤”,<br></p>\n<p>“hatching_chick”: “🐣”,<br></p>\n<p>“hatched_chick”: “🐥”,<br></p>\n<p>“duck”: “🦆”,<br></p>\n<p>“eagle”: “🦅”,<br></p>\n<p>“owl”: “🦉”,<br></p>\n<p>“bat”: “🦇”,<br></p>\n<p>“wolf”: “🐺”,<br></p>\n<p>“boar”: “🐗”,<br></p>\n<p>“horse”: “🐴”,<br></p>\n<p>“unicorn”: “🦄”,<br></p>\n<p>“bee”: “🐝”,<br></p>\n<p>“honeybee”: “🐝”,<br></p>\n<p>“bug”: “🐛”,<br></p>\n<p>“butterfly”: “🦋”,<br></p>\n<p>“snail”: “🐌”,<br></p>\n<p>“shell”: “🐚”,<br></p>\n<p>“beetle”: “🐞”,<br></p>\n<p>“ant”: “🐜”,<br></p>\n<p>“spider”: “🕷”,<br></p>\n<p>“spider_web”: “🕸”,<br></p>\n<p>“turtle”: “🐢”,<br></p>\n<p>“snake”: “🐍”,<br></p>\n<p>“lizard”: “🦎”,<br></p>\n<p>“scorpion”: “🦂”,<br></p>\n<p>“crab”: “🦀”,<br></p>\n<p>“squid”: “🦑”,<br></p>\n<p>“octopus”: “🐙”,<br></p>\n<p>“shrimp”: “🦐”,<br></p>\n<p>“tropical_fish”: “🐠”,<br></p>\n<p>“fish”: “🐟”,<br></p>\n<p>“blowfish”: “🐡”,<br></p>\n<p>“dolphin”: “🐬”,<br></p>\n<p>“flipper”: “🐬”,<br></p>\n<p>“shark”: “🦈”,<br></p>\n<p>“whale”: “🐳”,<br></p>\n<p>“whale2”: “🐋”,<br></p>\n<p>“crocodile”: “🐊”,<br></p>\n<p>“leopard”: “🐆”,<br></p>\n<p>“tiger2”: “🐅”,<br></p>\n<p>“water_buffalo”: “🐃”,<br></p>\n<p>“ox”: “🐂”,<br></p>\n<p>“cow2”: “🐄”,<br></p>\n<p>“deer”: “🦌”,<br></p>\n<p>“dromedary_camel”: “🐪”,<br></p>\n<p>“camel”: “🐫”,<br></p>\n<p>“elephant”: “🐘”,<br></p>\n<p>“rhinoceros”: “🦏”,<br></p>\n<p>“gorilla”: “🦍”,<br></p>\n<p>“racehorse”: “🐎”,<br></p>\n<p>“pig2”: “🐖”,<br></p>\n<p>“goat”: “🐐”,<br></p>\n<p>“ram”: “🐏”,<br></p>\n<p>“sheep”: “🐑”,<br></p>\n<p>“dog2”: “🐕”,<br></p>\n<p>“poodle”: “🐩”,<br></p>\n<p>“cat2”: “🐈”,<br></p>\n<p>“rooster”: “🐓”,<br></p>\n<p>“turkey”: “🦃”,<br></p>\n<p>“dove”: “🕊”,<br></p>\n<p>“rabbit2”: “🐇”,<br></p>\n<p>“mouse2”: “🐁”,<br></p>\n<p>“rat”: “🐀”,<br></p>\n<p>“chipmunk”: “🐿”,<br></p>\n<p>“feet”: “🐾”,<br></p>\n<p>“paw_prints”: “🐾”,<br></p>\n<p>“dragon”: “🐉”,<br></p>\n<p>“dragon_face”: “🐲”,<br></p>\n<p>“cactus”: “🌵”,<br></p>\n<p>“christmas_tree”: “🎄”,<br></p>\n<p>“evergreen_tree”: “🌲”,<br></p>\n<p>“deciduous_tree”: “🌳”,<br></p>\n<p>“palm_tree”: “🌴”,<br></p>\n<p>“seedling”: “🌱”,<br></p>\n<p>“herb”: “🌿”,<br></p>\n<p>“shamrock”: “☘️”,<br></p>\n<p>“four_leaf_clover”: “🍀”,<br></p>\n<p>“bamboo”: “🎍”,<br></p>\n<p>“tanabata_tree”: “🎋”,<br></p>\n<p>“leaves”: “🍃”,<br></p>\n<p>“fallen_leaf”: “🍂”,<br></p>\n<p>“maple_leaf”: “🍁”,<br></p>\n<p>“mushroom”: “🍄”,<br></p>\n<p>“ear_of_rice”: “🌾”,<br></p>\n<p>“bouquet”: “💐”,<br></p>\n<p>“tulip”: “🌷”,<br></p>\n<p>“rose”: “🌹”,<br></p>\n<p>“wilted_flower”: “🥀”,<br></p>\n<p>“sunflower”: “🌻”,<br></p>\n<p>“blossom”: “🌼”,<br></p>\n<p>“cherry_blossom”: “🌸”,<br></p>\n<p>“hibiscus”: “🌺”,<br></p>\n<p>“earth_americas”: “🌎”,<br></p>\n<p>“earth_africa”: “🌍”,<br></p>\n<p>“earth_asia”: “🌏”,<br></p>\n<p>“full_moon”: “🌕”,<br></p>\n<p>“waning_gibbous_moon”: “🌖”,<br></p>\n<p>“last_quarter_moon”: “🌗”,<br></p>\n<p>“waning_crescent_moon”: “🌘”,<br></p>\n<p>“new_moon”: “🌑”,<br></p>\n<p>“waxing_crescent_moon”: “🌒”,<br></p>\n<p>“first_quarter_moon”: “🌓”,<br></p>\n<p>“moon”: “🌔”,<br></p>\n<p>“waxing_gibbous_moon”: “🌔”,<br></p>\n<p>“new_moon_with_face”: “🌚”,<br></p>\n<p>“full_moon_with_face”: “🌝”,<br></p>\n<p>“sun_with_face”: “🌞”,<br></p>\n<p>“first_quarter_moon_with_face”: “🌛”,<br></p>\n<p>“last_quarter_moon_with_face”: “🌜”,<br></p>\n<p>“crescent_moon”: “🌙”,<br></p>\n<p>“dizzy”: “💫”,<br></p>\n<p>“star”: “⭐️”,<br></p>\n<p>“star2”: “🌟”,<br></p>\n<p>“sparkles”: “✨”,<br></p>\n<p>“zap”: “⚡️”,<br></p>\n<p>“fire”: “🔥”,<br></p>\n<p>“boom”: “💥”,<br></p>\n<p>“collision”: “💥”,<br></p>\n<p>“comet”: “☄”,<br></p>\n<p>“sunny”: “☀️”,<br></p>\n<p>“sun_behind_small_cloud”: “🌤”,<br></p>\n<p>“partly_sunny”: “⛅️”,<br></p>\n<p>“sun_behind_large_cloud”: “🌥”,<br></p>\n<p>“sun_behind_rain_cloud”: “🌦”,<br></p>\n<p>“rainbow”: “🌈”,<br></p>\n<p>“cloud”: “☁️”,<br></p>\n<p>“cloud_with_rain”: “🌧”,<br></p>\n<p>“cloud_with_lightning_and_rain”: “⛈”,<br></p>\n<p>“cloud_with_lightning”: “🌩”,<br></p>\n<p>“cloud_with_snow”: “🌨”,<br></p>\n<p>“snowman_with_snow”: “☃️”,<br></p>\n<p>“snowman”: “⛄️”,<br></p>\n<p>“snowflake”: “❄️”,<br></p>\n<p>“wind_face”: “🌬”,<br></p>\n<p>“dash”: “💨”,<br></p>\n<p>“tornado”: “🌪”,<br></p>\n<p>“fog”: “🌫”,<br></p>\n<p>“ocean”: “🌊”,<br></p>\n<p>“droplet”: “💧”,<br></p>\n<p>“sweat_drops”: “💦”,<br></p>\n<p>“umbrella”: “☔️”,<br></p>\n<p>“green_apple”: “🍏”,<br></p>\n<p>“apple”: “🍎”,<br></p>\n<p>“pear”: “🍐”,<br></p>\n<p>“tangerine”: “🍊”,<br></p>\n<p>“orange”: “🍊”,<br></p>\n<p>“mandarin”: “🍊”,<br></p>\n<p>“lemon”: “🍋”,<br></p>\n<p>“banana”: “🍌”,<br></p>\n<p>“watermelon”: “🍉”,<br></p>\n<p>“grapes”: “🍇”,<br></p>\n<p>“strawberry”: “🍓”,<br></p>\n<p>“melon”: “🍈”,<br></p>\n<p>“cherries”: “🍒”,<br></p>\n<p>“peach”: “🍑”,<br></p>\n<p>“pineapple”: “🍍”,<br></p>\n<p>“kiwi_fruit”: “🥝”,<br></p>\n<p>“avocado”: “🥑”,<br></p>\n<p>“tomato”: “🍅”,<br></p>\n<p>“eggplant”: “🍆”,<br></p>\n<p>“cucumber”: “🥒”,<br></p>\n<p>“carrot”: “🥕”,<br></p>\n<p>“corn”: “🌽”,<br></p>\n<p>“hot_pepper”: “🌶”,<br></p>\n<p>“potato”: “🥔”,<br></p>\n<p>“sweet_potato”: “🍠”,<br></p>\n<p>“chestnut”: “🌰”,<br></p>\n<p>“peanuts”: “🥜”,<br></p>\n<p>“honey_pot”: “🍯”,<br></p>\n<p>“croissant”: “🥐”,<br></p>\n<p>“bread”: “🍞”,<br></p>\n<p>“baguette_bread”: “🥖”,<br></p>\n<p>“cheese”: “🧀”,<br></p>\n<p>“egg”: “🥚”,<br></p>\n<p>“fried_egg”: “🍳”,<br></p>\n<p>“bacon”: “🥓”,<br></p>\n<p>“pancakes”: “🥞”,<br></p>\n<p>“fried_shrimp”: “🍤”,<br></p>\n<p>“poultry_leg”: “🍗”,<br></p>\n<p>“meat_on_bone”: “🍖”,<br></p>\n<p>“pizza”: “🍕”,<br></p>\n<p>“hotdog”: “🌭”,<br></p>\n<p>“hamburger”: “🍔”,<br></p>\n<p>“fries”: “🍟”,<br></p>\n<p>“stuffed_flatbread”: “🥙”,<br></p>\n<p>“taco”: “🌮”,<br></p>\n<p>“burrito”: “🌯”,<br></p>\n<p>“green_salad”: “🥗”,<br></p>\n<p>“shallow_pan_of_food”: “🥘”,<br></p>\n<p>“spaghetti”: “🍝”,<br></p>\n<p>“ramen”: “🍜”,<br></p>\n<p>“stew”: “🍲”,<br></p>\n<p>“fish_cake”: “🍥”,<br></p>\n<p>“sushi”: “🍣”,<br></p>\n<p>“bento”: “🍱”,<br></p>\n<p>“curry”: “🍛”,<br></p>\n<p>“rice”: “🍚”,<br></p>\n<p>“rice_ball”: “🍙”,<br></p>\n<p>“rice_cracker”: “🍘”,<br></p>\n<p>“oden”: “🍢”,<br></p>\n<p>“dango”: “🍡”,<br></p>\n<p>“shaved_ice”: “🍧”,<br></p>\n<p>“ice_cream”: “🍨”,<br></p>\n<p>“icecream”: “🍦”,<br></p>\n<p>“cake”: “🍰”,<br></p>\n<p>“birthday”: “🎂”,<br></p>\n<p>“custard”: “🍮”,<br></p>\n<p>“lollipop”: “🍭”,<br></p>\n<p>“candy”: “🍬”,<br></p>\n<p>“chocolate_bar”: “🍫”,<br></p>\n<p>“popcorn”: “🍿”,<br></p>\n<p>“doughnut”: “🍩”,<br></p>\n<p>“cookie”: “🍪”,<br></p>\n<p>“milk_glass”: “🥛”,<br></p>\n<p>“baby_bottle”: “🍼”,<br></p>\n<p>“coffee”: “☕️”,<br></p>\n<p>“tea”: “🍵”,<br></p>\n<p>“sake”: “🍶”,<br></p>\n<p>“beer”: “🍺”,<br></p>\n<p>“beers”: “🍻”,<br></p>\n<p>“clinking_glasses”: “🥂”,<br></p>\n<p>“wine_glass”: “🍷”,<br></p>\n<p>“tumbler_glass”: “🥃”,<br></p>\n<p>“cocktail”: “🍸”,<br></p>\n<p>“tropical_drink”: “🍹”,<br></p>\n<p>“champagne”: “🍾”,<br></p>\n<p>“spoon”: “🥄”,<br></p>\n<p>“fork_and_knife”: “🍴”,<br></p>\n<p>“plate_with_cutlery”: “🍽”,<br></p>\n<p>“soccer”: “⚽️”,<br></p>\n<p>“basketball”: “🏀”,<br></p>\n<p>“football”: “🏈”,<br></p>\n<p>“baseball”: “⚾️”,<br></p>\n<p>“tennis”: “🎾”,<br></p>\n<p>“volleyball”: “🏐”,<br></p>\n<p>“rugby_football”: “🏉”,<br></p>\n<p>“8ball”: “🎱”,<br></p>\n<p>“ping_pong”: “🏓”,<br></p>\n<p>“badminton”: “🏸”,<br></p>\n<p>“goal_net”: “🥅”,<br></p>\n<p>“ice_hockey”: “🏒”,<br></p>\n<p>“field_hockey”: “🏑”,<br></p>\n<p>“cricket”: “🏏”,<br></p>\n<p>“golf”: “⛳️”,<br></p>\n<p>“bow_and_arrow”: “🏹”,<br></p>\n<p>“fishing_pole_and_fish”: “🎣”,<br></p>\n<p>“boxing_glove”: “🥊”,<br></p>\n<p>“martial_arts_uniform”: “🥋”,<br></p>\n<p>“ice_skate”: “⛸”,<br></p>\n<p>“ski”: “🎿”,<br></p>\n<p>“skier”: “⛷”,<br></p>\n<p>“snowboarder”: “🏂”,<br></p>\n<p>“weight_lifting_woman”: “🏋️‍♀️”,<br></p>\n<p>“weight_lifting_man”: “🏋”,<br></p>\n<p>“person_fencing”: “🤺”,<br></p>\n<p>“women_wrestling”: “🤼‍♀”,<br></p>\n<p>“men_wrestling”: “🤼‍♂”,<br></p>\n<p>“woman_cartwheeling”: “🤸‍♀”,<br></p>\n<p>“man_cartwheeling”: “🤸‍♂”,<br></p>\n<p>“basketball_woman”: “⛹️‍♀️”,<br></p>\n<p>“basketball_man”: “⛹”,<br></p>\n<p>“woman_playing_handball”: “🤾‍♀”,<br></p>\n<p>“man_playing_handball”: “🤾‍♂”,<br></p>\n<p>“golfing_woman”: “🏌️‍♀️”,<br></p>\n<p>“golfing_man”: “🏌”,<br></p>\n<p>“surfing_woman”: “🏄‍♀”,<br></p>\n<p>“surfing_man”: “🏄”,<br></p>\n<p>“surfer”: “🏄”,<br></p>\n<p>“swimming_woman”: “🏊‍♀”,<br></p>\n<p>“swimming_man”: “🏊”,<br></p>\n<p>“swimmer”: “🏊”,<br><br>“woman_playing_water_polo”: “🤽‍♀”,<br><br>“man_playing_water_polo”: “🤽‍♂”,<br><br>“rowing_woman”: “🚣‍♀”,<br><br>“rowing_man”: “🚣”,<br><br>“rowboat”: “🚣”,<br><br>“horse_racing”: “🏇”,<br><br>“biking_woman”: “🚴‍♀”,<br><br>“biking_man”: “🚴”,<br><br>“bicyclist”: “🚴”,<br><br>“mountain_biking_woman”: “🚵‍♀”,<br><br>“mountain_biking_man”: “🚵”,<br><br>“mountain_bicyclist”: “🚵”,<br><br>“running_shirt_with_sash”: “🎽”,<br><br>“medal_sports”: “🏅”,<br><br>“medal_military”: “🎖”,<br><br>“1st_place_medal”: “🥇”,<br><br>“2nd_place_medal”: “🥈”,<br><br>“3rd_place_medal”: “🥉”,<br><br>“trophy”: “🏆”,<br><br>“rosette”: “🏵”,<br><br>“reminder_ribbon”: “🎗”,<br><br>“ticket”: “🎫”,<br><br>“tickets”: “🎟”,<br><br>“circus_tent”: “🎪”,<br><br>“woman_juggling”: “🤹‍♀”,<br><br>“man_juggling”: “🤹‍♂”,<br><br>“performing_arts”: “🎭”,<br><br>“art”: “🎨”,<br><br>“clapper”: “🎬”,<br><br>“microphone”: “🎤”,<br><br>“headphones”: “🎧”,<br><br>“musical_score”: “🎼”,<br><br>“musical_keyboard”: “🎹”,<br><br>“drum”: “🥁”,<br><br>“saxophone”: “🎷”,<br><br>“trumpet”: “🎺”,<br><br>“guitar”: “🎸”,<br><br>“violin”: “🎻”,<br><br>“game_die”: “🎲”,<br><br>“dart”: “🎯”,<br><br>“bowling”: “🎳”,<br><br>“video_game”: “🎮”,<br><br>“slot_machine”: “🎰”,<br><br>“car”: “🚗”,<br><br>“red_car”: “🚗”,<br><br>“taxi”: “🚕”,<br><br>“blue_car”: “🚙”,<br><br>“bus”: “🚌”,<br><br>“trolleybus”: “🚎”,<br><br>“racing_car”: “🏎”,<br><br>“police_car”: “🚓”,<br><br>“ambulance”: “🚑”,<br><br>“fire_engine”: “🚒”,<br><br>“minibus”: “🚐”,<br><br>“truck”: “🚚”,<br><br>“articulated_lorry”: “🚛”,<br><br>“tractor”: “🚜”,<br><br>“kick_scooter”: “🛴”,<br><br>“bike”: “🚲”,<br><br>“motor_scooter”: “🛵”,<br><br>“motorcycle”: “🏍”,<br><br>“rotating_light”: “🚨”,<br><br>“oncoming_police_car”: “🚔”,<br><br>“oncoming_bus”: “🚍”,<br><br>“oncoming_automobile”: “🚘”,<br><br>“oncoming_taxi”: “🚖”,<br><br>“aerial_tramway”: “🚡”,<br><br>“mountain_cableway”: “🚠”,<br><br>“suspension_railway”: “🚟”,<br><br>“railway_car”: “🚃”,<br><br>“train”: “🚋”,<br><br>“mountain_railway”: “🚞”,<br><br>“monorail”: “🚝”,<br><br>“bullettrain_side”: “🚄”,<br><br>“bullettrain_front”: “🚅”,<br><br>“light_rail”: “🚈”,<br><br>“steam_locomotive”: “🚂”,<br><br>“train2”: “🚆”,<br><br>“metro”: “🚇”,<br><br>“tram”: “🚊”,<br><br>“station”: “🚉”,<br><br>“helicopter”: “🚁”,<br><br>“small_airplane”: “🛩”,<br><br>“airplane”: “✈️”,<br><br>“flight_departure”: “🛫”,<br><br>“flight_arrival”: “🛬”,<br><br>“rocket”: “🚀”,<br><br>“artificial_satellite”: “🛰”,<br><br>“seat”: “💺”,<br><br>“canoe”: “🛶”,<br><br>“boat”: “⛵️”,<br><br>“sailboat”: “⛵️”,<br><br>“motor_boat”: “🛥”,<br><br>“speedboat”: “🚤”,<br><br>“passenger_ship”: “🛳”,<br><br>“ferry”: “⛴”,<br><br>“ship”: “🚢”,<br><br>“anchor”: “⚓️”,<br><br>“construction”: “🚧”,<br><br>“fuelpump”: “⛽️”,<br><br>“busstop”: “🚏”,<br><br>“vertical_traffic_light”: “🚦”,<br><br>“traffic_light”: “🚥”,<br><br>“world_map”: “🗺”,<br><br>“moyai”: “🗿”,<br><br>“statue_of_liberty”: “🗽”,<br><br>“fountain”: “⛲️”,<br><br>“tokyo_tower”: “🗼”,<br><br>“european_castle”: “🏰”,<br><br>“japanese_castle”: “🏯”,<br><br>“stadium”: “🏟”,<br><br>“ferris_wheel”: “🎡”,<br><br>“roller_coaster”: “🎢”,<br><br>“carousel_horse”: “🎠”,<br><br>“parasol_on_ground”: “⛱”,<br><br>“beach_umbrella”: “🏖”,<br><br>“desert_island”: “🏝”,<br><br>“mountain”: “⛰”,<br><br>“mountain_snow”: “🏔”,<br><br>“mount_fuji”: “🗻”,<br><br>“volcano”: “🌋”,<br><br>“desert”: “🏜”,<br><br>“camping”: “🏕”,<br><br>“tent”: “⛺️”,<br><br>“railway_track”: “🛤”,<br><br>“motorway”: “🛣”,<br><br>“building_construction”: “🏗”,<br><br>“factory”: “🏭”,<br><br>“house”: “🏠”,<br><br>“house_with_garden”: “🏡”,<br><br>“houses”: “🏘”,<br><br>“derelict_house”: “🏚”,<br><br>“office”: “🏢”,<br><br>“department_store”: “🏬”,<br><br>“post_office”: “🏣”,<br><br>“european_post_office”: “🏤”,<br><br>“hospital”: “🏥”,<br><br>“bank”: “🏦”,<br><br>“hotel”: “🏨”,<br><br>“convenience_store”: “🏪”,<br><br>“school”: “🏫”,<br><br>“love_hotel”: “🏩”,<br><br>“wedding”: “💒”,<br><br>“classical_building”: “🏛”,<br><br>“church”: “⛪️”,<br><br>“mosque”: “🕌”,<br><br>“synagogue”: “🕍”,<br><br>“kaaba”: “🕋”,<br><br>“shinto_shrine”: “⛩”,<br><br>“japan”: “🗾”,<br><br>“rice_scene”: “🎑”,<br><br>“national_park”: “🏞”,<br><br>“sunrise”: “🌅”,<br><br>“sunrise_over_mountains”: “🌄”,<br><br>“stars”: “🌠”,<br><br>“sparkler”: “🎇”,<br><br>“fireworks”: “🎆”,<br><br>“city_sunrise”: “🌇”,<br><br>“city_sunset”: “🌆”,<br><br>“cityscape”: “🏙”,<br><br>“night_with_stars”: “🌃”,<br><br>“milky_way”: “🌌”,<br><br>“bridge_at_night”: “🌉”,<br><br>“foggy”: “🌁”,<br><br>“watch”: “⌚️”,<br><br>“iphone”: “📱”,<br><br>“calling”: “📲”,<br><br>“computer”: “💻”,<br><br>“keyboard”: “⌨️”,<br><br>“desktop_computer”: “🖥”,<br><br>“printer”: “🖨”,<br><br>“computer_mouse”: “🖱”,<br><br>“trackball”: “🖲”,<br><br>“joystick”: “🕹”,<br><br>“clamp”: “🗜”,<br><br>“minidisc”: “💽”,<br><br>“floppy_disk”: “💾”,<br><br>“cd”: “💿”,<br><br>“dvd”: “📀”,<br><br>“vhs”: “📼”,<br><br>“camera”: “📷”,<br><br>“camera_flash”: “📸”,<br><br>“video_camera”: “📹”,<br><br>“movie_camera”: “🎥”,<br><br>“film_projector”: “📽”,<br><br>“film_strip”: “🎞”,<br><br>“telephone_receiver”: “📞”,<br><br>“phone”: “☎️”,<br><br>“telephone”: “☎️”,<br><br>“pager”: “📟”,<br><br>“fax”: “📠”,<br><br>“tv”: “📺”,<br><br>“radio”: “📻”,<br><br>“studio_microphone”: “🎙”,<br><br>“level_slider”: “🎚”,<br><br>“control_knobs”: “🎛”,<br><br>“stopwatch”: “⏱”,<br><br>“timer_clock”: “⏲”,<br><br>“alarm_clock”: “⏰”,<br><br>“mantelpiece_clock”: “🕰”,<br><br>“hourglass”: “⌛️”,<br><br>“hourglass_flowing_sand”: “⏳”,<br><br>“satellite”: “📡”,<br><br>“battery”: “🔋”,<br><br>“electric_plug”: “🔌”,<br><br>“bulb”: “💡”,<br><br>“flashlight”: “🔦”,<br><br>“candle”: “🕯”,<br><br>“wastebasket”: “🗑”,<br><br>“oil_drum”: “🛢”,<br><br>“money_with_wings”: “💸”,<br><br>“dollar”: “💵”,<br><br>“yen”: “💴”,<br><br>“euro”: “💶”,<br><br>“pound”: “💷”,<br><br>“moneybag”: “💰”,<br><br>“credit_card”: “💳”,<br><br>“gem”: “💎”,<br><br>“balance_scale”: “⚖️”,<br><br>“wrench”: “🔧”,<br><br>“hammer”: “🔨”,<br><br>“hammer_and_pick”: “⚒”,<br><br>“hammer_and_wrench”: “🛠”,<br><br>“pick”: “⛏”,<br><br>“nut_and_bolt”: “🔩”,<br><br>“gear”: “⚙️”,<br><br>“chains”: “⛓”,<br><br>“gun”: “🔫”,<br><br>“bomb”: “💣”,<br><br>“hocho”: “🔪”,<br><br>“knife”: “🔪”,<br><br>“dagger”: “🗡”,<br><br>“crossed_swords”: “⚔️”,<br><br>“shield”: “🛡”,<br><br>“smoking”: “🚬”,<br><br>“coffin”: “⚰️”,<br><br>“funeral_urn”: “⚱️”,<br><br>“amphora”: “🏺”,<br><br>“crystal_ball”: “🔮”,<br><br>“prayer_beads”: “📿”,<br><br>“barber”: “💈”,<br><br>“alembic”: “⚗️”,<br><br>“telescope”: “🔭”,<br><br>“microscope”: “🔬”,<br><br>“hole”: “🕳”,<br><br>“pill”: “💊”,<br><br>“syringe”: “💉”,<br><br>“thermometer”: “🌡”,<br><br>“toilet”: “🚽”,<br><br>“potable_water”: “🚰”,<br><br>“shower”: “🚿”,<br><br>“bathtub”: “🛁”,<br><br>“bath”: “🛀”,<br><br>“bellhop_bell”: “🛎”,<br><br>“key”: “🔑”,<br><br>“old_key”: “🗝”,<br><br>“door”: “🚪”,<br><br>“couch_and_lamp”: “🛋”,<br><br>“bed”: “🛏”,<br><br>“sleeping_bed”: “🛌”,<br><br>“framed_picture”: “🖼”,<br><br>“shopping”: “🛍”,<br><br>“shopping_cart”: “🛒”,<br><br>“gift”: “🎁”,<br><br>“balloon”: “🎈”,<br><br>“flags”: “🎏”,<br><br>“ribbon”: “🎀”,<br><br>“confetti_ball”: “🎊”,<br><br>“tada”: “🎉”,<br><br>“dolls”: “🎎”,<br><br>“izakaya_lantern”: “🏮”,<br><br>“lantern”: “🏮”,<br><br>“wind_chime”: “🎐”,<br><br>“email”: “✉️”,<br><br>“envelope”: “✉️”,<br><br>“envelope_with_arrow”: “📩”,<br><br>“incoming_envelope”: “📨”,<br><br>“e-mail”: “📧”,<br><br>“love_letter”: “💌”,<br><br>“inbox_tray”: “📥”,<br><br>“outbox_tray”: “📤”,<br><br>“package”: “📦”,<br><br>“label”: “🏷”,<br><br>“mailbox_closed”: “📪”,<br><br>“mailbox”: “📫”,<br><br>“mailbox_with_mail”: “📬”,<br><br>“mailbox_with_no_mail”: “📭”,<br><br>“postbox”: “📮”,<br><br>“postal_horn”: “📯”,<br><br>“scroll”: “📜”,<br><br>“page_with_curl”: “📃”,<br><br>“page_facing_up”: “📄”,<br><br>“bookmark_tabs”: “📑”,<br><br>“bar_chart”: “📊”,<br><br>“chart_with_upwards_trend”: “📈”,<br><br>“chart_with_downwards_trend”: “📉”,<br><br>“spiral_notepad”: “🗒”,<br><br>“spiral_calendar”: “🗓”,<br><br>“calendar”: “📆”,<br><br>“date”: “📅”,<br><br>“card_index”: “📇”,<br><br>“card_file_box”: “🗃”,<br><br>“ballot_box”: “🗳”,<br><br>“file_cabinet”: “🗄”,<br><br>“clipboard”: “📋”,<br><br>“file_folder”: “📁”,<br><br>“open_file_folder”: “📂”,<br><br>“card_index_dividers”: “🗂”,<br><br>“newspaper_roll”: “🗞”,<br><br>“newspaper”: “📰”,<br><br>“notebook”: “📓”,<br><br>“notebook_with_decorative_cover”: “📔”,<br><br>“ledger”: “📒”,<br><br>“closed_book”: “📕”,<br><br>“green_book”: “📗”,<br><br>“blue_book”: “📘”,<br><br>“orange_book”: “📙”,<br><br>“books”: “📚”,<br><br>“book”: “📖”,<br><br>“open_book”: “📖”,<br><br>“bookmark”: “🔖”,<br><br>“link”: “🔗”,<br><br>“paperclip”: “📎”,<br><br>“paperclips”: “🖇”,<br><br>“triangular_ruler”: “📐”,<br><br>“straight_ruler”: “📏”,<br><br>“pushpin”: “📌”,<br><br>“round_pushpin”: “📍”,<br><br>“scissors”: “✂️”,<br><br>“pen”: “🖊”,<br><br>“fountain_pen”: “🖋”,<br><br>“black_nib”: “✒️”,<br><br>“paintbrush”: “🖌”,<br><br>“crayon”: “🖍”,<br><br>“memo”: “📝”,<br><br>“pencil”: “📝”,<br><br>“pencil2”: “✏️”,<br><br>“mag”: “🔍”,<br><br>“mag_right”: “🔎”,<br><br>“lock_with_ink_pen”: “🔏”,<br><br>“closed_lock_with_key”: “🔐”,<br><br>“lock”: “🔒”,<br><br>“unlock”: “🔓”,<br><br>“heart”: “❤️”,<br><br>“yellow_heart”: “💛”,<br><br>“green_heart”: “💚”,<br><br>“blue_heart”: “💙”,<br><br>“purple_heart”: “💜”,<br><br>“black_heart”: “🖤”,<br><br>“broken_heart”: “💔”,<br><br>“heavy_heart_exclamation”: “❣️”,<br><br>“two_hearts”: “💕”,<br><br>“revolving_hearts”: “💞”,<br><br>“heartbeat”: “💓”,<br><br>“heartpulse”: “💗”,<br><br>“sparkling_heart”: “💖”,<br><br>“cupid”: “💘”,<br><br>“gift_heart”: “💝”,<br><br>“heart_decoration”: “💟”,<br><br>“peace_symbol”: “☮️”,<br><br>“latin_cross”: “✝️”,<br><br>“star_and_crescent”: “☪️”,<br><br>“om”: “🕉”,<br><br>“wheel_of_dharma”: “☸️”,<br><br>“star_of_david”: “✡️”,<br><br>“six_pointed_star”: “🔯”,<br><br>“menorah”: “🕎”,<br><br>“yin_yang”: “☯️”,<br><br>“orthodox_cross”: “☦️”,<br><br>“place_of_worship”: “🛐”,<br><br>“ophiuchus”: “⛎”,<br><br>“aries”: “♈️”,<br><br>“taurus”: “♉️”,<br><br>“gemini”: “♊️”,<br><br>“cancer”: “♋️”,<br><br>“leo”: “♌️”,<br><br>“virgo”: “♍️”,<br><br>“libra”: “♎️”,<br><br>“scorpius”: “♏️”,<br><br>“sagittarius”: “♐️”,<br><br>“capricorn”: “♑️”,<br><br>“aquarius”: “♒️”,<br><br>“pisces”: “♓️”,<br><br>“id”: “🆔”,<br><br>“atom_symbol”: “⚛️”,<br><br>“accept”: “🉑”,<br><br>“radioactive”: “☢️”,<br><br>“biohazard”: “☣️”,<br><br>“mobile_phone_off”: “📴”,<br><br>“vibration_mode”: “📳”,<br><br>“eight_pointed_black_star”: “✴️”,<br><br>“vs”: “🆚”,<br><br>“white_flower”: “💮”,<br><br>“ideograph_advantage”: “🉐”,<br><br>“secret”: “㊙️”,<br><br>“congratulations”: “㊗️”,<br><br>“u6e80”: “🈵”,<br><br>“a”: “🅰️”,<br><br>“b”: “🅱️”,<br><br>“ab”: “🆎”,<br><br>“cl”: “🆑”,<br><br>“o2”: “🅾️”,<br><br>“sos”: “🆘”,<br><br>“x”: “❌”,<br><br>“o”: “⭕️”,<br><br>“stop_sign”: “🛑”,<br><br>“no_entry”: “⛔️”,<br><br>“name_badge”: “📛”,<br><br>“no_entry_sign”: “🚫”,<br><br>“anger”: “💢”,<br><br>“hotsprings”: “♨️”,<br><br>“no_pedestrians”: “🚷”,<br><br>“do_not_litter”: “🚯”,<br><br>“no_bicycles”: “🚳”,<br><br>“non-potable_water”: “🚱”,<br><br>“underage”: “🔞”,<br><br>“no_mobile_phones”: “📵”,<br><br>“no_smoking”: “🚭”,<br><br>“exclamation”: “❗️”,<br><br>“heavy_exclamation_mark”: “❗️”,<br><br>“grey_exclamation”: “❕”,<br><br>“question”: “❓”,<br><br>“grey_question”: “❔”,<br><br>“bangbang”: “‼️”,<br><br>“interrobang”: “⁉️”,<br><br>“low_brightness”: “🔅”,<br><br>“high_brightness”: “🔆”,<br><br>“part_alternation_mark”: “〽️”,<br><br>“warning”: “⚠️”,<br><br>“children_crossing”: “🚸”,<br><br>“trident”: “🔱”,<br><br>“fleur_de_lis”: “⚜️”,<br><br>“beginner”: “🔰”,<br><br>“recycle”: “♻️”,<br><br>“white_check_mark”: “✅”,<br><br>“chart”: “💹”,<br><br>“sparkle”: “❇️”,<br><br>“eight_spoked_asterisk”: “✳️”,<br><br>“negative_squared_cross_mark”: “❎”,<br><br>“globe_with_meridians”: “🌐”,<br><br>“diamond_shape_with_a_dot_inside”: “💠”,<br><br>“m”: “Ⓜ️”,<br><br>“cyclone”: “🌀”,<br><br>“zzz”: “💤”,<br><br>“atm”: “🏧”,<br><br>“wc”: “🚾”,<br><br>“wheelchair”: “♿️”,<br><br>“parking”: “🅿️”,<br><br>“sa”: “🈂️”,<br><br>“passport_control”: “🛂”,<br><br>“customs”: “🛃”,<br><br>“baggage_claim”: “🛄”,<br><br>“left_luggage”: “🛅”,<br><br>“mens”: “🚹”,<br><br>“womens”: “🚺”,<br><br>“baby_symbol”: “🚼”,<br><br>“restroom”: “🚻”,<br><br>“put_litter_in_its_place”: “🚮”,<br><br>“cinema”: “🎦”,<br><br>“signal_strength”: “📶”,<br><br>“koko”: “🈁”,<br><br>“symbols”: “🔣”,<br><br>“information_source”: “ℹ️”,<br><br>“abc”: “🔤”,<br><br>“abcd”: “🔡”,<br><br>“capital_abcd”: “🔠”,<br><br>“ng”: “🆖”,<br><br>“ok”: “🆗”,<br><br>“up”: “🆙”,<br><br>“cool”: “🆒”,<br><br>“new”: “🆕”,<br><br>“free”: “🆓”,<br><br>“zero”: “0️⃣”,<br><br>“one”: “1️⃣”,<br><br>“two”: “2️⃣”,<br><br>“three”: “3️⃣”,<br><br>“four”: “4️⃣”,<br><br>“five”: “5️⃣”,<br><br>“six”: “6️⃣”,<br><br>“seven”: “7️⃣”,<br><br>“eight”: “8️⃣”,<br><br>“nine”: “9️⃣”,<br><br>“keycap_ten”: “🔟”,<br><br>“hash”: “#️⃣”,<br><br>“asterisk”: “*️⃣”,<br><br>“arrow_forward”: “▶️”,<br><br>“pause_button”: “⏸”,<br><br>“play_or_pause_button”: “⏯”,<br><br>“stop_button”: “⏹”,<br><br>“record_button”: “⏺”,<br><br>“next_track_button”: “⏭”,<br><br>“previous_track_button”: “⏮”,<br><br>“fast_forward”: “⏩”,<br><br>“rewind”: “⏪”,<br><br>“arrow_double_up”: “⏫”,<br><br>“arrow_double_down”: “⏬”,<br><br>“arrow_backward”: “◀️”,<br><br>“arrow_up_small”: “🔼”,<br><br>“arrow_down_small”: “🔽”,<br><br>“arrow_right”: “➡️”,<br><br>“arrow_left”: “⬅️”,<br><br>“arrow_up”: “⬆️”,<br><br>“arrow_down”: “⬇️”,<br><br>“arrow_upper_right”: “↗️”,<br><br>“arrow_lower_right”: “↘️”,<br><br>“arrow_lower_left”: “↙️”,<br><br>“arrow_upper_left”: “↖️”,<br><br>“arrow_up_down”: “↕️”,<br><br>“left_right_arrow”: “↔️”,<br><br>“arrow_right_hook”: “↪️”,<br><br>“leftwards_arrow_with_hook”: “↩️”,<br><br>“arrow_heading_up”: “⤴️”,<br><br>“arrow_heading_down”: “⤵️”,<br><br>“twisted_rightwards_arrows”: “🔀”,<br><br>“repeat”: “🔁”,<br><br>“repeat_one”: “🔂”,<br><br>“arrows_counterclockwise”: “🔄”,<br><br>“arrows_clockwise”: “🔃”,<br><br>“musical_note”: “🎵”,<br><br>“notes”: “🎶”,<br><br>“heavy_plus_sign”: “➕”,<br><br>“heavy_minus_sign”: “➖”,<br><br>“heavy_division_sign”: “➗”,<br><br>“heavy_multiplication_x”: “✖️”,<br><br>“heavy_dollar_sign”: “💲”,<br><br>“currency_exchange”: “💱”,<br><br>“tm”: “™️”,<br><br>“copyright”: “©️”,<br><br>“registered”: “®️”,<br><br>“wavy_dash”: “〰️”,<br><br>“curly_loop”: “➰”,<br><br>“loop”: “➿”,<br><br>“end”: “🔚”,<br><br>“back”: “🔙”,<br><br>“on”: “🔛”,<br><br>“top”: “🔝”,<br><br>“soon”: “🔜”,<br><br>“heavy_check_mark”: “✔️”,<br><br>“ballot_box_with_check”: “☑️”,<br><br>“radio_button”: “🔘”,<br><br>“white_circle”: “⚪️”,<br><br>“black_circle”: “⚫️”,<br><br>“red_circle”: “🔴”,<br><br>“large_blue_circle”: “🔵”,<br><br>“small_red_triangle”: “🔺”,<br><br>“small_red_triangle_down”: “🔻”,<br><br>“small_orange_diamond”: “🔸”,<br><br>“small_blue_diamond”: “🔹”,<br><br>“large_orange_diamond”: “🔶”,<br><br>“large_blue_diamond”: “🔷”,<br><br>“white_square_button”: “🔳”,<br><br>“black_square_button”: “🔲”,<br><br>“black_small_square”: “▪️”,<br><br>“white_small_square”: “▫️”,<br><br>“black_medium_small_square”: “◾️”,<br><br>“white_medium_small_square”: “◽️”,<br><br>“black_medium_square”: “◼️”,<br><br>“white_medium_square”: “◻️”,<br><br>“black_large_square”: “⬛️”,<br><br>“white_large_square”: “⬜️”,<br><br>“speaker”: “🔈”,<br><br>“mute”: “🔇”,<br><br>“sound”: “🔉”,<br><br>“loud_sound”: “🔊”,<br><br>“bell”: “🔔”,<br><br>“no_bell”: “🔕”,<br><br>“mega”: “📣”,<br><br>“loudspeaker”: “📢”,<br><br>“eye_speech_bubble”: “👁‍🗨”,<br><br>“speech_balloon”: “💬”,<br><br>“thought_balloon”: “💭”,<br><br>“right_anger_bubble”: “🗯”,<br><br>“spades”: “♠️”,<br><br>“clubs”: “♣️”,<br><br>“hearts”: “♥️”,<br><br>“diamonds”: “♦️”,<br><br>“black_joker”: “🃏”,<br><br>“flower_playing_cards”: “🎴”,<br><br>“mahjong”: “🀄️”,<br><br>“clock1”: “🕐”,<br><br>“clock2”: “🕑”,<br><br>“clock3”: “🕒”,<br><br>“clock4”: “🕓”,<br><br>“clock5”: “🕔”,<br><br>“clock6”: “🕕”,<br><br>“clock7”: “🕖”,<br><br>“clock8”: “🕗”,<br><br>“clock9”: “🕘”,<br><br>“clock10”: “🕙”,<br><br>“clock11”: “🕚”,<br><br>“clock12”: “🕛”,<br><br>“clock130”: “🕜”,<br><br>“clock230”: “🕝”,<br><br>“clock330”: “🕞”,<br><br>“clock430”: “🕟”,<br><br>“clock530”: “🕠”,<br><br>“clock630”: “🕡”,<br><br>“clock730”: “🕢”,<br><br>“clock830”: “🕣”,<br><br>“clock930”: “🕤”,<br><br>“clock1030”: “🕥”,<br><br>“clock1130”: “🕦”,<br><br>“clock1230”: “🕧”,<br><br>“white_flag”: “🏳️”,<br><br>“black_flag”: “🏴”,<br><br>“checkered_flag”: “🏁”,<br><br>“triangular_flag_on_post”: “🚩”,<br><br>“rainbow_flag”: “🏳️‍🌈”,<br><br>“afghanistan”: “🇦🇫”,<br><br>“aland_islands”: “🇦🇽”,<br><br>“albania”: “🇦🇱”,<br><br>“algeria”: “🇩🇿”,<br><br>“american_samoa”: “🇦🇸”,<br><br>“andorra”: “🇦🇩”,<br><br>“angola”: “🇦🇴”,<br><br>“anguilla”: “🇦🇮”,<br><br>“antarctica”: “🇦🇶”,<br><br>“antigua_barbuda”: “🇦🇬”,<br><br>“argentina”: “🇦🇷”,<br><br>“armenia”: “🇦🇲”,<br><br>“aruba”: “🇦🇼”,<br><br>“australia”: “🇦🇺”,<br><br>“austria”: “🇦🇹”,<br><br>“azerbaijan”: “🇦🇿”,<br><br>“bahamas”: “🇧🇸”,<br><br>“bahrain”: “🇧🇭”,<br><br>“bangladesh”: “🇧🇩”,<br><br>“barbados”: “🇧🇧”,<br><br>“belarus”: “🇧🇾”,<br><br>“belgium”: “🇧🇪”,<br><br>“belize”: “🇧🇿”,<br><br>“benin”: “🇧🇯”,<br><br>“bermuda”: “🇧🇲”,<br><br>“bhutan”: “🇧🇹”,<br><br>“bolivia”: “🇧🇴”,<br><br>“caribbean_netherlands”: “🇧🇶”,<br><br>“bosnia_herzegovina”: “🇧🇦”,<br><br>“botswana”: “🇧🇼”,<br><br>“brazil”: “🇧🇷”,<br><br>“british_indian_ocean_territory”: “🇮🇴”,<br><br>“british_virgin_islands”: “🇻🇬”,<br><br>“brunei”: “🇧🇳”,<br><br>“bulgaria”: “🇧🇬”,<br><br>“burkina_faso”: “🇧🇫”,<br><br>“burundi”: “🇧🇮”,<br><br>“cape_verde”: “🇨🇻”,<br><br>“cambodia”: “🇰🇭”,<br><br>“cameroon”: “🇨🇲”,<br><br>“canada”: “🇨🇦”,<br><br>“canary_islands”: “🇮🇨”,<br><br>“cayman_islands”: “🇰🇾”,<br><br>“central_african_republic”: “🇨🇫”,<br><br>“chad”: “🇹🇩”,<br><br>“chile”: “🇨🇱”,<br><br>“cn”: “🇨🇳”,<br><br>“christmas_island”: “🇨🇽”,<br><br>“cocos_islands”: “🇨🇨”,<br><br>“colombia”: “🇨🇴”,<br><br>“comoros”: “🇰🇲”,<br><br>“congo_brazzaville”: “🇨🇬”,<br><br>“congo_kinshasa”: “🇨🇩”,<br><br>“cook_islands”: “🇨🇰”,<br><br>“costa_rica”: “🇨🇷”,<br><br>“cote_divoire”: “🇨🇮”,<br><br>“croatia”: “🇭🇷”,<br><br>“cuba”: “🇨🇺”,<br><br>“curacao”: “🇨🇼”,<br><br>“cyprus”: “🇨🇾”,<br><br>“czech_republic”: “🇨🇿”,<br><br>“denmark”: “🇩🇰”,<br><br>“djibouti”: “🇩🇯”,<br><br>“dominica”: “🇩🇲”,<br><br>“dominican_republic”: “🇩🇴”,<br><br>“ecuador”: “🇪🇨”,<br><br>“egypt”: “🇪🇬”,<br><br>“el_salvador”: “🇸🇻”,<br><br>“equatorial_guinea”: “🇬🇶”,<br><br>“eritrea”: “🇪🇷”,<br><br>“estonia”: “🇪🇪”,<br><br>“ethiopia”: “🇪🇹”,<br><br>“eu”: “🇪🇺”,<br><br>“european_union”: “🇪🇺”,<br><br>“falkland_islands”: “🇫🇰”,<br><br>“faroe_islands”: “🇫🇴”,<br><br>“fiji”: “🇫🇯”,<br><br>“finland”: “🇫🇮”,<br><br>“fr”: “🇫🇷”,<br><br>“french_guiana”: “🇬🇫”,<br><br>“french_polynesia”: “🇵🇫”,<br><br>“french_southern_territories”: “🇹🇫”,<br><br>“gabon”: “🇬🇦”,<br><br>“gambia”: “🇬🇲”,<br><br>“georgia”: “🇬🇪”,<br><br>“de”: “🇩🇪”,<br><br>“ghana”: “🇬🇭”,<br><br>“gibraltar”: “🇬🇮”,<br><br>“greece”: “🇬🇷”,<br><br>“greenland”: “🇬🇱”,<br><br>“grenada”: “🇬🇩”,<br><br>“guadeloupe”: “🇬🇵”,<br><br>“guam”: “🇬🇺”,<br><br>“guatemala”: “🇬🇹”,<br><br>“guernsey”: “🇬🇬”,<br><br>“guinea”: “🇬🇳”,<br><br>“guinea_bissau”: “🇬🇼”,<br><br>“guyana”: “🇬🇾”,<br><br>“haiti”: “🇭🇹”,<br><br>“honduras”: “🇭🇳”,<br><br>“hong_kong”: “🇭🇰”,<br><br>“hungary”: “🇭🇺”,<br><br>“iceland”: “🇮🇸”,<br><br>“india”: “🇮🇳”,<br><br>“indonesia”: “🇮🇩”,<br><br>“iran”: “🇮🇷”,<br><br>“iraq”: “🇮🇶”,<br><br>“ireland”: “🇮🇪”,<br><br>“isle_of_man”: “🇮🇲”,<br><br>“israel”: “🇮🇱”,<br><br>“it”: “🇮🇹”,<br><br>“jamaica”: “🇯🇲”,<br><br>“jp”: “🇯🇵”,<br><br>“crossed_flags”: “🎌”,<br><br>“jersey”: “🇯🇪”,<br><br>“jordan”: “🇯🇴”,<br><br>“kazakhstan”: “🇰🇿”,<br><br>“kenya”: “🇰🇪”,<br><br>“kiribati”: “🇰🇮”,<br><br>“kosovo”: “🇽🇰”,<br><br>“kuwait”: “🇰🇼”,<br><br>“kyrgyzstan”: “🇰🇬”,<br><br>“laos”: “🇱🇦”,<br><br>“latvia”: “🇱🇻”,<br><br>“lebanon”: “🇱🇧”,<br><br>“lesotho”: “🇱🇸”,<br><br>“liberia”: “🇱🇷”,<br><br>“libya”: “🇱🇾”,<br><br>“liechtenstein”: “🇱🇮”,<br><br>“lithuania”: “🇱🇹”,<br><br>“luxembourg”: “🇱🇺”,<br><br>“macau”: “🇲🇴”,<br><br>“macedonia”: “🇲🇰”,<br><br>“madagascar”: “🇲🇬”,<br><br>“malawi”: “🇲🇼”,<br><br>“malaysia”: “🇲🇾”,<br><br>“maldives”: “🇲🇻”,<br><br>“mali”: “🇲🇱”,<br><br>“malta”: “🇲🇹”,<br><br>“marshall_islands”: “🇲🇭”,<br><br>“martinique”: “🇲🇶”,<br><br>“mauritania”: “🇲🇷”,<br><br>“mauritius”: “🇲🇺”,<br><br>“mayotte”: “🇾🇹”,<br><br>“mexico”: “🇲🇽”,<br><br>“micronesia”: “🇫🇲”,<br><br>“moldova”: “🇲🇩”,<br><br>“monaco”: “🇲🇨”,<br><br>“mongolia”: “🇲🇳”,<br><br>“montenegro”: “🇲🇪”,<br><br>“montserrat”: “🇲🇸”,<br><br>“morocco”: “🇲🇦”,<br><br>“mozambique”: “🇲🇿”,<br><br>“myanmar”: “🇲🇲”,<br><br>“namibia”: “🇳🇦”,<br><br>“nauru”: “🇳🇷”,<br><br>“nepal”: “🇳🇵”,<br><br>“netherlands”: “🇳🇱”,<br><br>“new_caledonia”: “🇳🇨”,<br><br>“new_zealand”: “🇳🇿”,<br><br>“nicaragua”: “🇳🇮”,<br><br>“niger”: “🇳🇪”,<br><br>“nigeria”: “🇳🇬”,<br><br>“niue”: “🇳🇺”,<br><br>“norfolk_island”: “🇳🇫”,<br><br>“northern_mariana_islands”: “🇲🇵”,<br><br>“north_korea”: “🇰🇵”,<br><br>“norway”: “🇳🇴”,<br><br>“oman”: “🇴🇲”,<br><br>“pakistan”: “🇵🇰”,<br><br>“palau”: “🇵🇼”,<br><br>“palestinian_territories”: “🇵🇸”,<br><br>“panama”: “🇵🇦”,<br><br>“papua_new_guinea”: “🇵🇬”,<br><br>“paraguay”: “🇵🇾”,<br><br>“peru”: “🇵🇪”,<br><br>“philippines”: “🇵🇭”,<br><br>“pitcairn_islands”: “🇵🇳”,<br><br>“poland”: “🇵🇱”,<br><br>“portugal”: “🇵🇹”,<br><br>“puerto_rico”: “🇵🇷”,<br><br>“qatar”: “🇶🇦”,<br><br>“reunion”: “🇷🇪”,<br><br>“romania”: “🇷🇴”,<br><br>“ru”: “🇷🇺”,<br><br>“rwanda”: “🇷🇼”,<br><br>“st_barthelemy”: “🇧🇱”,<br><br>“st_helena”: “🇸🇭”,<br><br>“st_kitts_nevis”: “🇰🇳”,<br><br>“st_lucia”: “🇱🇨”,<br><br>“st_pierre_miquelon”: “🇵🇲”,<br><br>“st_vincent_grenadines”: “🇻🇨”,<br><br>“samoa”: “🇼🇸”,<br><br>“san_marino”: “🇸🇲”,<br><br>“sao_tome_principe”: “🇸🇹”,<br><br>“saudi_arabia”: “🇸🇦”,<br><br>“senegal”: “🇸🇳”,<br><br>“serbia”: “🇷🇸”,<br><br>“seychelles”: “🇸🇨”,<br><br>“sierra_leone”: “🇸🇱”,<br><br>“singapore”: “🇸🇬”,<br><br>“sint_maarten”: “🇸🇽”,<br><br>“slovakia”: “🇸🇰”,<br><br>“slovenia”: “🇸🇮”,<br><br>“solomon_islands”: “🇸🇧”,<br><br>“somalia”: “🇸🇴”,<br><br>“south_africa”: “🇿🇦”,<br><br>“south_georgia_south_sandwich_islands”: “🇬🇸”,<br><br>“kr”: “🇰🇷”,<br><br>“south_sudan”: “🇸🇸”,<br><br>“es”: “🇪🇸”,<br><br>“sri_lanka”: “🇱🇰”,<br><br>“sudan”: “🇸🇩”,<br><br>“suriname”: “🇸🇷”,<br><br>“swaziland”: “🇸🇿”,<br><br>“sweden”: “🇸🇪”,<br><br>“switzerland”: “🇨🇭”,<br><br>“syria”: “🇸🇾”,<br><br>“taiwan”: “🇹🇼”,<br><br>“tajikistan”: “🇹🇯”,<br><br>“tanzania”: “🇹🇿”,<br><br>“thailand”: “🇹🇭”,<br><br>“timor_leste”: “🇹🇱”,<br><br>“togo”: “🇹🇬”,<br><br>“tokelau”: “🇹🇰”,<br><br>“tonga”: “🇹🇴”,<br><br>“trinidad_tobago”: “🇹🇹”,<br><br>“tunisia”: “🇹🇳”,<br><br>“tr”: “🇹🇷”,<br><br>“turkmenistan”: “🇹🇲”,<br><br>“turks_caicos_islands”: “🇹🇨”,<br><br>“tuvalu”: “🇹🇻”,<br><br>“uganda”: “🇺🇬”,<br><br>“ukraine”: “🇺🇦”,<br><br>“united_arab_emirates”: “🇦🇪”,<br><br>“gb”: “🇬🇧”,<br><br>“uk”: “🇬🇧”,<br><br>“us”: “🇺🇸”,<br><br>“us_virgin_islands”: “🇻🇮”,<br><br>“uruguay”: “🇺🇾”,<br><br>“uzbekistan”: “🇺🇿”,<br><br>“vanuatu”: “🇻🇺”,<br><br>“vatican_city”: “🇻🇦”,<br><br>“venezuela”: “🇻🇪”,<br><br>“vietnam”: “🇻🇳”,<br><br>“wallis_futuna”: “🇼🇫”,<br><br>“western_sahara”: “🇪🇭”,<br><br>“yemen”: “🇾🇪”,<br><br>“zambia”: “🇿🇲”,<br><br>“zimbabwe”: “🇿🇼”</p>\n"},{"title":"JS-数组sort方法用的是哪种排序算法","date":"2019-04-10T07:14:55.000Z","cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557223877171&di=732f7ed4d00db4158561afc049ab5894&imgtype=0&src=http%3A%2F%2Fimg.mukewang.com%2F59ae0e2a0001307706000338.jpg","_content":"> JS数组的排序方法大家肯定用的太多了，那sort用的是什么排序算法呢？这个问题的答案我寻找了很久，最终在Chrome V8引擎的源码中找到了。\n\n说明一下，ECMAScript没有定义使用哪种排序算法，各个浏览器的实现方式会有不同。火狐中使用的是归并排序，下面是Chrome的sort排序算法的实现。\n\n### sort方法源码\n\n```\nDEFINE_METHOD(\n  GlobalArray.prototype,\n  sort(comparefn) {\n    CHECK_OBJECT_COERCIBLE(this, \"Array.prototype.sort\");\n\n    if (!IS_UNDEFINED(comparefn) && !IS_CALLABLE(comparefn)) {\n      throw %make_type_error(kBadSortComparisonFunction, comparefn);\n    }\n\n    var array = TO_OBJECT(this);\n    var length = TO_LENGTH(array.length);\n    return InnerArraySort(array, length, comparefn);\n  }\n);\n```\n\n这一步看出sort方法调用了InnerArraySort方法，参数是数组，数组长度，比较函数。再看看InnerArraySort方法是如何处理的。\n\n### InnerArraySort方法源码\n\n```\nfunction InnerArraySort(array, length, comparefn) {\n  // In-place QuickSort algorithm.\n  // For short (length <= 10) arrays, insertion sort is used for efficiency.\n\n  if (!IS_CALLABLE(comparefn)) {\n    comparefn = function (x, y) {\n      if (x === y) return 0;\n      if (%_IsSmi(x) && %_IsSmi(y)) {\n        return %SmiLexicographicCompare(x, y);\n      }\n      x = TO_STRING(x);\n      y = TO_STRING(y);\n      if (x == y) return 0;\n      else return x < y ? -1 : 1;\n    };\n  }\n  function InsertionSort(a, from, to) {\n    ...\n  };\n ...\n  function QuickSort(a, from, to) {\n    var third_index = 0;\n    while (true) {\n      // Insertion sort is faster for short arrays.\n      if (to - from <= 10) {\n        InsertionSort(a, from, to);\n        return;\n      }\n      if (to - from > 1000) {\n        third_index = GetThirdIndex(a, from, to);\n      } else {\n        third_index = from + ((to - from) >> 1);\n      }\n      // Find a pivot as the median of first, last and middle element.\n      var v0 = a[from];\n      var v1 = a[to - 1];\n      var v2 = a[third_index];\n      var c01 = comparefn(v0, v1);\n      if (c01 > 0) {\n        // v1 < v0, so swap them.\n        var tmp = v0;\n        v0 = v1;\n        v1 = tmp;\n      } // v0 <= v1.\n      var c02 = comparefn(v0, v2);\n      if (c02 >= 0) {\n        // v2 <= v0 <= v1.\n        var tmp = v0;\n        v0 = v2;\n        v2 = v1;\n        v1 = tmp;\n      } else {\n        // v0 <= v1 && v0 < v2\n        var c12 = comparefn(v1, v2);\n        if (c12 > 0) {\n          // v0 <= v2 < v1\n          var tmp = v1;\n          v1 = v2;\n          v2 = tmp;\n        }\n      }\n      // v0 <= v1 <= v2\n      a[from] = v0;\n      a[to - 1] = v2;\n      var pivot = v1;\n      var low_end = from + 1;   // Upper bound of elements lower than pivot.\n      var high_start = to - 1;  // Lower bound of elements greater than pivot.\n      a[third_index] = a[low_end];\n      a[low_end] = pivot;\n\n      // From low_end to i are elements equal to pivot.\n      // From i to high_start are elements that haven't been compared yet.\n      partition: for (var i = low_end + 1; i < high_start; i++) {\n        var element = a[i];\n        var order = comparefn(element, pivot);\n        if (order < 0) {\n          a[i] = a[low_end];\n          a[low_end] = element;\n          low_end++;\n        } else if (order > 0) {\n          do {\n            high_start--;\n            if (high_start == i) break partition;\n            var top_elem = a[high_start];\n            order = comparefn(top_elem, pivot);\n          } while (order > 0);\n          a[i] = a[high_start];\n          a[high_start] = element;\n          if (order < 0) {\n            element = a[i];\n            a[i] = a[low_end];\n            a[low_end] = element;\n            low_end++;\n          }\n        }\n      }\n      if (to - high_start < low_end - from) {\n        QuickSort(a, high_start, to);\n        to = low_end;\n      } else {\n        QuickSort(a, from, low_end);\n        from = high_start;\n      }\n    }\n  };\n\n  ...\n\n  QuickSort(array, 0, num_non_undefined);\n ...\n  return array;\n}\n```\n\n这一步最重要的是QuickSort，从代码和注释中可以看出sort使用的是**插入排序和快速排序**结合的排序算法。数组长度不超过10时，使用插入排序。长度超过10使用快速排序。在数组较短时插入排序更有效率。\n\n问题终于找到了答案，心里又少了一个挂念的问题。","source":"_posts/JS-数组sort方法用的是哪种排序算法.md","raw":"---\ntitle: JS-数组sort方法用的是哪种排序算法\ndate: 2019-04-10 15:14:55\ntags: \n    - javaScript\ncategories: \n    - javaScript\ncover: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557223877171&di=732f7ed4d00db4158561afc049ab5894&imgtype=0&src=http%3A%2F%2Fimg.mukewang.com%2F59ae0e2a0001307706000338.jpg\n---\n> JS数组的排序方法大家肯定用的太多了，那sort用的是什么排序算法呢？这个问题的答案我寻找了很久，最终在Chrome V8引擎的源码中找到了。\n\n说明一下，ECMAScript没有定义使用哪种排序算法，各个浏览器的实现方式会有不同。火狐中使用的是归并排序，下面是Chrome的sort排序算法的实现。\n\n### sort方法源码\n\n```\nDEFINE_METHOD(\n  GlobalArray.prototype,\n  sort(comparefn) {\n    CHECK_OBJECT_COERCIBLE(this, \"Array.prototype.sort\");\n\n    if (!IS_UNDEFINED(comparefn) && !IS_CALLABLE(comparefn)) {\n      throw %make_type_error(kBadSortComparisonFunction, comparefn);\n    }\n\n    var array = TO_OBJECT(this);\n    var length = TO_LENGTH(array.length);\n    return InnerArraySort(array, length, comparefn);\n  }\n);\n```\n\n这一步看出sort方法调用了InnerArraySort方法，参数是数组，数组长度，比较函数。再看看InnerArraySort方法是如何处理的。\n\n### InnerArraySort方法源码\n\n```\nfunction InnerArraySort(array, length, comparefn) {\n  // In-place QuickSort algorithm.\n  // For short (length <= 10) arrays, insertion sort is used for efficiency.\n\n  if (!IS_CALLABLE(comparefn)) {\n    comparefn = function (x, y) {\n      if (x === y) return 0;\n      if (%_IsSmi(x) && %_IsSmi(y)) {\n        return %SmiLexicographicCompare(x, y);\n      }\n      x = TO_STRING(x);\n      y = TO_STRING(y);\n      if (x == y) return 0;\n      else return x < y ? -1 : 1;\n    };\n  }\n  function InsertionSort(a, from, to) {\n    ...\n  };\n ...\n  function QuickSort(a, from, to) {\n    var third_index = 0;\n    while (true) {\n      // Insertion sort is faster for short arrays.\n      if (to - from <= 10) {\n        InsertionSort(a, from, to);\n        return;\n      }\n      if (to - from > 1000) {\n        third_index = GetThirdIndex(a, from, to);\n      } else {\n        third_index = from + ((to - from) >> 1);\n      }\n      // Find a pivot as the median of first, last and middle element.\n      var v0 = a[from];\n      var v1 = a[to - 1];\n      var v2 = a[third_index];\n      var c01 = comparefn(v0, v1);\n      if (c01 > 0) {\n        // v1 < v0, so swap them.\n        var tmp = v0;\n        v0 = v1;\n        v1 = tmp;\n      } // v0 <= v1.\n      var c02 = comparefn(v0, v2);\n      if (c02 >= 0) {\n        // v2 <= v0 <= v1.\n        var tmp = v0;\n        v0 = v2;\n        v2 = v1;\n        v1 = tmp;\n      } else {\n        // v0 <= v1 && v0 < v2\n        var c12 = comparefn(v1, v2);\n        if (c12 > 0) {\n          // v0 <= v2 < v1\n          var tmp = v1;\n          v1 = v2;\n          v2 = tmp;\n        }\n      }\n      // v0 <= v1 <= v2\n      a[from] = v0;\n      a[to - 1] = v2;\n      var pivot = v1;\n      var low_end = from + 1;   // Upper bound of elements lower than pivot.\n      var high_start = to - 1;  // Lower bound of elements greater than pivot.\n      a[third_index] = a[low_end];\n      a[low_end] = pivot;\n\n      // From low_end to i are elements equal to pivot.\n      // From i to high_start are elements that haven't been compared yet.\n      partition: for (var i = low_end + 1; i < high_start; i++) {\n        var element = a[i];\n        var order = comparefn(element, pivot);\n        if (order < 0) {\n          a[i] = a[low_end];\n          a[low_end] = element;\n          low_end++;\n        } else if (order > 0) {\n          do {\n            high_start--;\n            if (high_start == i) break partition;\n            var top_elem = a[high_start];\n            order = comparefn(top_elem, pivot);\n          } while (order > 0);\n          a[i] = a[high_start];\n          a[high_start] = element;\n          if (order < 0) {\n            element = a[i];\n            a[i] = a[low_end];\n            a[low_end] = element;\n            low_end++;\n          }\n        }\n      }\n      if (to - high_start < low_end - from) {\n        QuickSort(a, high_start, to);\n        to = low_end;\n      } else {\n        QuickSort(a, from, low_end);\n        from = high_start;\n      }\n    }\n  };\n\n  ...\n\n  QuickSort(array, 0, num_non_undefined);\n ...\n  return array;\n}\n```\n\n这一步最重要的是QuickSort，从代码和注释中可以看出sort使用的是**插入排序和快速排序**结合的排序算法。数组长度不超过10时，使用插入排序。长度超过10使用快速排序。在数组较短时插入排序更有效率。\n\n问题终于找到了答案，心里又少了一个挂念的问题。","slug":"JS-数组sort方法用的是哪种排序算法","published":1,"updated":"2019-05-07T07:23:43.738Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdgwo1l00003sumv29j7zhm","content":"<blockquote>\n<p>JS数组的排序方法大家肯定用的太多了，那sort用的是什么排序算法呢？这个问题的答案我寻找了很久，最终在Chrome V8引擎的源码中找到了。</p>\n</blockquote>\n<p>说明一下，ECMAScript没有定义使用哪种排序算法，各个浏览器的实现方式会有不同。火狐中使用的是归并排序，下面是Chrome的sort排序算法的实现。</p>\n<h3 id=\"sort方法源码\"><a href=\"#sort方法源码\" class=\"headerlink\" title=\"sort方法源码\"></a>sort方法源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFINE_METHOD(</span><br><span class=\"line\">  GlobalArray.prototype,</span><br><span class=\"line\">  sort(comparefn) &#123;</span><br><span class=\"line\">    CHECK_OBJECT_COERCIBLE(this, &quot;Array.prototype.sort&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (!IS_UNDEFINED(comparefn) &amp;&amp; !IS_CALLABLE(comparefn)) &#123;</span><br><span class=\"line\">      throw %make_type_error(kBadSortComparisonFunction, comparefn);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var array = TO_OBJECT(this);</span><br><span class=\"line\">    var length = TO_LENGTH(array.length);</span><br><span class=\"line\">    return InnerArraySort(array, length, comparefn);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>这一步看出sort方法调用了InnerArraySort方法，参数是数组，数组长度，比较函数。再看看InnerArraySort方法是如何处理的。</p>\n<h3 id=\"InnerArraySort方法源码\"><a href=\"#InnerArraySort方法源码\" class=\"headerlink\" title=\"InnerArraySort方法源码\"></a>InnerArraySort方法源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function InnerArraySort(array, length, comparefn) &#123;</span><br><span class=\"line\">  // In-place QuickSort algorithm.</span><br><span class=\"line\">  // For short (length &lt;= 10) arrays, insertion sort is used for efficiency.</span><br><span class=\"line\"></span><br><span class=\"line\">  if (!IS_CALLABLE(comparefn)) &#123;</span><br><span class=\"line\">    comparefn = function (x, y) &#123;</span><br><span class=\"line\">      if (x === y) return 0;</span><br><span class=\"line\">      if (%_IsSmi(x) &amp;&amp; %_IsSmi(y)) &#123;</span><br><span class=\"line\">        return %SmiLexicographicCompare(x, y);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      x = TO_STRING(x);</span><br><span class=\"line\">      y = TO_STRING(y);</span><br><span class=\"line\">      if (x == y) return 0;</span><br><span class=\"line\">      else return x &lt; y ? -1 : 1;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function InsertionSort(a, from, to) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"> ...</span><br><span class=\"line\">  function QuickSort(a, from, to) &#123;</span><br><span class=\"line\">    var third_index = 0;</span><br><span class=\"line\">    while (true) &#123;</span><br><span class=\"line\">      // Insertion sort is faster for short arrays.</span><br><span class=\"line\">      if (to - from &lt;= 10) &#123;</span><br><span class=\"line\">        InsertionSort(a, from, to);</span><br><span class=\"line\">        return;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      if (to - from &gt; 1000) &#123;</span><br><span class=\"line\">        third_index = GetThirdIndex(a, from, to);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        third_index = from + ((to - from) &gt;&gt; 1);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // Find a pivot as the median of first, last and middle element.</span><br><span class=\"line\">      var v0 = a[from];</span><br><span class=\"line\">      var v1 = a[to - 1];</span><br><span class=\"line\">      var v2 = a[third_index];</span><br><span class=\"line\">      var c01 = comparefn(v0, v1);</span><br><span class=\"line\">      if (c01 &gt; 0) &#123;</span><br><span class=\"line\">        // v1 &lt; v0, so swap them.</span><br><span class=\"line\">        var tmp = v0;</span><br><span class=\"line\">        v0 = v1;</span><br><span class=\"line\">        v1 = tmp;</span><br><span class=\"line\">      &#125; // v0 &lt;= v1.</span><br><span class=\"line\">      var c02 = comparefn(v0, v2);</span><br><span class=\"line\">      if (c02 &gt;= 0) &#123;</span><br><span class=\"line\">        // v2 &lt;= v0 &lt;= v1.</span><br><span class=\"line\">        var tmp = v0;</span><br><span class=\"line\">        v0 = v2;</span><br><span class=\"line\">        v2 = v1;</span><br><span class=\"line\">        v1 = tmp;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        // v0 &lt;= v1 &amp;&amp; v0 &lt; v2</span><br><span class=\"line\">        var c12 = comparefn(v1, v2);</span><br><span class=\"line\">        if (c12 &gt; 0) &#123;</span><br><span class=\"line\">          // v0 &lt;= v2 &lt; v1</span><br><span class=\"line\">          var tmp = v1;</span><br><span class=\"line\">          v1 = v2;</span><br><span class=\"line\">          v2 = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // v0 &lt;= v1 &lt;= v2</span><br><span class=\"line\">      a[from] = v0;</span><br><span class=\"line\">      a[to - 1] = v2;</span><br><span class=\"line\">      var pivot = v1;</span><br><span class=\"line\">      var low_end = from + 1;   // Upper bound of elements lower than pivot.</span><br><span class=\"line\">      var high_start = to - 1;  // Lower bound of elements greater than pivot.</span><br><span class=\"line\">      a[third_index] = a[low_end];</span><br><span class=\"line\">      a[low_end] = pivot;</span><br><span class=\"line\"></span><br><span class=\"line\">      // From low_end to i are elements equal to pivot.</span><br><span class=\"line\">      // From i to high_start are elements that haven&apos;t been compared yet.</span><br><span class=\"line\">      partition: for (var i = low_end + 1; i &lt; high_start; i++) &#123;</span><br><span class=\"line\">        var element = a[i];</span><br><span class=\"line\">        var order = comparefn(element, pivot);</span><br><span class=\"line\">        if (order &lt; 0) &#123;</span><br><span class=\"line\">          a[i] = a[low_end];</span><br><span class=\"line\">          a[low_end] = element;</span><br><span class=\"line\">          low_end++;</span><br><span class=\"line\">        &#125; else if (order &gt; 0) &#123;</span><br><span class=\"line\">          do &#123;</span><br><span class=\"line\">            high_start--;</span><br><span class=\"line\">            if (high_start == i) break partition;</span><br><span class=\"line\">            var top_elem = a[high_start];</span><br><span class=\"line\">            order = comparefn(top_elem, pivot);</span><br><span class=\"line\">          &#125; while (order &gt; 0);</span><br><span class=\"line\">          a[i] = a[high_start];</span><br><span class=\"line\">          a[high_start] = element;</span><br><span class=\"line\">          if (order &lt; 0) &#123;</span><br><span class=\"line\">            element = a[i];</span><br><span class=\"line\">            a[i] = a[low_end];</span><br><span class=\"line\">            a[low_end] = element;</span><br><span class=\"line\">            low_end++;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      if (to - high_start &lt; low_end - from) &#123;</span><br><span class=\"line\">        QuickSort(a, high_start, to);</span><br><span class=\"line\">        to = low_end;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        QuickSort(a, from, low_end);</span><br><span class=\"line\">        from = high_start;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  QuickSort(array, 0, num_non_undefined);</span><br><span class=\"line\"> ...</span><br><span class=\"line\">  return array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这一步最重要的是QuickSort，从代码和注释中可以看出sort使用的是<strong>插入排序和快速排序</strong>结合的排序算法。数组长度不超过10时，使用插入排序。长度超过10使用快速排序。在数组较短时插入排序更有效率。</p>\n<p>问题终于找到了答案，心里又少了一个挂念的问题。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>JS数组的排序方法大家肯定用的太多了，那sort用的是什么排序算法呢？这个问题的答案我寻找了很久，最终在Chrome V8引擎的源码中找到了。</p>\n</blockquote>\n<p>说明一下，ECMAScript没有定义使用哪种排序算法，各个浏览器的实现方式会有不同。火狐中使用的是归并排序，下面是Chrome的sort排序算法的实现。</p>\n<h3 id=\"sort方法源码\"><a href=\"#sort方法源码\" class=\"headerlink\" title=\"sort方法源码\"></a>sort方法源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFINE_METHOD(</span><br><span class=\"line\">  GlobalArray.prototype,</span><br><span class=\"line\">  sort(comparefn) &#123;</span><br><span class=\"line\">    CHECK_OBJECT_COERCIBLE(this, &quot;Array.prototype.sort&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (!IS_UNDEFINED(comparefn) &amp;&amp; !IS_CALLABLE(comparefn)) &#123;</span><br><span class=\"line\">      throw %make_type_error(kBadSortComparisonFunction, comparefn);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var array = TO_OBJECT(this);</span><br><span class=\"line\">    var length = TO_LENGTH(array.length);</span><br><span class=\"line\">    return InnerArraySort(array, length, comparefn);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<p>这一步看出sort方法调用了InnerArraySort方法，参数是数组，数组长度，比较函数。再看看InnerArraySort方法是如何处理的。</p>\n<h3 id=\"InnerArraySort方法源码\"><a href=\"#InnerArraySort方法源码\" class=\"headerlink\" title=\"InnerArraySort方法源码\"></a>InnerArraySort方法源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function InnerArraySort(array, length, comparefn) &#123;</span><br><span class=\"line\">  // In-place QuickSort algorithm.</span><br><span class=\"line\">  // For short (length &lt;= 10) arrays, insertion sort is used for efficiency.</span><br><span class=\"line\"></span><br><span class=\"line\">  if (!IS_CALLABLE(comparefn)) &#123;</span><br><span class=\"line\">    comparefn = function (x, y) &#123;</span><br><span class=\"line\">      if (x === y) return 0;</span><br><span class=\"line\">      if (%_IsSmi(x) &amp;&amp; %_IsSmi(y)) &#123;</span><br><span class=\"line\">        return %SmiLexicographicCompare(x, y);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      x = TO_STRING(x);</span><br><span class=\"line\">      y = TO_STRING(y);</span><br><span class=\"line\">      if (x == y) return 0;</span><br><span class=\"line\">      else return x &lt; y ? -1 : 1;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function InsertionSort(a, from, to) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"> ...</span><br><span class=\"line\">  function QuickSort(a, from, to) &#123;</span><br><span class=\"line\">    var third_index = 0;</span><br><span class=\"line\">    while (true) &#123;</span><br><span class=\"line\">      // Insertion sort is faster for short arrays.</span><br><span class=\"line\">      if (to - from &lt;= 10) &#123;</span><br><span class=\"line\">        InsertionSort(a, from, to);</span><br><span class=\"line\">        return;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      if (to - from &gt; 1000) &#123;</span><br><span class=\"line\">        third_index = GetThirdIndex(a, from, to);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        third_index = from + ((to - from) &gt;&gt; 1);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // Find a pivot as the median of first, last and middle element.</span><br><span class=\"line\">      var v0 = a[from];</span><br><span class=\"line\">      var v1 = a[to - 1];</span><br><span class=\"line\">      var v2 = a[third_index];</span><br><span class=\"line\">      var c01 = comparefn(v0, v1);</span><br><span class=\"line\">      if (c01 &gt; 0) &#123;</span><br><span class=\"line\">        // v1 &lt; v0, so swap them.</span><br><span class=\"line\">        var tmp = v0;</span><br><span class=\"line\">        v0 = v1;</span><br><span class=\"line\">        v1 = tmp;</span><br><span class=\"line\">      &#125; // v0 &lt;= v1.</span><br><span class=\"line\">      var c02 = comparefn(v0, v2);</span><br><span class=\"line\">      if (c02 &gt;= 0) &#123;</span><br><span class=\"line\">        // v2 &lt;= v0 &lt;= v1.</span><br><span class=\"line\">        var tmp = v0;</span><br><span class=\"line\">        v0 = v2;</span><br><span class=\"line\">        v2 = v1;</span><br><span class=\"line\">        v1 = tmp;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        // v0 &lt;= v1 &amp;&amp; v0 &lt; v2</span><br><span class=\"line\">        var c12 = comparefn(v1, v2);</span><br><span class=\"line\">        if (c12 &gt; 0) &#123;</span><br><span class=\"line\">          // v0 &lt;= v2 &lt; v1</span><br><span class=\"line\">          var tmp = v1;</span><br><span class=\"line\">          v1 = v2;</span><br><span class=\"line\">          v2 = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      // v0 &lt;= v1 &lt;= v2</span><br><span class=\"line\">      a[from] = v0;</span><br><span class=\"line\">      a[to - 1] = v2;</span><br><span class=\"line\">      var pivot = v1;</span><br><span class=\"line\">      var low_end = from + 1;   // Upper bound of elements lower than pivot.</span><br><span class=\"line\">      var high_start = to - 1;  // Lower bound of elements greater than pivot.</span><br><span class=\"line\">      a[third_index] = a[low_end];</span><br><span class=\"line\">      a[low_end] = pivot;</span><br><span class=\"line\"></span><br><span class=\"line\">      // From low_end to i are elements equal to pivot.</span><br><span class=\"line\">      // From i to high_start are elements that haven&apos;t been compared yet.</span><br><span class=\"line\">      partition: for (var i = low_end + 1; i &lt; high_start; i++) &#123;</span><br><span class=\"line\">        var element = a[i];</span><br><span class=\"line\">        var order = comparefn(element, pivot);</span><br><span class=\"line\">        if (order &lt; 0) &#123;</span><br><span class=\"line\">          a[i] = a[low_end];</span><br><span class=\"line\">          a[low_end] = element;</span><br><span class=\"line\">          low_end++;</span><br><span class=\"line\">        &#125; else if (order &gt; 0) &#123;</span><br><span class=\"line\">          do &#123;</span><br><span class=\"line\">            high_start--;</span><br><span class=\"line\">            if (high_start == i) break partition;</span><br><span class=\"line\">            var top_elem = a[high_start];</span><br><span class=\"line\">            order = comparefn(top_elem, pivot);</span><br><span class=\"line\">          &#125; while (order &gt; 0);</span><br><span class=\"line\">          a[i] = a[high_start];</span><br><span class=\"line\">          a[high_start] = element;</span><br><span class=\"line\">          if (order &lt; 0) &#123;</span><br><span class=\"line\">            element = a[i];</span><br><span class=\"line\">            a[i] = a[low_end];</span><br><span class=\"line\">            a[low_end] = element;</span><br><span class=\"line\">            low_end++;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      if (to - high_start &lt; low_end - from) &#123;</span><br><span class=\"line\">        QuickSort(a, high_start, to);</span><br><span class=\"line\">        to = low_end;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        QuickSort(a, from, low_end);</span><br><span class=\"line\">        from = high_start;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  QuickSort(array, 0, num_non_undefined);</span><br><span class=\"line\"> ...</span><br><span class=\"line\">  return array;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这一步最重要的是QuickSort，从代码和注释中可以看出sort使用的是<strong>插入排序和快速排序</strong>结合的排序算法。数组长度不超过10时，使用插入排序。长度超过10使用快速排序。在数组较短时插入排序更有效率。</p>\n<p>问题终于找到了答案，心里又少了一个挂念的问题。</p>\n"},{"title":"Uncaught TypeError: Converting circular structure to JSON 解决办法","date":"2019-04-08T07:14:55.000Z","cover":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3214278065,3431631512&fm=26&gp=0.jpg","_content":"\n今天遇到一个问题，使用JSON.stringify()方法时报错  Converting circular structure to JSON\n\n报错的原因在于： \n在请求中传递的对象有一个循环引用\n\n例如：\n\nvar a = {b};\n\nb.parent = a;\n\n \n\n只要修改如下，即可解决问题\n\n ```\n   var cache = [];\n        var str = JSON.stringify(org, function(key, value) {\n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in our collection\n                cache.push(value);\n            }\n            return value;\n        });\n        cache = null; // Enable garbage collection\n```\n\n留作记录，后续查其原理。","source":"_posts/converting.md","raw":"---\ntitle: \"Uncaught TypeError: Converting circular structure to JSON 解决办法\"\ndate: 2019-04-08 15:14:55\ntags: \n    - javaScript\ncategories: \n    - javaScript\ncover: https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3214278065,3431631512&fm=26&gp=0.jpg\n---\n\n今天遇到一个问题，使用JSON.stringify()方法时报错  Converting circular structure to JSON\n\n报错的原因在于： \n在请求中传递的对象有一个循环引用\n\n例如：\n\nvar a = {b};\n\nb.parent = a;\n\n \n\n只要修改如下，即可解决问题\n\n ```\n   var cache = [];\n        var str = JSON.stringify(org, function(key, value) {\n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in our collection\n                cache.push(value);\n            }\n            return value;\n        });\n        cache = null; // Enable garbage collection\n```\n\n留作记录，后续查其原理。","slug":"converting","published":1,"updated":"2019-05-07T07:28:28.910Z","_id":"cjvdgy9vs00009cumtp2e23nz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天遇到一个问题，使用JSON.stringify()方法时报错  Converting circular structure to JSON</p>\n<p>报错的原因在于：<br>在请求中传递的对象有一个循环引用</p>\n<p>例如：</p>\n<p>var a = {b};</p>\n<p>b.parent = a;</p>\n<p>只要修改如下，即可解决问题</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   var cache = [];</span><br><span class=\"line\">        var str = JSON.stringify(org, function(key, value) &#123;</span><br><span class=\"line\">            if (typeof value === &apos;object&apos; &amp;&amp; value !== null) &#123;</span><br><span class=\"line\">                if (cache.indexOf(value) !== -1) &#123;</span><br><span class=\"line\">                    // Circular reference found, discard key</span><br><span class=\"line\">                    return;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                // Store value in our collection</span><br><span class=\"line\">                cache.push(value);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return value;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        cache = null; // Enable garbage collection</span><br></pre></td></tr></table></figure>\n<p>留作记录，后续查其原理。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天遇到一个问题，使用JSON.stringify()方法时报错  Converting circular structure to JSON</p>\n<p>报错的原因在于：<br>在请求中传递的对象有一个循环引用</p>\n<p>例如：</p>\n<p>var a = {b};</p>\n<p>b.parent = a;</p>\n<p>只要修改如下，即可解决问题</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   var cache = [];</span><br><span class=\"line\">        var str = JSON.stringify(org, function(key, value) &#123;</span><br><span class=\"line\">            if (typeof value === &apos;object&apos; &amp;&amp; value !== null) &#123;</span><br><span class=\"line\">                if (cache.indexOf(value) !== -1) &#123;</span><br><span class=\"line\">                    // Circular reference found, discard key</span><br><span class=\"line\">                    return;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                // Store value in our collection</span><br><span class=\"line\">                cache.push(value);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return value;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        cache = null; // Enable garbage collection</span><br></pre></td></tr></table></figure>\n<p>留作记录，后续查其原理。</p>\n"},{"title":"node遍历文件并读取内容","date":"2018-11-12T07:14:55.000Z","cover":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557224094681&di=46e2d144b53e77c806c5182fd18678b8&imgtype=0&src=http%3A%2F%2Fww2.sinaimg.cn%2Flarge%2F005SiNxyjw1exp8pwu2b8j30go08cjro.jpg","_content":"```\nvar fs = require('fs');\nvar path = require('path');//解析需要遍历的文件夹\nvar filePath = path.resolve('./dist');\n//调用文件遍历方法\nfileDisplay(filePath);\n//文件遍历方法\nfunction fileDisplay(filePath){\n    //根据文件路径读取文件，返回文件列表\n    fs.readdir(filePath,function(err,files){\n        if(err){\n            console.warn(err)\n        }else{\n            //遍历读取到的文件列表\n            files.forEach(function(filename){\n                //获取当前文件的绝对路径\n                var filedir = path.join(filePath, filename);\n                //根据文件路径获取文件信息，返回一个fs.Stats对象\n                fs.stat(filedir,function(eror, stats){\n                    if(eror){\n                        console.warn('获取文件stats失败');\n                    }else{\n                        var isFile = stats.isFile();//是文件\n                        var isDir = stats.isDirectory();//是文件夹\n                        if(isFile){\n                            console.log(filedir);\n　　　　　　　　　　　　　　　　　// 读取文件内容\n                            var content = fs.readFileSync(filedir, 'utf-8');\n                            console.log(content);\n                        }\n                        if(isDir){\n                            fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件\n                        }\n                    }\n                })\n            });\n        }\n    });\n}\n\n\n\n如果碰到有中文不能解析的html，这样写\n\n\nvar cheerio = require('cheerio');\nvar iconv = require('iconv-lite');\nvar myHtml = fs.readFileSync(\"index.html\");\nvar myHtml2 = iconv.decode(myHtml, 'gbk');\nconsole.log(myHtml2);\n```","source":"_posts/node_fs.md","raw":"---\ntitle: \"node遍历文件并读取内容\"\ndate: 2018-11-12 15:14:55\ntags: \n    - fs\ncategories: \n    - nodeJs\ncover: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1557224094681&di=46e2d144b53e77c806c5182fd18678b8&imgtype=0&src=http%3A%2F%2Fww2.sinaimg.cn%2Flarge%2F005SiNxyjw1exp8pwu2b8j30go08cjro.jpg\n---\n```\nvar fs = require('fs');\nvar path = require('path');//解析需要遍历的文件夹\nvar filePath = path.resolve('./dist');\n//调用文件遍历方法\nfileDisplay(filePath);\n//文件遍历方法\nfunction fileDisplay(filePath){\n    //根据文件路径读取文件，返回文件列表\n    fs.readdir(filePath,function(err,files){\n        if(err){\n            console.warn(err)\n        }else{\n            //遍历读取到的文件列表\n            files.forEach(function(filename){\n                //获取当前文件的绝对路径\n                var filedir = path.join(filePath, filename);\n                //根据文件路径获取文件信息，返回一个fs.Stats对象\n                fs.stat(filedir,function(eror, stats){\n                    if(eror){\n                        console.warn('获取文件stats失败');\n                    }else{\n                        var isFile = stats.isFile();//是文件\n                        var isDir = stats.isDirectory();//是文件夹\n                        if(isFile){\n                            console.log(filedir);\n　　　　　　　　　　　　　　　　　// 读取文件内容\n                            var content = fs.readFileSync(filedir, 'utf-8');\n                            console.log(content);\n                        }\n                        if(isDir){\n                            fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件\n                        }\n                    }\n                })\n            });\n        }\n    });\n}\n\n\n\n如果碰到有中文不能解析的html，这样写\n\n\nvar cheerio = require('cheerio');\nvar iconv = require('iconv-lite');\nvar myHtml = fs.readFileSync(\"index.html\");\nvar myHtml2 = iconv.decode(myHtml, 'gbk');\nconsole.log(myHtml2);\n```","slug":"node_fs","published":1,"updated":"2019-05-07T07:26:58.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvdh0uih0000jcumt9262xte","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fs = require(&apos;fs&apos;);</span><br><span class=\"line\">var path = require(&apos;path&apos;);//解析需要遍历的文件夹</span><br><span class=\"line\">var filePath = path.resolve(&apos;./dist&apos;);</span><br><span class=\"line\">//调用文件遍历方法</span><br><span class=\"line\">fileDisplay(filePath);</span><br><span class=\"line\">//文件遍历方法</span><br><span class=\"line\">function fileDisplay(filePath)&#123;</span><br><span class=\"line\">    //根据文件路径读取文件，返回文件列表</span><br><span class=\"line\">    fs.readdir(filePath,function(err,files)&#123;</span><br><span class=\"line\">        if(err)&#123;</span><br><span class=\"line\">            console.warn(err)</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            //遍历读取到的文件列表</span><br><span class=\"line\">            files.forEach(function(filename)&#123;</span><br><span class=\"line\">                //获取当前文件的绝对路径</span><br><span class=\"line\">                var filedir = path.join(filePath, filename);</span><br><span class=\"line\">                //根据文件路径获取文件信息，返回一个fs.Stats对象</span><br><span class=\"line\">                fs.stat(filedir,function(eror, stats)&#123;</span><br><span class=\"line\">                    if(eror)&#123;</span><br><span class=\"line\">                        console.warn(&apos;获取文件stats失败&apos;);</span><br><span class=\"line\">                    &#125;else&#123;</span><br><span class=\"line\">                        var isFile = stats.isFile();//是文件</span><br><span class=\"line\">                        var isDir = stats.isDirectory();//是文件夹</span><br><span class=\"line\">                        if(isFile)&#123;</span><br><span class=\"line\">                            console.log(filedir);</span><br><span class=\"line\">　　　　　　　　　　　　　　　　　// 读取文件内容</span><br><span class=\"line\">                            var content = fs.readFileSync(filedir, &apos;utf-8&apos;);</span><br><span class=\"line\">                            console.log(content);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        if(isDir)&#123;</span><br><span class=\"line\">                            fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如果碰到有中文不能解析的html，这样写</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">var cheerio = require(&apos;cheerio&apos;);</span><br><span class=\"line\">var iconv = require(&apos;iconv-lite&apos;);</span><br><span class=\"line\">var myHtml = fs.readFileSync(&quot;index.html&quot;);</span><br><span class=\"line\">var myHtml2 = iconv.decode(myHtml, &apos;gbk&apos;);</span><br><span class=\"line\">console.log(myHtml2);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var fs = require(&apos;fs&apos;);</span><br><span class=\"line\">var path = require(&apos;path&apos;);//解析需要遍历的文件夹</span><br><span class=\"line\">var filePath = path.resolve(&apos;./dist&apos;);</span><br><span class=\"line\">//调用文件遍历方法</span><br><span class=\"line\">fileDisplay(filePath);</span><br><span class=\"line\">//文件遍历方法</span><br><span class=\"line\">function fileDisplay(filePath)&#123;</span><br><span class=\"line\">    //根据文件路径读取文件，返回文件列表</span><br><span class=\"line\">    fs.readdir(filePath,function(err,files)&#123;</span><br><span class=\"line\">        if(err)&#123;</span><br><span class=\"line\">            console.warn(err)</span><br><span class=\"line\">        &#125;else&#123;</span><br><span class=\"line\">            //遍历读取到的文件列表</span><br><span class=\"line\">            files.forEach(function(filename)&#123;</span><br><span class=\"line\">                //获取当前文件的绝对路径</span><br><span class=\"line\">                var filedir = path.join(filePath, filename);</span><br><span class=\"line\">                //根据文件路径获取文件信息，返回一个fs.Stats对象</span><br><span class=\"line\">                fs.stat(filedir,function(eror, stats)&#123;</span><br><span class=\"line\">                    if(eror)&#123;</span><br><span class=\"line\">                        console.warn(&apos;获取文件stats失败&apos;);</span><br><span class=\"line\">                    &#125;else&#123;</span><br><span class=\"line\">                        var isFile = stats.isFile();//是文件</span><br><span class=\"line\">                        var isDir = stats.isDirectory();//是文件夹</span><br><span class=\"line\">                        if(isFile)&#123;</span><br><span class=\"line\">                            console.log(filedir);</span><br><span class=\"line\">　　　　　　　　　　　　　　　　　// 读取文件内容</span><br><span class=\"line\">                            var content = fs.readFileSync(filedir, &apos;utf-8&apos;);</span><br><span class=\"line\">                            console.log(content);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        if(isDir)&#123;</span><br><span class=\"line\">                            fileDisplay(filedir);//递归，如果是文件夹，就继续遍历该文件夹下面的文件</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">如果碰到有中文不能解析的html，这样写</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">var cheerio = require(&apos;cheerio&apos;);</span><br><span class=\"line\">var iconv = require(&apos;iconv-lite&apos;);</span><br><span class=\"line\">var myHtml = fs.readFileSync(&quot;index.html&quot;);</span><br><span class=\"line\">var myHtml2 = iconv.decode(myHtml, &apos;gbk&apos;);</span><br><span class=\"line\">console.log(myHtml2);</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjvdgnroh00007wumyy229od4","category_id":"cjvdgnrom00017wumoarih6ic","_id":"cjvdgnroo00047wumjc20otfn"},{"post_id":"cjvdgnrp500087wumx8njlgru","category_id":"cjvdgnrom00017wumoarih6ic","_id":"cjvdgnrp9000c7wumv0s8feif"},{"post_id":"cjvdgnrp600097wumylcenbqi","category_id":"cjvdgnrom00017wumoarih6ic","_id":"cjvdgnrpb000d7wum093yvoqv"},{"post_id":"cjvdgnrpj000j7wumz4io9k46","category_id":"cjvdgnrom00017wumoarih6ic","_id":"cjvdgnrpl000l7wumdsodi4r6"},{"post_id":"cjvdgnrpq000n7wumyljbvj27","category_id":"cjvdgnrom00017wumoarih6ic","_id":"cjvdgnrps000p7wumq1yptxk6"},{"post_id":"cjvdgwo1l00003sumv29j7zhm","category_id":"cjvdgwo1q00013sumu11b4835","_id":"cjvdgwo1w00043sumhd0w8s8t"},{"post_id":"cjvdgy9vs00009cumtp2e23nz","category_id":"cjvdgwo1q00013sumu11b4835","_id":"cjvdgy9vz00029cum4jtgnuiu"},{"post_id":"cjvdh0uih0000jcumt9262xte","category_id":"cjvdh0uiw0001jcumhe689x58","_id":"cjvdh0uj90004jcumyr2rrnz1"}],"PostTag":[{"post_id":"cjvdgnroh00007wumyy229od4","tag_id":"cjvdgnron00027wumkxy6gnxn","_id":"cjvdgnroo00037wumlpcxpryj"},{"post_id":"cjvdgnrp500087wumx8njlgru","tag_id":"cjvdgnrp7000a7wum5olc7vny","_id":"cjvdgnrpc000f7wumnbnipysn"},{"post_id":"cjvdgnrp600097wumylcenbqi","tag_id":"cjvdgnrp7000a7wum5olc7vny","_id":"cjvdgnrpd000h7wumovjrg057"},{"post_id":"cjvdgnrp8000b7wumb47ggbqw","tag_id":"cjvdgnrpd000g7wumc5jrs59u","_id":"cjvdgnrpd000i7wuml4bqht1w"},{"post_id":"cjvdgnrpj000j7wumz4io9k46","tag_id":"cjvdgnrpk000k7wumgx3obdy0","_id":"cjvdgnrpl000m7wumgen7jdc8"},{"post_id":"cjvdgnrpq000n7wumyljbvj27","tag_id":"cjvdgnrpr000o7wummp6ym1o8","_id":"cjvdgnrps000q7wumhpow32jq"},{"post_id":"cjvdgwo1l00003sumv29j7zhm","tag_id":"cjvdgwo1u00023sumudpw7f99","_id":"cjvdgwo1w00033sum34evqkf3"},{"post_id":"cjvdgy9vs00009cumtp2e23nz","tag_id":"cjvdgwo1u00023sumudpw7f99","_id":"cjvdgy9vy00019cumepui5ecv"},{"post_id":"cjvdh0uih0000jcumt9262xte","tag_id":"cjvdh0uj30002jcumwhrz5hwf","_id":"cjvdh0uj80003jcumginhxvrc"}],"Tag":[{"name":"前端工程化","_id":"cjvdgnron00027wumkxy6gnxn"},{"name":"前端性能","_id":"cjvdgnrp7000a7wum5olc7vny"},{"name":"NodeJs","_id":"cjvdgnrpd000g7wumc5jrs59u"},{"name":"前端规范","_id":"cjvdgnrpk000k7wumgx3obdy0"},{"name":"MD","_id":"cjvdgnrpr000o7wummp6ym1o8"},{"name":"javaScript","_id":"cjvdgwo1u00023sumudpw7f99"},{"name":"fs","_id":"cjvdh0uj30002jcumwhrz5hwf"}]}}